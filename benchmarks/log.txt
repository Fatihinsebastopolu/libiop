Reset time counters for profiling
Selected parameters:
- log_n_min = 8
- log_n_max = 20
- security_level = 128
- LDT_reducer_soundness_type = heuristic
- FRI_soundness_type = heuristic
- is_multiplicative = true
- field_size = 181
- make_zk = false
- hash_enum = blake2b

================================================================================

(enter) Check satisfiability of R1CS example	[             ]	(0.0036s x1.00 from start)
(leave) Check satisfiability of R1CS example	[0.0001s x0.99]	(0.0036s x1.00 from start)

* R1CS number of constraints: 256
* R1CS number of variables: 255
* R1CS number of variables for primary input: 15
* R1CS number of variables for auxiliary input: 240
* R1CS size of constraint system (bytes): 19296
* R1CS size of primary input (bytes): 360
* R1CS size of auxiliary input (bytes): 5760

(enter) Aurora SNARK prover                	[             ]	(0.0036s x1.00 from start)
  
Aurora SNARK parameters
  * security parameter (bits) = 128
  * RS extra dimensions = 5
  * LDT reducer soundness type = heuristic
  * FRI soundness type = heuristic
  * zero-knowledge = false
  * domain type = multiplicative coset

Aurora IOP parameters
  * target security parameter = 128
  * achieved security parameter = 120.0
  * RS extra dimensions = 5
  * codeword domain dim = 13
  * constraint domain dim = 8
  * variable domain dim = 8
  * query bound = 0
  * make zk = false
  * domain type = multiplicative coset

Multi lincheck parameters
  * target interactive soundness error (bits) = 131
  * achieved interactive soundness error (bits) = 172.0
  * interactive repetitions = 1
  * constraint domain dim = 8
  * make zk = false
  * domain type = multiplicative coset

LDT instance reducer parameters
  * soundness type = heuristic
  * target interactive soundness error (bits) = 131
  * achieved interactive soundness error (bits) = 167.0
  * codeword domain dim = 13
  * max tested degree bound = 256
  * max constraint degree bound = 511
  * absolute proximity parameter = 7680
  * fractional proximity parameter = 0.937500
  * num output LDT instances = 1

FRI parameters
  * soundness type = heuristic
  * target interactive soundness error (bits) = 131
  * achieved interactive soundness error (bits) = 180.0
  * target query soundness error (bits) = 118
  * achieved query soundness error (bits) = 120.0
  * codeword domain dim = 13
  * effective proximity parameter = 0.937500
  * number of interactive repetitions = 1
  * number of query repetitions = 30
  * localization parameter array = { 1 2 2 2 }
  * number of reductions = 4

BCS parameters
  * digest_len (bytes) = 32
  * digest_len (bits) = 256
  * hash_type = blake2b
  (enter) Submit witness oracles             	[             ]	(0.0041s x1.00 from start)
    (enter) Compute randomized f_w             	[             ]	(0.0041s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(0.0041s x1.00 from start)
        * Vector size: 16
        * Coset size: 16
      (leave) Call to multiplicative_IFFT_wrapper	[0.0000s x1.03]	(0.0041s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(0.0041s x1.00 from start)
        * Vector size: 16
        * Subgroup size: 256
      (leave) Call to multiplicative_FFT_wrapper 	[0.0000s x1.01]	(0.0041s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(0.0041s x1.00 from start)
        * Vector size: 256
        * Coset size: 256
      (leave) Call to multiplicative_IFFT_wrapper	[0.0001s x1.00]	(0.0042s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(0.0043s x1.00 from start)
        * Vector size: 240
        * Subgroup size: 8192
      (leave) Call to multiplicative_FFT_wrapper 	[0.0019s x1.00]	(0.0061s x1.00 from start)
    (leave) Compute randomized f_w             	[0.0021s x1.00]	(0.0061s x1.00 from start)
    (enter) Compute A/B/Cz                     	[             ]	(0.0061s x1.00 from start)
    (leave) Compute A/B/Cz                     	[0.0001s x1.00]	(0.0062s x1.00 from start)
    (enter) Compute f_{A/B/Cz} over codeword domain	[             ]	(0.0062s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(0.0062s x1.00 from start)
        * Vector size: 256
        * Coset size: 256
      (leave) Call to multiplicative_IFFT_wrapper	[0.0001s x1.00]	(0.0063s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(0.0063s x1.00 from start)
        * Vector size: 256
        * Coset size: 256
      (leave) Call to multiplicative_IFFT_wrapper	[0.0001s x1.00]	(0.0064s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(0.0064s x1.00 from start)
        * Vector size: 256
        * Coset size: 256
      (leave) Call to multiplicative_IFFT_wrapper	[0.0001s x1.00]	(0.0065s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(0.0065s x1.00 from start)
        * Vector size: 256
        * Subgroup size: 8192
      (leave) Call to multiplicative_FFT_wrapper 	[0.0016s x1.00]	(0.0081s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(0.0081s x1.00 from start)
        * Vector size: 256
        * Subgroup size: 8192
      (leave) Call to multiplicative_FFT_wrapper 	[0.0016s x1.00]	(0.0097s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(0.0097s x1.00 from start)
        * Vector size: 256
        * Subgroup size: 8192
      (leave) Call to multiplicative_FFT_wrapper 	[0.0016s x1.00]	(0.0113s x1.00 from start)
    (leave) Compute f_{A/B/Cz} over codeword domain	[0.0051s x1.00]	(0.0113s x1.00 from start)
    (enter) Call IOP oracle submission routines	[             ]	(0.0113s x1.00 from start)
    (leave) Call IOP oracle submission routines	[0.0000s x1.10]	(0.0113s x1.00 from start)
  (leave) Submit witness oracles             	[0.0073s x1.00]	(0.0113s x1.00 from start)
  (enter) LDT Reducer: Submit masking polynomial	[             ]	(0.0113s x1.00 from start)
  (leave) LDT Reducer: Submit masking polynomial	[0.0000s x1.25]	(0.0113s x1.00 from start)
  (enter) Finish prover round                	[             ]	(0.0114s x1.00 from start)
    (enter) Construct Merkle tree              	[             ]	(0.0114s x1.00 from start)
    (leave) Construct Merkle tree              	[0.0031s x1.00]	(0.0145s x1.00 from start)
  (leave) Finish prover round                	[0.0032s x1.00]	(0.0145s x1.00 from start)
  (enter) pow                                	[             ]	(0.0145s x1.00 from start)
  (leave) pow                                	[0.0000s x1.06]	(0.0145s x1.00 from start)
  (enter) multi_lincheck: Calculate and submit proof	[             ]	(0.0145s x1.00 from start)
    (enter) multi_lincheck compute alpha powers	[             ]	(0.0145s x1.00 from start)
    (leave) multi_lincheck compute alpha powers	[0.0000s x1.02]	(0.0145s x1.00 from start)
    (enter) multi_lincheck compute p_alpha_prime	[             ]	(0.0146s x1.00 from start)
    (leave) multi_lincheck compute p_alpha_prime	[0.0000s x1.04]	(0.0146s x1.00 from start)
    (enter) multi_lincheck compute p_alpha_ABC 	[             ]	(0.0146s x1.00 from start)
    (leave) multi_lincheck compute p_alpha_ABC 	[0.0001s x1.00]	(0.0146s x1.00 from start)
    (enter) multi_lincheck IFFT p_alphas       	[             ]	(0.0146s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(0.0147s x1.00 from start)
        * Vector size: 256
        * Coset size: 256
      (leave) Call to multiplicative_IFFT_wrapper	[0.0001s x1.00]	(0.0147s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(0.0148s x1.00 from start)
        * Vector size: 256
        * Coset size: 256
      (leave) Call to multiplicative_IFFT_wrapper	[0.0001s x1.00]	(0.0148s x1.00 from start)
    (leave) multi_lincheck IFFT p_alphas       	[0.0002s x1.00]	(0.0148s x1.00 from start)
    (enter) fz evaluated contents              	[             ]	(0.0149s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(0.0150s x1.00 from start)
        * Vector size: 16
        * Coset size: 16
      (leave) Call to multiplicative_IFFT_wrapper	[0.0000s x1.00]	(0.0150s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(0.0150s x1.00 from start)
        * Vector size: 16
        * Subgroup size: 8192
      (leave) Call to multiplicative_FFT_wrapper 	[0.0008s x1.00]	(0.0158s x1.00 from start)
    (leave) fz evaluated contents              	[0.0013s x1.00]	(0.0162s x1.00 from start)
    (enter) multi_lincheck evaluated contents  	[             ]	(0.0162s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(0.0162s x1.00 from start)
        * Vector size: 256
        * Subgroup size: 8192
      (leave) Call to multiplicative_FFT_wrapper 	[0.0015s x1.00]	(0.0177s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(0.0178s x1.00 from start)
        * Vector size: 256
        * Subgroup size: 8192
      (leave) Call to multiplicative_FFT_wrapper 	[0.0015s x1.00]	(0.0193s x1.00 from start)
    (leave) multi_lincheck evaluated contents  	[0.0045s x1.00]	(0.0207s x1.00 from start)
    (enter) Call to multiplicative_IFFT_wrapper	[             ]	(0.0210s x1.00 from start)
      * Vector size: 512
      * Coset size: 512
    (leave) Call to multiplicative_IFFT_wrapper	[0.0002s x1.00]	(0.0212s x1.00 from start)
    (enter) Call to multiplicative_FFT_wrapper 	[             ]	(0.0212s x1.00 from start)
      * Vector size: 255
      * Subgroup size: 8192
    (leave) Call to multiplicative_FFT_wrapper 	[0.0015s x1.00]	(0.0227s x1.00 from start)
  (leave) multi_lincheck: Calculate and submit proof	[0.0082s x1.00]	(0.0228s x1.00 from start)
  (enter) Finish prover round                	[             ]	(0.0228s x1.00 from start)
    (enter) Construct Merkle tree              	[             ]	(0.0228s x1.00 from start)
    (leave) Construct Merkle tree              	[0.0024s x1.00]	(0.0251s x1.00 from start)
  (leave) Finish prover round                	[0.0024s x1.00]	(0.0252s x1.00 from start)
  (enter) pow                                	[             ]	(0.0252s x1.00 from start)
  (leave) pow                                	[0.0000s x1.13]	(0.0252s x1.00 from start)
  (enter) LDT Reducer: Calculate and submit proof	[             ]	(0.0252s x1.00 from start)
    (enter) Sumcheck: g evaluated contents     	[             ]	(0.0252s x1.00 from start)
    (leave) Sumcheck: g evaluated contents     	[0.0008s x1.00]	(0.0260s x1.00 from start)
    (enter) rowcheck evaluated contents        	[             ]	(0.0260s x1.00 from start)
    (leave) rowcheck evaluated contents        	[0.0006s x1.00]	(0.0266s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(0.0296s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0013s x1.00]	(0.0309s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(0.0309s x1.00 from start)
      (enter) Finish prover round                	[             ]	(0.0309s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(0.0309s x1.00 from start)
        (leave) Construct Merkle tree              	[0.0006s x1.00]	(0.0315s x1.00 from start)
      (leave) Finish prover round                	[0.0006s x1.00]	(0.0315s x1.00 from start)
      (enter) pow                                	[             ]	(0.0315s x1.00 from start)
      (leave) pow                                	[0.0000s x1.09]	(0.0315s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0006s x1.00]	(0.0315s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(0.0315s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0005s x1.00]	(0.0321s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(0.0321s x1.00 from start)
      (enter) Finish prover round                	[             ]	(0.0321s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(0.0321s x1.00 from start)
        (leave) Construct Merkle tree              	[0.0002s x1.00]	(0.0322s x1.00 from start)
      (leave) Finish prover round                	[0.0002s x1.00]	(0.0322s x1.00 from start)
      (enter) pow                                	[             ]	(0.0322s x1.00 from start)
      (leave) pow                                	[0.0000s x1.10]	(0.0322s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0002s x1.00]	(0.0323s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(0.0323s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0001s x1.00]	(0.0324s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(0.0324s x1.00 from start)
      (enter) Finish prover round                	[             ]	(0.0324s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(0.0324s x1.00 from start)
        (leave) Construct Merkle tree              	[0.0000s x1.00]	(0.0325s x1.00 from start)
      (leave) Finish prover round                	[0.0001s x1.00]	(0.0325s x1.00 from start)
      (enter) pow                                	[             ]	(0.0325s x1.00 from start)
      (leave) pow                                	[0.0000s x1.05]	(0.0325s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0001s x1.00]	(0.0325s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(0.0325s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0001s x1.00]	(0.0325s x1.00 from start)
    (enter) Call to multiplicative_IFFT_wrapper	[             ]	(0.0325s x1.00 from start)
      * Vector size: 64
      * Coset size: 64
    (leave) Call to multiplicative_IFFT_wrapper	[0.0000s x1.01]	(0.0326s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(0.0326s x1.00 from start)
      (enter) Finish prover round                	[             ]	(0.0326s x1.00 from start)
      (leave) Finish prover round                	[0.0000s x1.01]	(0.0326s x1.00 from start)
      (enter) pow                                	[             ]	(0.0326s x1.00 from start)
      (leave) pow                                	[0.0019s x1.00]	(0.0345s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0020s x1.00]	(0.0345s x1.00 from start)
  (leave) LDT Reducer: Calculate and submit proof	[0.0094s x1.00]	(0.0345s x1.00 from start)
  (enter) Obtain transcript                  	[             ]	(0.0345s x1.00 from start)
  (leave) Obtain transcript                  	[0.0022s x1.00]	(0.0367s x1.00 from start)
  * Total size of proof oracles (bytes): 1112064
  * Total size of Merkle tree (bytes): 610144
  * Total size of prover state (bytes): 1722208
(leave) Aurora SNARK prover                	[0.0331s x1.00]	(0.0367s x1.00 from start)

BCS parameters
* digest_len (bytes) = 32
* digest_len (bits) = 256
* hash_type = blake2b
(enter) verifier_seal_interaction_registrations	[             ]	(0.0375s x1.00 from start)
(leave) verifier_seal_interaction_registrations	[0.0005s x1.00]	(0.0380s x1.00 from start)

* Argument size in bytes (IOP): 14490
* Argument size in bytes (BCS): 19008
* Argument size in bytes (total): 33498

If we were to remove pruning of authentication paths in BCS,
the argument would have the following sizes:
* Argument size in bytes (BCS, no pruning): 44672
* Argument size in bytes (total, no pruning): 59162

total prover messages size: 46
total two to one hashes: 725
total leaves hashed: 628
total hashes: 1353

Transcript info by round
Per round IOP sizes don't include prover messages

round 0
MT_depth 12
IOP size: 5520 bytes
BCS size: 5888 bytes
number of two to one hashes: 212
number of leaves hashed: 240
oracles in round: fw, fAz, fBz, fCz, 

round 1
MT_depth 12
IOP size: 1380 bytes
BCS size: 5888 bytes
number of two to one hashes: 212
number of leaves hashed: 60
oracles in round: sumcheck h, 

round 2
MT_depth 10
IOP size: 2760 bytes
BCS size: 4064 bytes
number of two to one hashes: 155
number of leaves hashed: 120
oracles in round: TODO: Fill in this name (batching.tcc), 

round 3
MT_depth 8
IOP size: 2668 bytes
BCS size: 2304 bytes
number of two to one hashes: 99
number of leaves hashed: 116
oracles in round: TODO: Fill in this name (batching.tcc), 

round 4
MT_depth 6
IOP size: 2116 bytes
BCS size: 832 bytes
number of two to one hashes: 47
number of leaves hashed: 92
oracles in round: TODO: Fill in this name (batching.tcc), 


(enter) Aurora SNARK verifier              	[             ]	(0.0383s x1.00 from start)
  
Aurora SNARK parameters
  * security parameter (bits) = 128
  * RS extra dimensions = 5
  * LDT reducer soundness type = heuristic
  * FRI soundness type = heuristic
  * zero-knowledge = false
  * domain type = multiplicative coset

Aurora IOP parameters
  * target security parameter = 128
  * achieved security parameter = 120.0
  * RS extra dimensions = 5
  * codeword domain dim = 13
  * constraint domain dim = 8
  * variable domain dim = 8
  * query bound = 0
  * make zk = false
  * domain type = multiplicative coset

Multi lincheck parameters
  * target interactive soundness error (bits) = 131
  * achieved interactive soundness error (bits) = 172.0
  * interactive repetitions = 1
  * constraint domain dim = 8
  * make zk = false
  * domain type = multiplicative coset

LDT instance reducer parameters
  * soundness type = heuristic
  * target interactive soundness error (bits) = 131
  * achieved interactive soundness error (bits) = 167.0
  * codeword domain dim = 13
  * max tested degree bound = 256
  * max constraint degree bound = 511
  * absolute proximity parameter = 7680
  * fractional proximity parameter = 0.937500
  * num output LDT instances = 1

FRI parameters
  * soundness type = heuristic
  * target interactive soundness error (bits) = 131
  * achieved interactive soundness error (bits) = 180.0
  * target query soundness error (bits) = 118
  * achieved query soundness error (bits) = 120.0
  * codeword domain dim = 13
  * effective proximity parameter = 0.937500
  * number of interactive repetitions = 1
  * number of query repetitions = 30
  * localization parameter array = { 1 2 2 2 }
  * number of reductions = 4

BCS parameters
  * digest_len (bytes) = 32
  * digest_len (bits) = 256
  * hash_type = blake2b
  (enter) Aurora IOP protocol initialization and registration	[             ]	(0.0384s x1.00 from start)
    (enter) verifier_seal_interaction_registrations	[             ]	(0.0386s x1.00 from start)
    (leave) verifier_seal_interaction_registrations	[0.0005s x1.00]	(0.0391s x1.00 from start)
  (leave) Aurora IOP protocol initialization and registration	[0.0008s x1.00]	(0.0392s x1.00 from start)
  (enter) Check semantic validity of IOP transcript	[             ]	(0.0392s x1.00 from start)
  (leave) Check semantic validity of IOP transcript	[0.0000s x1.14]	(0.0392s x1.00 from start)
  (enter) Construct R1CS verifier state      	[             ]	(0.0392s x1.00 from start)
    (enter) multi_lincheck compute alpha powers	[             ]	(0.0392s x1.00 from start)
    (leave) multi_lincheck compute alpha powers	[0.0000s x1.05]	(0.0392s x1.00 from start)
    (enter) multi_lincheck compute p_alpha_prime	[             ]	(0.0392s x1.00 from start)
    (leave) multi_lincheck compute p_alpha_prime	[0.0000s x1.04]	(0.0392s x1.00 from start)
    (enter) multi_lincheck compute p_alpha_ABC 	[             ]	(0.0392s x1.00 from start)
    (leave) multi_lincheck compute p_alpha_ABC 	[0.0001s x1.00]	(0.0393s x1.00 from start)
    (enter) multi_lincheck IFFT p_alphas       	[             ]	(0.0393s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(0.0393s x1.00 from start)
        * Vector size: 256
        * Coset size: 256
      (leave) Call to multiplicative_IFFT_wrapper	[0.0001s x1.00]	(0.0394s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(0.0394s x1.00 from start)
        * Vector size: 256
        * Coset size: 256
      (leave) Call to multiplicative_IFFT_wrapper	[0.0001s x1.00]	(0.0395s x1.00 from start)
    (leave) multi_lincheck IFFT p_alphas       	[0.0002s x1.00]	(0.0395s x1.00 from start)
  (leave) Construct R1CS verifier state      	[0.0003s x1.00]	(0.0395s x1.00 from start)
  (enter) Check LDT verifier predicate       	[             ]	(0.0395s x1.00 from start)
    * Number of FRI interactions: 1
    * Number of FRI query sets per interaction: 30
    * Total number of FRI queries over all query sets (incl. repeated queries): 420
  (leave) Check LDT verifier predicate       	[0.0025s x1.00]	(0.0420s x1.00 from start)
  * IOP transcript valid: true
  * Full protocol decision predicate satisfied: true
(leave) Aurora SNARK verifier              	[0.0037s x1.00]	(0.0420s x1.00 from start)


* Verifier satisfied: true

================================================================================

(enter) Check satisfiability of R1CS example	[             ]	(0.0486s x1.00 from start)
(leave) Check satisfiability of R1CS example	[0.0001s x1.00]	(0.0487s x1.00 from start)

* R1CS number of constraints: 512
* R1CS number of variables: 511
* R1CS number of variables for primary input: 15
* R1CS number of variables for auxiliary input: 496
* R1CS size of constraint system (bytes): 38784
* R1CS size of primary input (bytes): 360
* R1CS size of auxiliary input (bytes): 11904

(enter) Aurora SNARK prover                	[             ]	(0.0487s x1.00 from start)
  
Aurora SNARK parameters
  * security parameter (bits) = 128
  * RS extra dimensions = 5
  * LDT reducer soundness type = heuristic
  * FRI soundness type = heuristic
  * zero-knowledge = false
  * domain type = multiplicative coset

Aurora IOP parameters
  * target security parameter = 128
  * achieved security parameter = 120.0
  * RS extra dimensions = 5
  * codeword domain dim = 14
  * constraint domain dim = 9
  * variable domain dim = 9
  * query bound = 0
  * make zk = false
  * domain type = multiplicative coset

Multi lincheck parameters
  * target interactive soundness error (bits) = 131
  * achieved interactive soundness error (bits) = 171.0
  * interactive repetitions = 1
  * constraint domain dim = 9
  * make zk = false
  * domain type = multiplicative coset

LDT instance reducer parameters
  * soundness type = heuristic
  * target interactive soundness error (bits) = 131
  * achieved interactive soundness error (bits) = 166.0
  * codeword domain dim = 14
  * max tested degree bound = 512
  * max constraint degree bound = 1023
  * absolute proximity parameter = 15360
  * fractional proximity parameter = 0.937500
  * num output LDT instances = 1

FRI parameters
  * soundness type = heuristic
  * target interactive soundness error (bits) = 131
  * achieved interactive soundness error (bits) = 180.0
  * target query soundness error (bits) = 117
  * achieved query soundness error (bits) = 120.0
  * codeword domain dim = 14
  * effective proximity parameter = 0.937500
  * number of interactive repetitions = 1
  * number of query repetitions = 30
  * localization parameter array = { 1 2 2 2 2 }
  * number of reductions = 5

BCS parameters
  * digest_len (bytes) = 32
  * digest_len (bits) = 256
  * hash_type = blake2b
  (enter) Submit witness oracles             	[             ]	(0.0491s x1.00 from start)
    (enter) Compute randomized f_w             	[             ]	(0.0491s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(0.0491s x1.00 from start)
        * Vector size: 16
        * Coset size: 16
      (leave) Call to multiplicative_IFFT_wrapper	[0.0000s x1.05]	(0.0491s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(0.0491s x1.00 from start)
        * Vector size: 16
        * Subgroup size: 512
      (leave) Call to multiplicative_FFT_wrapper 	[0.0001s x1.01]	(0.0492s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(0.0492s x1.00 from start)
        * Vector size: 512
        * Coset size: 512
      (leave) Call to multiplicative_IFFT_wrapper	[0.0002s x1.00]	(0.0494s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(0.0494s x1.00 from start)
        * Vector size: 496
        * Subgroup size: 16384
      (leave) Call to multiplicative_FFT_wrapper 	[0.0039s x1.00]	(0.0533s x1.00 from start)
    (leave) Compute randomized f_w             	[0.0042s x1.00]	(0.0533s x1.00 from start)
    (enter) Compute A/B/Cz                     	[             ]	(0.0533s x1.00 from start)
    (leave) Compute A/B/Cz                     	[0.0001s x1.00]	(0.0534s x1.00 from start)
    (enter) Compute f_{A/B/Cz} over codeword domain	[             ]	(0.0534s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(0.0534s x1.00 from start)
        * Vector size: 512
        * Coset size: 512
      (leave) Call to multiplicative_IFFT_wrapper	[0.0002s x1.00]	(0.0536s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(0.0536s x1.00 from start)
        * Vector size: 512
        * Coset size: 512
      (leave) Call to multiplicative_IFFT_wrapper	[0.0002s x1.00]	(0.0538s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(0.0538s x1.00 from start)
        * Vector size: 512
        * Coset size: 512
      (leave) Call to multiplicative_IFFT_wrapper	[0.0002s x1.00]	(0.0540s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(0.0540s x1.00 from start)
        * Vector size: 512
        * Subgroup size: 16384
      (leave) Call to multiplicative_FFT_wrapper 	[0.0035s x1.00]	(0.0575s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(0.0576s x1.00 from start)
        * Vector size: 512
        * Subgroup size: 16384
      (leave) Call to multiplicative_FFT_wrapper 	[0.0036s x1.00]	(0.0611s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(0.0611s x1.00 from start)
        * Vector size: 512
        * Subgroup size: 16384
      (leave) Call to multiplicative_FFT_wrapper 	[0.0036s x1.00]	(0.0647s x1.00 from start)
    (leave) Compute f_{A/B/Cz} over codeword domain	[0.0113s x1.00]	(0.0647s x1.00 from start)
    (enter) Call IOP oracle submission routines	[             ]	(0.0647s x1.00 from start)
    (leave) Call IOP oracle submission routines	[0.0000s x1.12]	(0.0647s x1.00 from start)
  (leave) Submit witness oracles             	[0.0157s x1.00]	(0.0647s x1.00 from start)
  (enter) LDT Reducer: Submit masking polynomial	[             ]	(0.0647s x1.00 from start)
  (leave) LDT Reducer: Submit masking polynomial	[0.0000s x1.25]	(0.0647s x1.00 from start)
  (enter) Finish prover round                	[             ]	(0.0647s x1.00 from start)
    (enter) Construct Merkle tree              	[             ]	(0.0647s x1.00 from start)
    (leave) Construct Merkle tree              	[0.0060s x1.00]	(0.0707s x1.00 from start)
  (leave) Finish prover round                	[0.0060s x1.00]	(0.0707s x1.00 from start)
  (enter) pow                                	[             ]	(0.0707s x1.00 from start)
  (leave) pow                                	[0.0000s x1.20]	(0.0708s x1.00 from start)
  (enter) multi_lincheck: Calculate and submit proof	[             ]	(0.0708s x1.00 from start)
    (enter) multi_lincheck compute alpha powers	[             ]	(0.0708s x1.00 from start)
    (leave) multi_lincheck compute alpha powers	[0.0000s x1.01]	(0.0708s x1.00 from start)
    (enter) multi_lincheck compute p_alpha_prime	[             ]	(0.0708s x1.00 from start)
    (leave) multi_lincheck compute p_alpha_prime	[0.0000s x1.04]	(0.0708s x1.00 from start)
    (enter) multi_lincheck compute p_alpha_ABC 	[             ]	(0.0708s x1.00 from start)
    (leave) multi_lincheck compute p_alpha_ABC 	[0.0001s x1.00]	(0.0709s x1.00 from start)
    (enter) multi_lincheck IFFT p_alphas       	[             ]	(0.0709s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(0.0709s x1.00 from start)
        * Vector size: 512
        * Coset size: 512
      (leave) Call to multiplicative_IFFT_wrapper	[0.0002s x1.00]	(0.0711s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(0.0711s x1.00 from start)
        * Vector size: 512
        * Coset size: 512
      (leave) Call to multiplicative_IFFT_wrapper	[0.0002s x1.00]	(0.0713s x1.00 from start)
    (leave) multi_lincheck IFFT p_alphas       	[0.0004s x1.00]	(0.0713s x1.00 from start)
    (enter) fz evaluated contents              	[             ]	(0.0713s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(0.0716s x1.00 from start)
        * Vector size: 16
        * Coset size: 16
      (leave) Call to multiplicative_IFFT_wrapper	[0.0000s x1.00]	(0.0716s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(0.0716s x1.00 from start)
        * Vector size: 16
        * Subgroup size: 16384
      (leave) Call to multiplicative_FFT_wrapper 	[0.0017s x1.00]	(0.0732s x1.00 from start)
    (leave) fz evaluated contents              	[0.0026s x1.00]	(0.0739s x1.00 from start)
    (enter) multi_lincheck evaluated contents  	[             ]	(0.0740s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(0.0740s x1.00 from start)
        * Vector size: 512
        * Subgroup size: 16384
      (leave) Call to multiplicative_FFT_wrapper 	[0.0034s x1.00]	(0.0774s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(0.0774s x1.00 from start)
        * Vector size: 512
        * Subgroup size: 16384
      (leave) Call to multiplicative_FFT_wrapper 	[0.0035s x1.00]	(0.0809s x1.00 from start)
    (leave) multi_lincheck evaluated contents  	[0.0097s x1.00]	(0.0837s x1.00 from start)
    (enter) Call to multiplicative_IFFT_wrapper	[             ]	(0.0842s x1.00 from start)
      * Vector size: 1024
      * Coset size: 1024
    (leave) Call to multiplicative_IFFT_wrapper	[0.0005s x1.00]	(0.0847s x1.00 from start)
    (enter) Call to multiplicative_FFT_wrapper 	[             ]	(0.0847s x1.00 from start)
      * Vector size: 511
      * Subgroup size: 16384
    (leave) Call to multiplicative_FFT_wrapper 	[0.0034s x1.00]	(0.0881s x1.00 from start)
  (leave) multi_lincheck: Calculate and submit proof	[0.0174s x1.00]	(0.0881s x1.00 from start)
  (enter) Finish prover round                	[             ]	(0.0881s x1.00 from start)
    (enter) Construct Merkle tree              	[             ]	(0.0881s x1.00 from start)
    (leave) Construct Merkle tree              	[0.0047s x1.00]	(0.0928s x1.00 from start)
  (leave) Finish prover round                	[0.0047s x1.00]	(0.0929s x1.00 from start)
  (enter) pow                                	[             ]	(0.0929s x1.00 from start)
  (leave) pow                                	[0.0000s x1.18]	(0.0929s x1.00 from start)
  (enter) LDT Reducer: Calculate and submit proof	[             ]	(0.0929s x1.00 from start)
    (enter) Sumcheck: g evaluated contents     	[             ]	(0.0929s x1.00 from start)
    (leave) Sumcheck: g evaluated contents     	[0.0016s x1.00]	(0.0945s x1.00 from start)
    (enter) rowcheck evaluated contents        	[             ]	(0.0945s x1.00 from start)
    (leave) rowcheck evaluated contents        	[0.0011s x1.00]	(0.0956s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(0.1015s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0026s x1.00]	(0.1042s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(0.1042s x1.00 from start)
      (enter) Finish prover round                	[             ]	(0.1042s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(0.1042s x1.00 from start)
        (leave) Construct Merkle tree              	[0.0012s x1.00]	(0.1054s x1.00 from start)
      (leave) Finish prover round                	[0.0012s x1.00]	(0.1054s x1.00 from start)
      (enter) pow                                	[             ]	(0.1054s x1.00 from start)
      (leave) pow                                	[0.0000s x1.17]	(0.1054s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0012s x1.00]	(0.1054s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(0.1054s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0011s x1.00]	(0.1065s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(0.1065s x1.00 from start)
      (enter) Finish prover round                	[             ]	(0.1065s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(0.1065s x1.00 from start)
        (leave) Construct Merkle tree              	[0.0003s x1.00]	(0.1068s x1.00 from start)
      (leave) Finish prover round                	[0.0003s x1.00]	(0.1068s x1.00 from start)
      (enter) pow                                	[             ]	(0.1068s x1.00 from start)
      (leave) pow                                	[0.0000s x1.12]	(0.1068s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0003s x1.00]	(0.1068s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(0.1068s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0003s x1.00]	(0.1071s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(0.1071s x1.00 from start)
      (enter) Finish prover round                	[             ]	(0.1071s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(0.1071s x1.00 from start)
        (leave) Construct Merkle tree              	[0.0001s x1.00]	(0.1072s x1.00 from start)
      (leave) Finish prover round                	[0.0001s x1.00]	(0.1072s x1.00 from start)
      (enter) pow                                	[             ]	(0.1072s x1.00 from start)
      (leave) pow                                	[0.0000s x1.05]	(0.1072s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0001s x1.00]	(0.1072s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(0.1072s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0001s x1.00]	(0.1073s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(0.1073s x1.00 from start)
      (enter) Finish prover round                	[             ]	(0.1073s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(0.1073s x1.00 from start)
        (leave) Construct Merkle tree              	[0.0000s x1.00]	(0.1073s x1.00 from start)
      (leave) Finish prover round                	[0.0000s x1.00]	(0.1073s x1.00 from start)
      (enter) pow                                	[             ]	(0.1073s x1.00 from start)
      (leave) pow                                	[0.0000s x1.06]	(0.1073s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0000s x1.00]	(0.1073s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(0.1073s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0000s x1.00]	(0.1073s x1.00 from start)
    (enter) Call to multiplicative_IFFT_wrapper	[             ]	(0.1074s x1.00 from start)
      * Vector size: 32
      * Coset size: 32
    (leave) Call to multiplicative_IFFT_wrapper	[0.0000s x1.01]	(0.1074s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(0.1074s x1.00 from start)
      (enter) Finish prover round                	[             ]	(0.1074s x1.00 from start)
      (leave) Finish prover round                	[0.0000s x1.01]	(0.1074s x1.00 from start)
      (enter) pow                                	[             ]	(0.1074s x1.00 from start)
      (leave) pow                                	[0.0009s x1.00]	(0.1082s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0009s x1.00]	(0.1082s x1.00 from start)
  (leave) LDT Reducer: Calculate and submit proof	[0.0154s x1.00]	(0.1083s x1.00 from start)
  (enter) Obtain transcript                  	[             ]	(0.1083s x1.00 from start)
  (leave) Obtain transcript                  	[0.0033s x1.00]	(0.1116s x1.00 from start)
  * Total size of proof oracles (bytes): 2227200
  * Total size of Merkle tree (bytes): 1222464
  * Total size of prover state (bytes): 3449664
(leave) Aurora SNARK prover                	[0.0629s x1.00]	(0.1116s x1.00 from start)

BCS parameters
* digest_len (bytes) = 32
* digest_len (bits) = 256
* hash_type = blake2b
(enter) verifier_seal_interaction_registrations	[             ]	(0.1129s x1.00 from start)
(leave) verifier_seal_interaction_registrations	[0.0006s x1.00]	(0.1135s x1.00 from start)

* Argument size in bytes (IOP): 16859
* Argument size in bytes (BCS): 25472
* Argument size in bytes (total): 42331

If we were to remove pruning of authentication paths in BCS,
the argument would have the following sizes:
* Argument size in bytes (BCS, no pruning): 53792
* Argument size in bytes (total, no pruning): 70651

total prover messages size: 23
total two to one hashes: 951
total leaves hashed: 732
total hashes: 1683

Transcript info by round
Per round IOP sizes don't include prover messages

round 0
MT_depth 13
IOP size: 5520 bytes
BCS size: 7232 bytes
number of two to one hashes: 254
number of leaves hashed: 240
oracles in round: fw, fAz, fBz, fCz, 

round 1
MT_depth 13
IOP size: 1380 bytes
BCS size: 7232 bytes
number of two to one hashes: 254
number of leaves hashed: 60
oracles in round: sumcheck h, 

round 2
MT_depth 11
IOP size: 2760 bytes
BCS size: 5408 bytes
number of two to one hashes: 197
number of leaves hashed: 120
oracles in round: TODO: Fill in this name (batching.tcc), 

round 3
MT_depth 9
IOP size: 2760 bytes
BCS size: 3584 bytes
number of two to one hashes: 140
number of leaves hashed: 120
oracles in round: TODO: Fill in this name (batching.tcc), 

round 4
MT_depth 7
IOP size: 2484 bytes
BCS size: 1632 bytes
number of two to one hashes: 76
number of leaves hashed: 108
oracles in round: TODO: Fill in this name (batching.tcc), 

round 5
MT_depth 5
IOP size: 1932 bytes
BCS size: 352 bytes
number of two to one hashes: 30
number of leaves hashed: 84
oracles in round: TODO: Fill in this name (batching.tcc), 


(enter) Aurora SNARK verifier              	[             ]	(0.1138s x1.00 from start)
  
Aurora SNARK parameters
  * security parameter (bits) = 128
  * RS extra dimensions = 5
  * LDT reducer soundness type = heuristic
  * FRI soundness type = heuristic
  * zero-knowledge = false
  * domain type = multiplicative coset

Aurora IOP parameters
  * target security parameter = 128
  * achieved security parameter = 120.0
  * RS extra dimensions = 5
  * codeword domain dim = 14
  * constraint domain dim = 9
  * variable domain dim = 9
  * query bound = 0
  * make zk = false
  * domain type = multiplicative coset

Multi lincheck parameters
  * target interactive soundness error (bits) = 131
  * achieved interactive soundness error (bits) = 171.0
  * interactive repetitions = 1
  * constraint domain dim = 9
  * make zk = false
  * domain type = multiplicative coset

LDT instance reducer parameters
  * soundness type = heuristic
  * target interactive soundness error (bits) = 131
  * achieved interactive soundness error (bits) = 166.0
  * codeword domain dim = 14
  * max tested degree bound = 512
  * max constraint degree bound = 1023
  * absolute proximity parameter = 15360
  * fractional proximity parameter = 0.937500
  * num output LDT instances = 1

FRI parameters
  * soundness type = heuristic
  * target interactive soundness error (bits) = 131
  * achieved interactive soundness error (bits) = 180.0
  * target query soundness error (bits) = 117
  * achieved query soundness error (bits) = 120.0
  * codeword domain dim = 14
  * effective proximity parameter = 0.937500
  * number of interactive repetitions = 1
  * number of query repetitions = 30
  * localization parameter array = { 1 2 2 2 2 }
  * number of reductions = 5

BCS parameters
  * digest_len (bytes) = 32
  * digest_len (bits) = 256
  * hash_type = blake2b
  (enter) Aurora IOP protocol initialization and registration	[             ]	(0.1140s x1.00 from start)
    (enter) verifier_seal_interaction_registrations	[             ]	(0.1143s x1.00 from start)
    (leave) verifier_seal_interaction_registrations	[0.0006s x1.00]	(0.1149s x1.00 from start)
  (leave) Aurora IOP protocol initialization and registration	[0.0010s x1.00]	(0.1150s x1.00 from start)
  (enter) Check semantic validity of IOP transcript	[             ]	(0.1150s x1.00 from start)
  (leave) Check semantic validity of IOP transcript	[0.0000s x1.09]	(0.1150s x1.00 from start)
  (enter) Construct R1CS verifier state      	[             ]	(0.1150s x1.00 from start)
    (enter) multi_lincheck compute alpha powers	[             ]	(0.1150s x1.00 from start)
    (leave) multi_lincheck compute alpha powers	[0.0000s x1.02]	(0.1150s x1.00 from start)
    (enter) multi_lincheck compute p_alpha_prime	[             ]	(0.1150s x1.00 from start)
    (leave) multi_lincheck compute p_alpha_prime	[0.0000s x1.04]	(0.1150s x1.00 from start)
    (enter) multi_lincheck compute p_alpha_ABC 	[             ]	(0.1150s x1.00 from start)
    (leave) multi_lincheck compute p_alpha_ABC 	[0.0001s x1.00]	(0.1151s x1.00 from start)
    (enter) multi_lincheck IFFT p_alphas       	[             ]	(0.1152s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(0.1152s x1.00 from start)
        * Vector size: 512
        * Coset size: 512
      (leave) Call to multiplicative_IFFT_wrapper	[0.0002s x1.00]	(0.1153s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(0.1154s x1.00 from start)
        * Vector size: 512
        * Coset size: 512
      (leave) Call to multiplicative_IFFT_wrapper	[0.0002s x1.00]	(0.1156s x1.00 from start)
    (leave) multi_lincheck IFFT p_alphas       	[0.0004s x1.00]	(0.1156s x1.00 from start)
  (leave) Construct R1CS verifier state      	[0.0006s x1.00]	(0.1156s x1.00 from start)
  (enter) Check LDT verifier predicate       	[             ]	(0.1156s x1.00 from start)
    * Number of FRI interactions: 1
    * Number of FRI query sets per interaction: 30
    * Total number of FRI queries over all query sets (incl. repeated queries): 540
  (leave) Check LDT verifier predicate       	[0.0036s x1.00]	(0.1192s x1.00 from start)
  * IOP transcript valid: true
  * Full protocol decision predicate satisfied: true
(leave) Aurora SNARK verifier              	[0.0054s x1.00]	(0.1192s x1.00 from start)


* Verifier satisfied: true

================================================================================

(enter) Check satisfiability of R1CS example	[             ]	(0.1329s x1.00 from start)
(leave) Check satisfiability of R1CS example	[0.0001s x1.00]	(0.1330s x1.00 from start)

* R1CS number of constraints: 1024
* R1CS number of variables: 1023
* R1CS number of variables for primary input: 15
* R1CS number of variables for auxiliary input: 1008
* R1CS size of constraint system (bytes): 77952
* R1CS size of primary input (bytes): 360
* R1CS size of auxiliary input (bytes): 24192

(enter) Aurora SNARK prover                	[             ]	(0.1331s x1.00 from start)
  
Aurora SNARK parameters
  * security parameter (bits) = 128
  * RS extra dimensions = 5
  * LDT reducer soundness type = heuristic
  * FRI soundness type = heuristic
  * zero-knowledge = false
  * domain type = multiplicative coset

Aurora IOP parameters
  * target security parameter = 128
  * achieved security parameter = 116.0
  * RS extra dimensions = 5
  * codeword domain dim = 15
  * constraint domain dim = 10
  * variable domain dim = 10
  * query bound = 0
  * make zk = false
  * domain type = multiplicative coset

Multi lincheck parameters
  * target interactive soundness error (bits) = 131
  * achieved interactive soundness error (bits) = 170.0
  * interactive repetitions = 1
  * constraint domain dim = 10
  * make zk = false
  * domain type = multiplicative coset

LDT instance reducer parameters
  * soundness type = heuristic
  * target interactive soundness error (bits) = 131
  * achieved interactive soundness error (bits) = 165.0
  * codeword domain dim = 15
  * max tested degree bound = 1024
  * max constraint degree bound = 2047
  * absolute proximity parameter = 30720
  * fractional proximity parameter = 0.937500
  * num output LDT instances = 1

FRI parameters
  * soundness type = heuristic
  * target interactive soundness error (bits) = 131
  * achieved interactive soundness error (bits) = 180.0
  * target query soundness error (bits) = 116
  * achieved query soundness error (bits) = 116.0
  * codeword domain dim = 15
  * effective proximity parameter = 0.937500
  * number of interactive repetitions = 1
  * number of query repetitions = 29
  * localization parameter array = { 1 2 2 2 2 }
  * number of reductions = 5

BCS parameters
  * digest_len (bytes) = 32
  * digest_len (bits) = 256
  * hash_type = blake2b
  (enter) Submit witness oracles             	[             ]	(0.1335s x1.00 from start)
    (enter) Compute randomized f_w             	[             ]	(0.1335s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(0.1335s x1.00 from start)
        * Vector size: 16
        * Coset size: 16
      (leave) Call to multiplicative_IFFT_wrapper	[0.0000s x1.07]	(0.1335s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(0.1335s x1.00 from start)
        * Vector size: 16
        * Subgroup size: 1024
      (leave) Call to multiplicative_FFT_wrapper 	[0.0001s x1.00]	(0.1337s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(0.1337s x1.00 from start)
        * Vector size: 1024
        * Coset size: 1024
      (leave) Call to multiplicative_IFFT_wrapper	[0.0004s x1.00]	(0.1341s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(0.1342s x1.00 from start)
        * Vector size: 1008
        * Subgroup size: 32768
      (leave) Call to multiplicative_FFT_wrapper 	[0.0085s x1.00]	(0.1427s x1.00 from start)
    (leave) Compute randomized f_w             	[0.0091s x1.00]	(0.1427s x1.00 from start)
    (enter) Compute A/B/Cz                     	[             ]	(0.1427s x1.00 from start)
    (leave) Compute A/B/Cz                     	[0.0001s x1.00]	(0.1428s x1.00 from start)
    (enter) Compute f_{A/B/Cz} over codeword domain	[             ]	(0.1428s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(0.1428s x1.00 from start)
        * Vector size: 1024
        * Coset size: 1024
      (leave) Call to multiplicative_IFFT_wrapper	[0.0004s x1.00]	(0.1432s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(0.1432s x1.00 from start)
        * Vector size: 1024
        * Coset size: 1024
      (leave) Call to multiplicative_IFFT_wrapper	[0.0004s x1.00]	(0.1436s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(0.1436s x1.00 from start)
        * Vector size: 1024
        * Coset size: 1024
      (leave) Call to multiplicative_IFFT_wrapper	[0.0004s x1.00]	(0.1440s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(0.1441s x1.00 from start)
        * Vector size: 1024
        * Subgroup size: 32768
      (leave) Call to multiplicative_FFT_wrapper 	[0.0077s x1.00]	(0.1518s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(0.1518s x1.00 from start)
        * Vector size: 1024
        * Subgroup size: 32768
      (leave) Call to multiplicative_FFT_wrapper 	[0.0077s x1.00]	(0.1595s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(0.1595s x1.00 from start)
        * Vector size: 1024
        * Subgroup size: 32768
      (leave) Call to multiplicative_FFT_wrapper 	[0.0077s x1.00]	(0.1671s x1.00 from start)
    (leave) Compute f_{A/B/Cz} over codeword domain	[0.0244s x1.00]	(0.1672s x1.00 from start)
    (enter) Call IOP oracle submission routines	[             ]	(0.1672s x1.00 from start)
    (leave) Call IOP oracle submission routines	[0.0000s x1.18]	(0.1672s x1.00 from start)
  (leave) Submit witness oracles             	[0.0337s x1.00]	(0.1672s x1.00 from start)
  (enter) LDT Reducer: Submit masking polynomial	[             ]	(0.1672s x1.00 from start)
  (leave) LDT Reducer: Submit masking polynomial	[0.0000s x1.21]	(0.1672s x1.00 from start)
  (enter) Finish prover round                	[             ]	(0.1672s x1.00 from start)
    (enter) Construct Merkle tree              	[             ]	(0.1672s x1.00 from start)
    (leave) Construct Merkle tree              	[0.0119s x1.00]	(0.1791s x1.00 from start)
  (leave) Finish prover round                	[0.0119s x1.00]	(0.1791s x1.00 from start)
  (enter) pow                                	[             ]	(0.1791s x1.00 from start)
  (leave) pow                                	[0.0000s x1.21]	(0.1791s x1.00 from start)
  (enter) multi_lincheck: Calculate and submit proof	[             ]	(0.1791s x1.00 from start)
    (enter) multi_lincheck compute alpha powers	[             ]	(0.1791s x1.00 from start)
    (leave) multi_lincheck compute alpha powers	[0.0000s x1.01]	(0.1792s x1.00 from start)
    (enter) multi_lincheck compute p_alpha_prime	[             ]	(0.1792s x1.00 from start)
    (leave) multi_lincheck compute p_alpha_prime	[0.0000s x1.05]	(0.1792s x1.00 from start)
    (enter) multi_lincheck compute p_alpha_ABC 	[             ]	(0.1792s x1.00 from start)
    (leave) multi_lincheck compute p_alpha_ABC 	[0.0003s x1.00]	(0.1795s x1.00 from start)
    (enter) multi_lincheck IFFT p_alphas       	[             ]	(0.1795s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(0.1795s x1.00 from start)
        * Vector size: 1024
        * Coset size: 1024
      (leave) Call to multiplicative_IFFT_wrapper	[0.0004s x1.00]	(0.1799s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(0.1799s x1.00 from start)
        * Vector size: 1024
        * Coset size: 1024
      (leave) Call to multiplicative_IFFT_wrapper	[0.0004s x1.00]	(0.1803s x1.00 from start)
    (leave) multi_lincheck IFFT p_alphas       	[0.0008s x1.00]	(0.1803s x1.00 from start)
    (enter) fz evaluated contents              	[             ]	(0.1803s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(0.1808s x1.00 from start)
        * Vector size: 16
        * Coset size: 16
      (leave) Call to multiplicative_IFFT_wrapper	[0.0000s x1.00]	(0.1808s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(0.1808s x1.00 from start)
        * Vector size: 16
        * Subgroup size: 32768
      (leave) Call to multiplicative_FFT_wrapper 	[0.0032s x1.00]	(0.1840s x1.00 from start)
    (leave) fz evaluated contents              	[0.0050s x1.00]	(0.1853s x1.00 from start)
    (enter) multi_lincheck evaluated contents  	[             ]	(0.1854s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(0.1854s x1.00 from start)
        * Vector size: 1024
        * Subgroup size: 32768
      (leave) Call to multiplicative_FFT_wrapper 	[0.0077s x1.00]	(0.1931s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(0.1931s x1.00 from start)
        * Vector size: 1024
        * Subgroup size: 32768
      (leave) Call to multiplicative_FFT_wrapper 	[0.0077s x1.00]	(0.2008s x1.00 from start)
    (leave) multi_lincheck evaluated contents  	[0.0210s x1.00]	(0.2064s x1.00 from start)
    (enter) Call to multiplicative_IFFT_wrapper	[             ]	(0.2075s x1.00 from start)
      * Vector size: 2048
      * Coset size: 2048
    (leave) Call to multiplicative_IFFT_wrapper	[0.0010s x1.00]	(0.2085s x1.00 from start)
    (enter) Call to multiplicative_FFT_wrapper 	[             ]	(0.2086s x1.00 from start)
      * Vector size: 1023
      * Subgroup size: 32768
    (leave) Call to multiplicative_FFT_wrapper 	[0.0075s x1.00]	(0.2160s x1.00 from start)
  (leave) multi_lincheck: Calculate and submit proof	[0.0369s x1.00]	(0.2161s x1.00 from start)
  (enter) Finish prover round                	[             ]	(0.2161s x1.00 from start)
    (enter) Construct Merkle tree              	[             ]	(0.2161s x1.00 from start)
    (leave) Construct Merkle tree              	[0.0095s x1.00]	(0.2256s x1.00 from start)
  (leave) Finish prover round                	[0.0095s x1.00]	(0.2256s x1.00 from start)
  (enter) pow                                	[             ]	(0.2256s x1.00 from start)
  (leave) pow                                	[0.0000s x1.03]	(0.2256s x1.00 from start)
  (enter) LDT Reducer: Calculate and submit proof	[             ]	(0.2256s x1.00 from start)
    (enter) Sumcheck: g evaluated contents     	[             ]	(0.2256s x1.00 from start)
    (leave) Sumcheck: g evaluated contents     	[0.0033s x1.00]	(0.2289s x1.00 from start)
    (enter) rowcheck evaluated contents        	[             ]	(0.2289s x1.00 from start)
    (leave) rowcheck evaluated contents        	[0.0022s x1.00]	(0.2311s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(0.2429s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0052s x1.00]	(0.2481s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(0.2481s x1.00 from start)
      (enter) Finish prover round                	[             ]	(0.2482s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(0.2482s x1.00 from start)
        (leave) Construct Merkle tree              	[0.0023s x1.00]	(0.2505s x1.00 from start)
      (leave) Finish prover round                	[0.0023s x1.00]	(0.2505s x1.00 from start)
      (enter) pow                                	[             ]	(0.2505s x1.00 from start)
      (leave) pow                                	[0.0000s x1.21]	(0.2505s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0024s x1.00]	(0.2505s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(0.2505s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0021s x1.00]	(0.2526s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(0.2526s x1.00 from start)
      (enter) Finish prover round                	[             ]	(0.2526s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(0.2526s x1.00 from start)
        (leave) Construct Merkle tree              	[0.0006s x1.00]	(0.2532s x1.00 from start)
      (leave) Finish prover round                	[0.0006s x1.00]	(0.2532s x1.00 from start)
      (enter) pow                                	[             ]	(0.2532s x1.00 from start)
      (leave) pow                                	[0.0000s x1.09]	(0.2532s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0006s x1.00]	(0.2532s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(0.2532s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0005s x1.00]	(0.2538s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(0.2538s x1.00 from start)
      (enter) Finish prover round                	[             ]	(0.2538s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(0.2538s x1.00 from start)
        (leave) Construct Merkle tree              	[0.0002s x1.00]	(0.2539s x1.00 from start)
      (leave) Finish prover round                	[0.0002s x1.00]	(0.2539s x1.00 from start)
      (enter) pow                                	[             ]	(0.2539s x1.00 from start)
      (leave) pow                                	[0.0000s x1.06]	(0.2539s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0002s x1.00]	(0.2539s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(0.2539s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0001s x1.00]	(0.2541s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(0.2541s x1.00 from start)
      (enter) Finish prover round                	[             ]	(0.2541s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(0.2541s x1.00 from start)
        (leave) Construct Merkle tree              	[0.0000s x1.00]	(0.2541s x1.00 from start)
      (leave) Finish prover round                	[0.0001s x1.00]	(0.2542s x1.00 from start)
      (enter) pow                                	[             ]	(0.2542s x1.00 from start)
      (leave) pow                                	[0.0000s x1.01]	(0.2542s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0001s x1.00]	(0.2542s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(0.2542s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0000s x1.00]	(0.2542s x1.00 from start)
    (enter) Call to multiplicative_IFFT_wrapper	[             ]	(0.2542s x1.00 from start)
      * Vector size: 64
      * Coset size: 64
    (leave) Call to multiplicative_IFFT_wrapper	[0.0000s x1.01]	(0.2543s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(0.2543s x1.00 from start)
      (enter) Finish prover round                	[             ]	(0.2543s x1.00 from start)
      (leave) Finish prover round                	[0.0000s x1.01]	(0.2543s x1.00 from start)
      (enter) pow                                	[             ]	(0.2543s x1.00 from start)
      (leave) pow                                	[0.0008s x1.00]	(0.2551s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0009s x1.00]	(0.2551s x1.00 from start)
  (leave) LDT Reducer: Calculate and submit proof	[0.0296s x1.00]	(0.2552s x1.00 from start)
  (enter) Obtain transcript                  	[             ]	(0.2552s x1.00 from start)
  (leave) Obtain transcript                  	[0.0051s x1.00]	(0.2603s x1.00 from start)
  * Total size of proof oracles (bytes): 4454400
  * Total size of Merkle tree (bytes): 2445120
  * Total size of prover state (bytes): 6899520
(leave) Aurora SNARK prover                	[0.1272s x1.00]	(0.2603s x1.00 from start)

BCS parameters
* digest_len (bytes) = 32
* digest_len (bits) = 256
* hash_type = blake2b
(enter) verifier_seal_interaction_registrations	[             ]	(0.2624s x1.00 from start)
(leave) verifier_seal_interaction_registrations	[0.0007s x1.00]	(0.2630s x1.00 from start)

* Argument size in bytes (IOP): 16836
* Argument size in bytes (BCS): 28992
* Argument size in bytes (total): 45828

If we were to remove pruning of authentication paths in BCS,
the argument would have the following sizes:
* Argument size in bytes (BCS, no pruning): 58400
* Argument size in bytes (total, no pruning): 75236

total prover messages size: 46
total two to one hashes: 1061
total leaves hashed: 730
total hashes: 1791

Transcript info by round
Per round IOP sizes don't include prover messages

round 0
MT_depth 14
IOP size: 5336 bytes
BCS size: 7680 bytes
number of two to one hashes: 267
number of leaves hashed: 232
oracles in round: fw, fAz, fBz, fCz, 

round 1
MT_depth 14
IOP size: 1334 bytes
BCS size: 7680 bytes
number of two to one hashes: 267
number of leaves hashed: 58
oracles in round: sumcheck h, 

round 2
MT_depth 12
IOP size: 2668 bytes
BCS size: 6208 bytes
number of two to one hashes: 221
number of leaves hashed: 116
oracles in round: TODO: Fill in this name (batching.tcc), 

round 3
MT_depth 10
IOP size: 2668 bytes
BCS size: 4224 bytes
number of two to one hashes: 159
number of leaves hashed: 116
oracles in round: TODO: Fill in this name (batching.tcc), 

round 4
MT_depth 8
IOP size: 2576 bytes
BCS size: 2336 bytes
number of two to one hashes: 99
number of leaves hashed: 112
oracles in round: TODO: Fill in this name (batching.tcc), 

round 5
MT_depth 6
IOP size: 2208 bytes
BCS size: 832 bytes
number of two to one hashes: 48
number of leaves hashed: 96
oracles in round: TODO: Fill in this name (batching.tcc), 


(enter) Aurora SNARK verifier              	[             ]	(0.2634s x1.00 from start)
  
Aurora SNARK parameters
  * security parameter (bits) = 128
  * RS extra dimensions = 5
  * LDT reducer soundness type = heuristic
  * FRI soundness type = heuristic
  * zero-knowledge = false
  * domain type = multiplicative coset

Aurora IOP parameters
  * target security parameter = 128
  * achieved security parameter = 116.0
  * RS extra dimensions = 5
  * codeword domain dim = 15
  * constraint domain dim = 10
  * variable domain dim = 10
  * query bound = 0
  * make zk = false
  * domain type = multiplicative coset

Multi lincheck parameters
  * target interactive soundness error (bits) = 131
  * achieved interactive soundness error (bits) = 170.0
  * interactive repetitions = 1
  * constraint domain dim = 10
  * make zk = false
  * domain type = multiplicative coset

LDT instance reducer parameters
  * soundness type = heuristic
  * target interactive soundness error (bits) = 131
  * achieved interactive soundness error (bits) = 165.0
  * codeword domain dim = 15
  * max tested degree bound = 1024
  * max constraint degree bound = 2047
  * absolute proximity parameter = 30720
  * fractional proximity parameter = 0.937500
  * num output LDT instances = 1

FRI parameters
  * soundness type = heuristic
  * target interactive soundness error (bits) = 131
  * achieved interactive soundness error (bits) = 180.0
  * target query soundness error (bits) = 116
  * achieved query soundness error (bits) = 116.0
  * codeword domain dim = 15
  * effective proximity parameter = 0.937500
  * number of interactive repetitions = 1
  * number of query repetitions = 29
  * localization parameter array = { 1 2 2 2 2 }
  * number of reductions = 5

BCS parameters
  * digest_len (bytes) = 32
  * digest_len (bits) = 256
  * hash_type = blake2b
  (enter) Aurora IOP protocol initialization and registration	[             ]	(0.2635s x1.00 from start)
    (enter) verifier_seal_interaction_registrations	[             ]	(0.2639s x1.00 from start)
    (leave) verifier_seal_interaction_registrations	[0.0006s x1.00]	(0.2645s x1.00 from start)
  (leave) Aurora IOP protocol initialization and registration	[0.0011s x1.00]	(0.2646s x1.00 from start)
  (enter) Check semantic validity of IOP transcript	[             ]	(0.2646s x1.00 from start)
  (leave) Check semantic validity of IOP transcript	[0.0000s x1.13]	(0.2646s x1.00 from start)
  (enter) Construct R1CS verifier state      	[             ]	(0.2646s x1.00 from start)
    (enter) multi_lincheck compute alpha powers	[             ]	(0.2646s x1.00 from start)
    (leave) multi_lincheck compute alpha powers	[0.0000s x1.02]	(0.2646s x1.00 from start)
    (enter) multi_lincheck compute p_alpha_prime	[             ]	(0.2646s x1.00 from start)
    (leave) multi_lincheck compute p_alpha_prime	[0.0000s x1.02]	(0.2647s x1.00 from start)
    (enter) multi_lincheck compute p_alpha_ABC 	[             ]	(0.2647s x1.00 from start)
    (leave) multi_lincheck compute p_alpha_ABC 	[0.0003s x1.00]	(0.2650s x1.00 from start)
    (enter) multi_lincheck IFFT p_alphas       	[             ]	(0.2650s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(0.2650s x1.00 from start)
        * Vector size: 1024
        * Coset size: 1024
      (leave) Call to multiplicative_IFFT_wrapper	[0.0004s x1.00]	(0.2654s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(0.2654s x1.00 from start)
        * Vector size: 1024
        * Coset size: 1024
      (leave) Call to multiplicative_IFFT_wrapper	[0.0004s x1.00]	(0.2658s x1.00 from start)
    (leave) multi_lincheck IFFT p_alphas       	[0.0008s x1.00]	(0.2658s x1.00 from start)
  (leave) Construct R1CS verifier state      	[0.0012s x1.00]	(0.2658s x1.00 from start)
  (enter) Check LDT verifier predicate       	[             ]	(0.2658s x1.00 from start)
    * Number of FRI interactions: 1
    * Number of FRI query sets per interaction: 29
    * Total number of FRI queries over all query sets (incl. repeated queries): 522
  (leave) Check LDT verifier predicate       	[0.0054s x1.00]	(0.2712s x1.00 from start)
  * IOP transcript valid: true
  * Full protocol decision predicate satisfied: true
(leave) Aurora SNARK verifier              	[0.0078s x1.00]	(0.2712s x1.00 from start)


* Verifier satisfied: true

================================================================================

(enter) Check satisfiability of R1CS example	[             ]	(0.2974s x1.00 from start)
(leave) Check satisfiability of R1CS example	[0.0002s x1.00]	(0.2976s x1.00 from start)

* R1CS number of constraints: 2048
* R1CS number of variables: 2047
* R1CS number of variables for primary input: 15
* R1CS number of variables for auxiliary input: 2032
* R1CS size of constraint system (bytes): 156672
* R1CS size of primary input (bytes): 360
* R1CS size of auxiliary input (bytes): 48768

(enter) Aurora SNARK prover                	[             ]	(0.2976s x1.00 from start)
  
Aurora SNARK parameters
  * security parameter (bits) = 128
  * RS extra dimensions = 5
  * LDT reducer soundness type = heuristic
  * FRI soundness type = heuristic
  * zero-knowledge = false
  * domain type = multiplicative coset

Aurora IOP parameters
  * target security parameter = 128
  * achieved security parameter = 116.0
  * RS extra dimensions = 5
  * codeword domain dim = 16
  * constraint domain dim = 11
  * variable domain dim = 11
  * query bound = 0
  * make zk = false
  * domain type = multiplicative coset

Multi lincheck parameters
  * target interactive soundness error (bits) = 131
  * achieved interactive soundness error (bits) = 169.0
  * interactive repetitions = 1
  * constraint domain dim = 11
  * make zk = false
  * domain type = multiplicative coset

LDT instance reducer parameters
  * soundness type = heuristic
  * target interactive soundness error (bits) = 131
  * achieved interactive soundness error (bits) = 164.0
  * codeword domain dim = 16
  * max tested degree bound = 2048
  * max constraint degree bound = 4095
  * absolute proximity parameter = 61440
  * fractional proximity parameter = 0.937500
  * num output LDT instances = 1

FRI parameters
  * soundness type = heuristic
  * target interactive soundness error (bits) = 131
  * achieved interactive soundness error (bits) = 180.0
  * target query soundness error (bits) = 115
  * achieved query soundness error (bits) = 116.0
  * codeword domain dim = 16
  * effective proximity parameter = 0.937500
  * number of interactive repetitions = 1
  * number of query repetitions = 29
  * localization parameter array = { 1 2 2 2 2 2 }
  * number of reductions = 6

BCS parameters
  * digest_len (bytes) = 32
  * digest_len (bits) = 256
  * hash_type = blake2b
  (enter) Submit witness oracles             	[             ]	(0.2982s x1.00 from start)
    (enter) Compute randomized f_w             	[             ]	(0.2982s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(0.2982s x1.00 from start)
        * Vector size: 16
        * Coset size: 16
      (leave) Call to multiplicative_IFFT_wrapper	[0.0000s x1.06]	(0.2982s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(0.2982s x1.00 from start)
        * Vector size: 16
        * Subgroup size: 2048
      (leave) Call to multiplicative_FFT_wrapper 	[0.0002s x1.00]	(0.2985s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(0.2986s x1.00 from start)
        * Vector size: 2048
        * Coset size: 2048
      (leave) Call to multiplicative_IFFT_wrapper	[0.0009s x1.00]	(0.2994s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(0.2996s x1.00 from start)
        * Vector size: 2032
        * Subgroup size: 65536
      (leave) Call to multiplicative_FFT_wrapper 	[0.0183s x1.00]	(0.3179s x1.00 from start)
    (leave) Compute randomized f_w             	[0.0197s x1.00]	(0.3179s x1.00 from start)
    (enter) Compute A/B/Cz                     	[             ]	(0.3179s x1.00 from start)
    (leave) Compute A/B/Cz                     	[0.0002s x1.00]	(0.3181s x1.00 from start)
    (enter) Compute f_{A/B/Cz} over codeword domain	[             ]	(0.3181s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(0.3182s x1.00 from start)
        * Vector size: 2048
        * Coset size: 2048
      (leave) Call to multiplicative_IFFT_wrapper	[0.0009s x1.00]	(0.3191s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(0.3191s x1.00 from start)
        * Vector size: 2048
        * Coset size: 2048
      (leave) Call to multiplicative_IFFT_wrapper	[0.0009s x1.00]	(0.3200s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(0.3200s x1.00 from start)
        * Vector size: 2048
        * Coset size: 2048
      (leave) Call to multiplicative_IFFT_wrapper	[0.0009s x1.00]	(0.3209s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(0.3209s x1.00 from start)
        * Vector size: 2048
        * Subgroup size: 65536
      (leave) Call to multiplicative_FFT_wrapper 	[0.0167s x1.00]	(0.3376s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(0.3376s x1.00 from start)
        * Vector size: 2048
        * Subgroup size: 65536
      (leave) Call to multiplicative_FFT_wrapper 	[0.0170s x1.00]	(0.3546s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(0.3546s x1.00 from start)
        * Vector size: 2048
        * Subgroup size: 65536
      (leave) Call to multiplicative_FFT_wrapper 	[0.0170s x1.00]	(0.3716s x1.00 from start)
    (leave) Compute f_{A/B/Cz} over codeword domain	[0.0534s x1.00]	(0.3716s x1.00 from start)
    (enter) Call IOP oracle submission routines	[             ]	(0.3716s x1.00 from start)
    (leave) Call IOP oracle submission routines	[0.0000s x1.11]	(0.3716s x1.00 from start)
  (leave) Submit witness oracles             	[0.0734s x1.00]	(0.3716s x1.00 from start)
  (enter) LDT Reducer: Submit masking polynomial	[             ]	(0.3716s x1.00 from start)
  (leave) LDT Reducer: Submit masking polynomial	[0.0000s x1.23]	(0.3716s x1.00 from start)
  (enter) Finish prover round                	[             ]	(0.3716s x1.00 from start)
    (enter) Construct Merkle tree              	[             ]	(0.3716s x1.00 from start)
    (leave) Construct Merkle tree              	[0.0243s x1.00]	(0.3959s x1.00 from start)
  (leave) Finish prover round                	[0.0243s x1.00]	(0.3959s x1.00 from start)
  (enter) pow                                	[             ]	(0.3959s x1.00 from start)
  (leave) pow                                	[0.0000s x1.16]	(0.3959s x1.00 from start)
  (enter) multi_lincheck: Calculate and submit proof	[             ]	(0.3959s x1.00 from start)
    (enter) multi_lincheck compute alpha powers	[             ]	(0.3959s x1.00 from start)
    (leave) multi_lincheck compute alpha powers	[0.0001s x1.00]	(0.3960s x1.00 from start)
    (enter) multi_lincheck compute p_alpha_prime	[             ]	(0.3960s x1.00 from start)
    (leave) multi_lincheck compute p_alpha_prime	[0.0000s x1.00]	(0.3961s x1.00 from start)
    (enter) multi_lincheck compute p_alpha_ABC 	[             ]	(0.3961s x1.00 from start)
    (leave) multi_lincheck compute p_alpha_ABC 	[0.0006s x1.00]	(0.3967s x1.00 from start)
    (enter) multi_lincheck IFFT p_alphas       	[             ]	(0.3967s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(0.3967s x1.00 from start)
        * Vector size: 2048
        * Coset size: 2048
      (leave) Call to multiplicative_IFFT_wrapper	[0.0009s x1.00]	(0.3976s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(0.3976s x1.00 from start)
        * Vector size: 2048
        * Coset size: 2048
      (leave) Call to multiplicative_IFFT_wrapper	[0.0009s x1.00]	(0.3985s x1.00 from start)
    (leave) multi_lincheck IFFT p_alphas       	[0.0019s x1.00]	(0.3986s x1.00 from start)
    (enter) fz evaluated contents              	[             ]	(0.3986s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(0.3994s x1.00 from start)
        * Vector size: 16
        * Coset size: 16
      (leave) Call to multiplicative_IFFT_wrapper	[0.0000s x1.00]	(0.3994s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(0.3994s x1.00 from start)
        * Vector size: 16
        * Subgroup size: 65536
      (leave) Call to multiplicative_FFT_wrapper 	[0.0064s x1.00]	(0.4058s x1.00 from start)
    (leave) fz evaluated contents              	[0.0100s x1.00]	(0.4086s x1.00 from start)
    (enter) multi_lincheck evaluated contents  	[             ]	(0.4087s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(0.4087s x1.00 from start)
        * Vector size: 2048
        * Subgroup size: 65536
      (leave) Call to multiplicative_FFT_wrapper 	[0.0169s x1.00]	(0.4257s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(0.4257s x1.00 from start)
        * Vector size: 2048
        * Subgroup size: 65536
      (leave) Call to multiplicative_FFT_wrapper 	[0.0168s x1.00]	(0.4425s x1.00 from start)
    (leave) multi_lincheck evaluated contents  	[0.0453s x1.00]	(0.4540s x1.00 from start)
    (enter) Call to multiplicative_IFFT_wrapper	[             ]	(0.4562s x1.00 from start)
      * Vector size: 4096
      * Coset size: 4096
    (leave) Call to multiplicative_IFFT_wrapper	[0.0021s x1.00]	(0.4583s x1.00 from start)
    (enter) Call to multiplicative_FFT_wrapper 	[             ]	(0.4585s x1.00 from start)
      * Vector size: 2047
      * Subgroup size: 65536
    (leave) Call to multiplicative_FFT_wrapper 	[0.0165s x1.00]	(0.4750s x1.00 from start)
  (leave) multi_lincheck: Calculate and submit proof	[0.0791s x1.00]	(0.4750s x1.00 from start)
  (enter) Finish prover round                	[             ]	(0.4751s x1.00 from start)
    (enter) Construct Merkle tree              	[             ]	(0.4751s x1.00 from start)
    (leave) Construct Merkle tree              	[0.0191s x1.00]	(0.4941s x1.00 from start)
  (leave) Finish prover round                	[0.0191s x1.00]	(0.4942s x1.00 from start)
  (enter) pow                                	[             ]	(0.4942s x1.00 from start)
  (leave) pow                                	[0.0000s x1.25]	(0.4942s x1.00 from start)
  (enter) LDT Reducer: Calculate and submit proof	[             ]	(0.4942s x1.00 from start)
    (enter) Sumcheck: g evaluated contents     	[             ]	(0.4942s x1.00 from start)
    (leave) Sumcheck: g evaluated contents     	[0.0066s x1.00]	(0.5008s x1.00 from start)
    (enter) rowcheck evaluated contents        	[             ]	(0.5008s x1.00 from start)
    (leave) rowcheck evaluated contents        	[0.0046s x1.00]	(0.5054s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(0.5290s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0104s x1.00]	(0.5395s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(0.5396s x1.00 from start)
      (enter) Finish prover round                	[             ]	(0.5396s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(0.5396s x1.00 from start)
        (leave) Construct Merkle tree              	[0.0046s x1.00]	(0.5442s x1.00 from start)
      (leave) Finish prover round                	[0.0046s x1.00]	(0.5442s x1.00 from start)
      (enter) pow                                	[             ]	(0.5442s x1.00 from start)
      (leave) pow                                	[0.0000s x1.21]	(0.5442s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0047s x1.00]	(0.5442s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(0.5443s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0043s x1.00]	(0.5486s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(0.5486s x1.00 from start)
      (enter) Finish prover round                	[             ]	(0.5486s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(0.5486s x1.00 from start)
        (leave) Construct Merkle tree              	[0.0012s x1.00]	(0.5498s x1.00 from start)
      (leave) Finish prover round                	[0.0012s x1.00]	(0.5498s x1.00 from start)
      (enter) pow                                	[             ]	(0.5498s x1.00 from start)
      (leave) pow                                	[0.0000s x1.14]	(0.5498s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0012s x1.00]	(0.5498s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(0.5498s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0011s x1.00]	(0.5509s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(0.5509s x1.00 from start)
      (enter) Finish prover round                	[             ]	(0.5509s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(0.5509s x1.00 from start)
        (leave) Construct Merkle tree              	[0.0003s x1.00]	(0.5512s x1.00 from start)
      (leave) Finish prover round                	[0.0003s x1.00]	(0.5512s x1.00 from start)
      (enter) pow                                	[             ]	(0.5512s x1.00 from start)
      (leave) pow                                	[0.0000s x1.08]	(0.5512s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0003s x1.00]	(0.5512s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(0.5512s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0003s x1.00]	(0.5515s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(0.5515s x1.00 from start)
      (enter) Finish prover round                	[             ]	(0.5515s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(0.5515s x1.00 from start)
        (leave) Construct Merkle tree              	[0.0001s x1.00]	(0.5516s x1.00 from start)
      (leave) Finish prover round                	[0.0001s x1.00]	(0.5516s x1.00 from start)
      (enter) pow                                	[             ]	(0.5516s x1.00 from start)
      (leave) pow                                	[0.0000s x1.07]	(0.5516s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0001s x1.00]	(0.5516s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(0.5516s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0001s x1.00]	(0.5517s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(0.5517s x1.00 from start)
      (enter) Finish prover round                	[             ]	(0.5517s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(0.5517s x1.00 from start)
        (leave) Construct Merkle tree              	[0.0000s x1.00]	(0.5517s x1.00 from start)
      (leave) Finish prover round                	[0.0000s x1.00]	(0.5517s x1.00 from start)
      (enter) pow                                	[             ]	(0.5517s x1.00 from start)
      (leave) pow                                	[0.0000s x1.05]	(0.5517s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0000s x1.00]	(0.5517s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(0.5517s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0000s x1.00]	(0.5517s x1.00 from start)
    (enter) Call to multiplicative_IFFT_wrapper	[             ]	(0.5517s x1.00 from start)
      * Vector size: 32
      * Coset size: 32
    (leave) Call to multiplicative_IFFT_wrapper	[0.0000s x1.03]	(0.5518s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(0.5518s x1.00 from start)
      (enter) Finish prover round                	[             ]	(0.5518s x1.00 from start)
      (leave) Finish prover round                	[0.0000s x1.01]	(0.5518s x1.00 from start)
      (enter) pow                                	[             ]	(0.5518s x1.00 from start)
      (leave) pow                                	[0.0240s x1.00]	(0.5758s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0240s x1.00]	(0.5758s x1.00 from start)
  (leave) LDT Reducer: Calculate and submit proof	[0.0818s x1.00]	(0.5760s x1.00 from start)
  (enter) Obtain transcript                  	[             ]	(0.5760s x1.00 from start)
  (leave) Obtain transcript                  	[0.0095s x1.00]	(0.5855s x1.00 from start)
  * Total size of proof oracles (bytes): 8911872
  * Total size of Merkle tree (bytes): 4892448
  * Total size of prover state (bytes): 13804320
(leave) Aurora SNARK prover                	[0.2879s x1.00]	(0.5855s x1.00 from start)

BCS parameters
* digest_len (bytes) = 32
* digest_len (bits) = 256
* hash_type = blake2b
(enter) verifier_seal_interaction_registrations	[             ]	(0.5894s x1.00 from start)
(leave) verifier_seal_interaction_registrations	[0.0008s x1.00]	(0.5902s x1.00 from start)

* Argument size in bytes (IOP): 19021
* Argument size in bytes (BCS): 33312
* Argument size in bytes (total): 52333

If we were to remove pruning of authentication paths in BCS,
the argument would have the following sizes:
* Argument size in bytes (BCS, no pruning): 68032
* Argument size in bytes (total, no pruning): 87053

total prover messages size: 23
total two to one hashes: 1218
total leaves hashed: 826
total hashes: 2044

Transcript info by round
Per round IOP sizes don't include prover messages

round 0
MT_depth 15
IOP size: 5336 bytes
BCS size: 8544 bytes
number of two to one hashes: 294
number of leaves hashed: 232
oracles in round: fw, fAz, fBz, fCz, 

round 1
MT_depth 15
IOP size: 1334 bytes
BCS size: 8544 bytes
number of two to one hashes: 294
number of leaves hashed: 58
oracles in round: sumcheck h, 

round 2
MT_depth 13
IOP size: 2668 bytes
BCS size: 6432 bytes
number of two to one hashes: 228
number of leaves hashed: 116
oracles in round: TODO: Fill in this name (batching.tcc), 

round 3
MT_depth 11
IOP size: 2668 bytes
BCS size: 4672 bytes
number of two to one hashes: 173
number of leaves hashed: 116
oracles in round: TODO: Fill in this name (batching.tcc), 

round 4
MT_depth 9
IOP size: 2668 bytes
BCS size: 3040 bytes
number of two to one hashes: 122
number of leaves hashed: 116
oracles in round: TODO: Fill in this name (batching.tcc), 

round 5
MT_depth 7
IOP size: 2576 bytes
BCS size: 1632 bytes
number of two to one hashes: 77
number of leaves hashed: 112
oracles in round: TODO: Fill in this name (batching.tcc), 

round 6
MT_depth 5
IOP size: 1748 bytes
BCS size: 416 bytes
number of two to one hashes: 30
number of leaves hashed: 76
oracles in round: TODO: Fill in this name (batching.tcc), 


(enter) Aurora SNARK verifier              	[             ]	(0.5908s x1.00 from start)
  
Aurora SNARK parameters
  * security parameter (bits) = 128
  * RS extra dimensions = 5
  * LDT reducer soundness type = heuristic
  * FRI soundness type = heuristic
  * zero-knowledge = false
  * domain type = multiplicative coset

Aurora IOP parameters
  * target security parameter = 128
  * achieved security parameter = 116.0
  * RS extra dimensions = 5
  * codeword domain dim = 16
  * constraint domain dim = 11
  * variable domain dim = 11
  * query bound = 0
  * make zk = false
  * domain type = multiplicative coset

Multi lincheck parameters
  * target interactive soundness error (bits) = 131
  * achieved interactive soundness error (bits) = 169.0
  * interactive repetitions = 1
  * constraint domain dim = 11
  * make zk = false
  * domain type = multiplicative coset

LDT instance reducer parameters
  * soundness type = heuristic
  * target interactive soundness error (bits) = 131
  * achieved interactive soundness error (bits) = 164.0
  * codeword domain dim = 16
  * max tested degree bound = 2048
  * max constraint degree bound = 4095
  * absolute proximity parameter = 61440
  * fractional proximity parameter = 0.937500
  * num output LDT instances = 1

FRI parameters
  * soundness type = heuristic
  * target interactive soundness error (bits) = 131
  * achieved interactive soundness error (bits) = 180.0
  * target query soundness error (bits) = 115
  * achieved query soundness error (bits) = 116.0
  * codeword domain dim = 16
  * effective proximity parameter = 0.937500
  * number of interactive repetitions = 1
  * number of query repetitions = 29
  * localization parameter array = { 1 2 2 2 2 2 }
  * number of reductions = 6

BCS parameters
  * digest_len (bytes) = 32
  * digest_len (bits) = 256
  * hash_type = blake2b
  (enter) Aurora IOP protocol initialization and registration	[             ]	(0.5909s x1.00 from start)
    (enter) verifier_seal_interaction_registrations	[             ]	(0.5913s x1.00 from start)
    (leave) verifier_seal_interaction_registrations	[0.0007s x1.00]	(0.5921s x1.00 from start)
  (leave) Aurora IOP protocol initialization and registration	[0.0013s x1.00]	(0.5922s x1.00 from start)
  (enter) Check semantic validity of IOP transcript	[             ]	(0.5922s x1.00 from start)
  (leave) Check semantic validity of IOP transcript	[0.0000s x1.13]	(0.5922s x1.00 from start)
  (enter) Construct R1CS verifier state      	[             ]	(0.5922s x1.00 from start)
    (enter) multi_lincheck compute alpha powers	[             ]	(0.5922s x1.00 from start)
    (leave) multi_lincheck compute alpha powers	[0.0000s x1.01]	(0.5922s x1.00 from start)
    (enter) multi_lincheck compute p_alpha_prime	[             ]	(0.5922s x1.00 from start)
    (leave) multi_lincheck compute p_alpha_prime	[0.0000s x1.01]	(0.5923s x1.00 from start)
    (enter) multi_lincheck compute p_alpha_ABC 	[             ]	(0.5923s x1.00 from start)
    (leave) multi_lincheck compute p_alpha_ABC 	[0.0006s x1.00]	(0.5929s x1.00 from start)
    (enter) multi_lincheck IFFT p_alphas       	[             ]	(0.5929s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(0.5929s x1.00 from start)
        * Vector size: 2048
        * Coset size: 2048
      (leave) Call to multiplicative_IFFT_wrapper	[0.0009s x1.00]	(0.5938s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(0.5938s x1.00 from start)
        * Vector size: 2048
        * Coset size: 2048
      (leave) Call to multiplicative_IFFT_wrapper	[0.0009s x1.00]	(0.5947s x1.00 from start)
    (leave) multi_lincheck IFFT p_alphas       	[0.0018s x1.00]	(0.5947s x1.00 from start)
  (leave) Construct R1CS verifier state      	[0.0025s x1.00]	(0.5947s x1.00 from start)
  (enter) Check LDT verifier predicate       	[             ]	(0.5947s x1.00 from start)
    * Number of FRI interactions: 1
    * Number of FRI query sets per interaction: 29
    * Total number of FRI queries over all query sets (incl. repeated queries): 638
  (leave) Check LDT verifier predicate       	[0.0093s x1.00]	(0.6040s x1.00 from start)
  * IOP transcript valid: true
  * Full protocol decision predicate satisfied: true
(leave) Aurora SNARK verifier              	[0.0132s x1.00]	(0.6040s x1.00 from start)


* Verifier satisfied: true

================================================================================

(enter) Check satisfiability of R1CS example	[             ]	(0.6583s x1.00 from start)
(leave) Check satisfiability of R1CS example	[0.0005s x1.00]	(0.6588s x1.00 from start)

* R1CS number of constraints: 4096
* R1CS number of variables: 4095
* R1CS number of variables for primary input: 15
* R1CS number of variables for auxiliary input: 4080
* R1CS size of constraint system (bytes): 314880
* R1CS size of primary input (bytes): 360
* R1CS size of auxiliary input (bytes): 97920

(enter) Aurora SNARK prover                	[             ]	(0.6588s x1.00 from start)
  
Aurora SNARK parameters
  * security parameter (bits) = 128
  * RS extra dimensions = 5
  * LDT reducer soundness type = heuristic
  * FRI soundness type = heuristic
  * zero-knowledge = false
  * domain type = multiplicative coset

Aurora IOP parameters
  * target security parameter = 128
  * achieved security parameter = 116.0
  * RS extra dimensions = 5
  * codeword domain dim = 17
  * constraint domain dim = 12
  * variable domain dim = 12
  * query bound = 0
  * make zk = false
  * domain type = multiplicative coset

Multi lincheck parameters
  * target interactive soundness error (bits) = 131
  * achieved interactive soundness error (bits) = 168.0
  * interactive repetitions = 1
  * constraint domain dim = 12
  * make zk = false
  * domain type = multiplicative coset

LDT instance reducer parameters
  * soundness type = heuristic
  * target interactive soundness error (bits) = 131
  * achieved interactive soundness error (bits) = 163.0
  * codeword domain dim = 17
  * max tested degree bound = 4096
  * max constraint degree bound = 8191
  * absolute proximity parameter = 122880
  * fractional proximity parameter = 0.937500
  * num output LDT instances = 1

FRI parameters
  * soundness type = heuristic
  * target interactive soundness error (bits) = 131
  * achieved interactive soundness error (bits) = 180.0
  * target query soundness error (bits) = 114
  * achieved query soundness error (bits) = 116.0
  * codeword domain dim = 17
  * effective proximity parameter = 0.937500
  * number of interactive repetitions = 1
  * number of query repetitions = 29
  * localization parameter array = { 1 2 2 2 2 2 }
  * number of reductions = 6

BCS parameters
  * digest_len (bytes) = 32
  * digest_len (bits) = 256
  * hash_type = blake2b
  (enter) Submit witness oracles             	[             ]	(0.6596s x1.00 from start)
    (enter) Compute randomized f_w             	[             ]	(0.6596s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(0.6596s x1.00 from start)
        * Vector size: 16
        * Coset size: 16
      (leave) Call to multiplicative_IFFT_wrapper	[0.0000s x1.07]	(0.6597s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(0.6597s x1.00 from start)
        * Vector size: 16
        * Subgroup size: 4096
      (leave) Call to multiplicative_FFT_wrapper 	[0.0005s x1.00]	(0.6601s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(0.6603s x1.00 from start)
        * Vector size: 4096
        * Coset size: 4096
      (leave) Call to multiplicative_IFFT_wrapper	[0.0019s x1.00]	(0.6622s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(0.6625s x1.00 from start)
        * Vector size: 4080
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0397s x1.00]	(0.7022s x1.00 from start)
    (leave) Compute randomized f_w             	[0.0426s x1.00]	(0.7022s x1.00 from start)
    (enter) Compute A/B/Cz                     	[             ]	(0.7022s x1.00 from start)
    (leave) Compute A/B/Cz                     	[0.0004s x1.00]	(0.7027s x1.00 from start)
    (enter) Compute f_{A/B/Cz} over codeword domain	[             ]	(0.7027s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(0.7027s x1.00 from start)
        * Vector size: 4096
        * Coset size: 4096
      (leave) Call to multiplicative_IFFT_wrapper	[0.0019s x1.00]	(0.7046s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(0.7047s x1.00 from start)
        * Vector size: 4096
        * Coset size: 4096
      (leave) Call to multiplicative_IFFT_wrapper	[0.0019s x1.00]	(0.7066s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(0.7066s x1.00 from start)
        * Vector size: 4096
        * Coset size: 4096
      (leave) Call to multiplicative_IFFT_wrapper	[0.0019s x1.00]	(0.7085s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(0.7085s x1.00 from start)
        * Vector size: 4096
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0367s x1.00]	(0.7453s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(0.7453s x1.00 from start)
        * Vector size: 4096
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0371s x1.00]	(0.7824s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(0.7824s x1.00 from start)
        * Vector size: 4096
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0371s x1.00]	(0.8195s x1.00 from start)
    (leave) Compute f_{A/B/Cz} over codeword domain	[0.1168s x1.00]	(0.8195s x1.00 from start)
    (enter) Call IOP oracle submission routines	[             ]	(0.8195s x1.00 from start)
    (leave) Call IOP oracle submission routines	[0.0000s x1.12]	(0.8195s x1.00 from start)
  (leave) Submit witness oracles             	[0.1599s x1.00]	(0.8195s x1.00 from start)
  (enter) LDT Reducer: Submit masking polynomial	[             ]	(0.8195s x1.00 from start)
  (leave) LDT Reducer: Submit masking polynomial	[0.0000s x1.06]	(0.8196s x1.00 from start)
  (enter) Finish prover round                	[             ]	(0.8196s x1.00 from start)
    (enter) Construct Merkle tree              	[             ]	(0.8196s x1.00 from start)
    (leave) Construct Merkle tree              	[0.0480s x1.00]	(0.8675s x1.00 from start)
  (leave) Finish prover round                	[0.0480s x1.00]	(0.8676s x1.00 from start)
  (enter) pow                                	[             ]	(0.8676s x1.00 from start)
  (leave) pow                                	[0.0000s x1.18]	(0.8676s x1.00 from start)
  (enter) multi_lincheck: Calculate and submit proof	[             ]	(0.8676s x1.00 from start)
    (enter) multi_lincheck compute alpha powers	[             ]	(0.8676s x1.00 from start)
    (leave) multi_lincheck compute alpha powers	[0.0001s x1.00]	(0.8677s x1.00 from start)
    (enter) multi_lincheck compute p_alpha_prime	[             ]	(0.8677s x1.00 from start)
    (leave) multi_lincheck compute p_alpha_prime	[0.0001s x1.00]	(0.8678s x1.00 from start)
    (enter) multi_lincheck compute p_alpha_ABC 	[             ]	(0.8678s x1.00 from start)
    (leave) multi_lincheck compute p_alpha_ABC 	[0.0012s x1.00]	(0.8690s x1.00 from start)
    (enter) multi_lincheck IFFT p_alphas       	[             ]	(0.8690s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(0.8691s x1.00 from start)
        * Vector size: 4096
        * Coset size: 4096
      (leave) Call to multiplicative_IFFT_wrapper	[0.0020s x1.00]	(0.8710s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(0.8711s x1.00 from start)
        * Vector size: 4096
        * Coset size: 4096
      (leave) Call to multiplicative_IFFT_wrapper	[0.0019s x1.00]	(0.8730s x1.00 from start)
    (leave) multi_lincheck IFFT p_alphas       	[0.0040s x1.00]	(0.8730s x1.00 from start)
    (enter) fz evaluated contents              	[             ]	(0.8731s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(0.8747s x1.00 from start)
        * Vector size: 16
        * Coset size: 16
      (leave) Call to multiplicative_IFFT_wrapper	[0.0000s x0.98]	(0.8747s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(0.8747s x1.00 from start)
        * Vector size: 16
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0131s x1.00]	(0.8878s x1.00 from start)
    (leave) fz evaluated contents              	[0.0203s x1.00]	(0.8934s x1.00 from start)
    (enter) multi_lincheck evaluated contents  	[             ]	(0.8936s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(0.8937s x1.00 from start)
        * Vector size: 4096
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0370s x1.00]	(0.9306s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(0.9307s x1.00 from start)
        * Vector size: 4096
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0373s x1.00]	(0.9680s x1.00 from start)
    (leave) multi_lincheck evaluated contents  	[0.0970s x1.00]	(0.9906s x1.00 from start)
    (enter) Call to multiplicative_IFFT_wrapper	[             ]	(0.9951s x1.00 from start)
      * Vector size: 8192
      * Coset size: 8192
    (leave) Call to multiplicative_IFFT_wrapper	[0.0045s x1.00]	(0.9996s x1.00 from start)
    (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1.0000s x1.00 from start)
      * Vector size: 4095
      * Subgroup size: 131072
    (leave) Call to multiplicative_FFT_wrapper 	[0.0361s x1.00]	(1.0361s x1.00 from start)
  (leave) multi_lincheck: Calculate and submit proof	[0.1685s x1.00]	(1.0361s x1.00 from start)
  (enter) Finish prover round                	[             ]	(1.0361s x1.00 from start)
    (enter) Construct Merkle tree              	[             ]	(1.0361s x1.00 from start)
    (leave) Construct Merkle tree              	[0.0387s x1.00]	(1.0748s x1.00 from start)
  (leave) Finish prover round                	[0.0387s x1.00]	(1.0748s x1.00 from start)
  (enter) pow                                	[             ]	(1.0748s x1.00 from start)
  (leave) pow                                	[0.0000s x1.17]	(1.0748s x1.00 from start)
  (enter) LDT Reducer: Calculate and submit proof	[             ]	(1.0748s x1.00 from start)
    (enter) Sumcheck: g evaluated contents     	[             ]	(1.0749s x1.00 from start)
    (leave) Sumcheck: g evaluated contents     	[0.0132s x1.00]	(1.0881s x1.00 from start)
    (enter) rowcheck evaluated contents        	[             ]	(1.0881s x1.00 from start)
    (leave) rowcheck evaluated contents        	[0.0090s x1.00]	(1.0971s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(1.1445s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0208s x1.00]	(1.1653s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(1.1655s x1.00 from start)
      (enter) Finish prover round                	[             ]	(1.1655s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(1.1655s x1.00 from start)
        (leave) Construct Merkle tree              	[0.0093s x1.00]	(1.1748s x1.00 from start)
      (leave) Finish prover round                	[0.0093s x1.00]	(1.1748s x1.00 from start)
      (enter) pow                                	[             ]	(1.1748s x1.00 from start)
      (leave) pow                                	[0.0000s x1.22]	(1.1748s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0093s x1.00]	(1.1749s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(1.1749s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0088s x1.00]	(1.1836s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(1.1837s x1.00 from start)
      (enter) Finish prover round                	[             ]	(1.1837s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(1.1837s x1.00 from start)
        (leave) Construct Merkle tree              	[0.0033s x1.00]	(1.1870s x1.00 from start)
      (leave) Finish prover round                	[0.0033s x1.00]	(1.1870s x1.00 from start)
      (enter) pow                                	[             ]	(1.1870s x1.00 from start)
      (leave) pow                                	[0.0000s x1.10]	(1.1870s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0033s x1.00]	(1.1870s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(1.1870s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0021s x1.00]	(1.1891s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(1.1891s x1.00 from start)
      (enter) Finish prover round                	[             ]	(1.1891s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(1.1891s x1.00 from start)
        (leave) Construct Merkle tree              	[0.0006s x1.00]	(1.1897s x1.00 from start)
      (leave) Finish prover round                	[0.0006s x1.00]	(1.1897s x1.00 from start)
      (enter) pow                                	[             ]	(1.1897s x1.00 from start)
      (leave) pow                                	[0.0000s x1.10]	(1.1897s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0006s x1.00]	(1.1897s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(1.1897s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0005s x1.00]	(1.1902s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(1.1902s x1.00 from start)
      (enter) Finish prover round                	[             ]	(1.1902s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(1.1902s x1.00 from start)
        (leave) Construct Merkle tree              	[0.0002s x1.00]	(1.1904s x1.00 from start)
      (leave) Finish prover round                	[0.0002s x1.00]	(1.1904s x1.00 from start)
      (enter) pow                                	[             ]	(1.1904s x1.00 from start)
      (leave) pow                                	[0.0000s x1.06]	(1.1904s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0002s x1.00]	(1.1904s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(1.1904s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0002s x1.00]	(1.1906s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(1.1906s x1.00 from start)
      (enter) Finish prover round                	[             ]	(1.1906s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(1.1906s x1.00 from start)
        (leave) Construct Merkle tree              	[0.0000s x1.00]	(1.1906s x1.00 from start)
      (leave) Finish prover round                	[0.0001s x1.00]	(1.1906s x1.00 from start)
      (enter) pow                                	[             ]	(1.1906s x1.00 from start)
      (leave) pow                                	[0.0000s x1.04]	(1.1906s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0001s x1.00]	(1.1906s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(1.1906s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0000s x1.00]	(1.1907s x1.00 from start)
    (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1.1907s x1.00 from start)
      * Vector size: 64
      * Coset size: 64
    (leave) Call to multiplicative_IFFT_wrapper	[0.0000s x1.01]	(1.1907s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(1.1907s x1.00 from start)
      (enter) Finish prover round                	[             ]	(1.1907s x1.00 from start)
      (leave) Finish prover round                	[0.0000s x1.01]	(1.1907s x1.00 from start)
      (enter) pow                                	[             ]	(1.1907s x1.00 from start)
      (leave) pow                                	[0.0271s x1.00]	(1.2179s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0272s x1.00]	(1.2179s x1.00 from start)
  (leave) LDT Reducer: Calculate and submit proof	[0.1433s x1.00]	(1.2182s x1.00 from start)
  (enter) Obtain transcript                  	[             ]	(1.2182s x1.00 from start)
  (leave) Obtain transcript                  	[0.0164s x1.00]	(1.2346s x1.00 from start)
  * Total size of proof oracles (bytes): 17823744
  * Total size of Merkle tree (bytes): 9785120
  * Total size of prover state (bytes): 27608864
(leave) Aurora SNARK prover                	[0.5758s x1.00]	(1.2346s x1.00 from start)

BCS parameters
* digest_len (bytes) = 32
* digest_len (bits) = 256
* hash_type = blake2b
(enter) verifier_seal_interaction_registrations	[             ]	(1.2416s x1.00 from start)
(leave) verifier_seal_interaction_registrations	[0.0008s x1.00]	(1.2424s x1.00 from start)

* Argument size in bytes (IOP): 19596
* Argument size in bytes (BCS): 38720
* Argument size in bytes (total): 58316

If we were to remove pruning of authentication paths in BCS,
the argument would have the following sizes:
* Argument size in bytes (BCS, no pruning): 75392
* Argument size in bytes (total, no pruning): 94988

total prover messages size: 46
total two to one hashes: 1393
total leaves hashed: 850
total hashes: 2243

Transcript info by round
Per round IOP sizes don't include prover messages

round 0
MT_depth 16
IOP size: 5336 bytes
BCS size: 9600 bytes
number of two to one hashes: 327
number of leaves hashed: 232
oracles in round: fw, fAz, fBz, fCz, 

round 1
MT_depth 16
IOP size: 1334 bytes
BCS size: 9600 bytes
number of two to one hashes: 327
number of leaves hashed: 58
oracles in round: sumcheck h, 

round 2
MT_depth 14
IOP size: 2668 bytes
BCS size: 7232 bytes
number of two to one hashes: 253
number of leaves hashed: 116
oracles in round: TODO: Fill in this name (batching.tcc), 

round 3
MT_depth 12
IOP size: 2668 bytes
BCS size: 5312 bytes
number of two to one hashes: 193
number of leaves hashed: 116
oracles in round: TODO: Fill in this name (batching.tcc), 

round 4
MT_depth 10
IOP size: 2668 bytes
BCS size: 3776 bytes
number of two to one hashes: 145
number of leaves hashed: 116
oracles in round: TODO: Fill in this name (batching.tcc), 

round 5
MT_depth 8
IOP size: 2668 bytes
BCS size: 2240 bytes
number of two to one hashes: 97
number of leaves hashed: 116
oracles in round: TODO: Fill in this name (batching.tcc), 

round 6
MT_depth 6
IOP size: 2208 bytes
BCS size: 928 bytes
number of two to one hashes: 51
number of leaves hashed: 96
oracles in round: TODO: Fill in this name (batching.tcc), 


(enter) Aurora SNARK verifier              	[             ]	(1.2432s x1.00 from start)
  
Aurora SNARK parameters
  * security parameter (bits) = 128
  * RS extra dimensions = 5
  * LDT reducer soundness type = heuristic
  * FRI soundness type = heuristic
  * zero-knowledge = false
  * domain type = multiplicative coset

Aurora IOP parameters
  * target security parameter = 128
  * achieved security parameter = 116.0
  * RS extra dimensions = 5
  * codeword domain dim = 17
  * constraint domain dim = 12
  * variable domain dim = 12
  * query bound = 0
  * make zk = false
  * domain type = multiplicative coset

Multi lincheck parameters
  * target interactive soundness error (bits) = 131
  * achieved interactive soundness error (bits) = 168.0
  * interactive repetitions = 1
  * constraint domain dim = 12
  * make zk = false
  * domain type = multiplicative coset

LDT instance reducer parameters
  * soundness type = heuristic
  * target interactive soundness error (bits) = 131
  * achieved interactive soundness error (bits) = 163.0
  * codeword domain dim = 17
  * max tested degree bound = 4096
  * max constraint degree bound = 8191
  * absolute proximity parameter = 122880
  * fractional proximity parameter = 0.937500
  * num output LDT instances = 1

FRI parameters
  * soundness type = heuristic
  * target interactive soundness error (bits) = 131
  * achieved interactive soundness error (bits) = 180.0
  * target query soundness error (bits) = 114
  * achieved query soundness error (bits) = 116.0
  * codeword domain dim = 17
  * effective proximity parameter = 0.937500
  * number of interactive repetitions = 1
  * number of query repetitions = 29
  * localization parameter array = { 1 2 2 2 2 2 }
  * number of reductions = 6

BCS parameters
  * digest_len (bytes) = 32
  * digest_len (bits) = 256
  * hash_type = blake2b
  (enter) Aurora IOP protocol initialization and registration	[             ]	(1.2433s x1.00 from start)
    (enter) verifier_seal_interaction_registrations	[             ]	(1.2440s x1.00 from start)
    (leave) verifier_seal_interaction_registrations	[0.0008s x1.00]	(1.2448s x1.00 from start)
  (leave) Aurora IOP protocol initialization and registration	[0.0016s x1.00]	(1.2449s x1.00 from start)
  (enter) Check semantic validity of IOP transcript	[             ]	(1.2449s x1.00 from start)
  (leave) Check semantic validity of IOP transcript	[0.0000s x1.13]	(1.2449s x1.00 from start)
  (enter) Construct R1CS verifier state      	[             ]	(1.2449s x1.00 from start)
    (enter) multi_lincheck compute alpha powers	[             ]	(1.2449s x1.00 from start)
    (leave) multi_lincheck compute alpha powers	[0.0001s x1.00]	(1.2450s x1.00 from start)
    (enter) multi_lincheck compute p_alpha_prime	[             ]	(1.2450s x1.00 from start)
    (leave) multi_lincheck compute p_alpha_prime	[0.0001s x1.01]	(1.2451s x1.00 from start)
    (enter) multi_lincheck compute p_alpha_ABC 	[             ]	(1.2451s x1.00 from start)
    (leave) multi_lincheck compute p_alpha_ABC 	[0.0012s x1.00]	(1.2463s x1.00 from start)
    (enter) multi_lincheck IFFT p_alphas       	[             ]	(1.2463s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1.2463s x1.00 from start)
        * Vector size: 4096
        * Coset size: 4096
      (leave) Call to multiplicative_IFFT_wrapper	[0.0019s x1.00]	(1.2482s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1.2482s x1.00 from start)
        * Vector size: 4096
        * Coset size: 4096
      (leave) Call to multiplicative_IFFT_wrapper	[0.0019s x1.00]	(1.2502s x1.00 from start)
    (leave) multi_lincheck IFFT p_alphas       	[0.0039s x1.00]	(1.2502s x1.00 from start)
  (leave) Construct R1CS verifier state      	[0.0053s x1.00]	(1.2502s x1.00 from start)
  (enter) Check LDT verifier predicate       	[             ]	(1.2502s x1.00 from start)
    * Number of FRI interactions: 1
    * Number of FRI query sets per interaction: 29
    * Total number of FRI queries over all query sets (incl. repeated queries): 638
  (leave) Check LDT verifier predicate       	[0.0167s x1.00]	(1.2669s x1.00 from start)
  * IOP transcript valid: true
  * Full protocol decision predicate satisfied: true
(leave) Aurora SNARK verifier              	[0.0236s x1.00]	(1.2669s x1.00 from start)


* Verifier satisfied: true

================================================================================

(enter) Check satisfiability of R1CS example	[             ]	(1.3730s x1.00 from start)
(leave) Check satisfiability of R1CS example	[0.0009s x1.00]	(1.3738s x1.00 from start)

* R1CS number of constraints: 8192
* R1CS number of variables: 8191
* R1CS number of variables for primary input: 15
* R1CS number of variables for auxiliary input: 8176
* R1CS size of constraint system (bytes): 632832
* R1CS size of primary input (bytes): 360
* R1CS size of auxiliary input (bytes): 196224

(enter) Aurora SNARK prover                	[             ]	(1.3739s x1.00 from start)
  
Aurora SNARK parameters
  * security parameter (bits) = 128
  * RS extra dimensions = 5
  * LDT reducer soundness type = heuristic
  * FRI soundness type = heuristic
  * zero-knowledge = false
  * domain type = multiplicative coset

Aurora IOP parameters
  * target security parameter = 128
  * achieved security parameter = 116.0
  * RS extra dimensions = 5
  * codeword domain dim = 18
  * constraint domain dim = 13
  * variable domain dim = 13
  * query bound = 0
  * make zk = false
  * domain type = multiplicative coset

Multi lincheck parameters
  * target interactive soundness error (bits) = 131
  * achieved interactive soundness error (bits) = 167.0
  * interactive repetitions = 1
  * constraint domain dim = 13
  * make zk = false
  * domain type = multiplicative coset

LDT instance reducer parameters
  * soundness type = heuristic
  * target interactive soundness error (bits) = 131
  * achieved interactive soundness error (bits) = 162.0
  * codeword domain dim = 18
  * max tested degree bound = 8192
  * max constraint degree bound = 16383
  * absolute proximity parameter = 245760
  * fractional proximity parameter = 0.937500
  * num output LDT instances = 1

FRI parameters
  * soundness type = heuristic
  * target interactive soundness error (bits) = 131
  * achieved interactive soundness error (bits) = 180.0
  * target query soundness error (bits) = 113
  * achieved query soundness error (bits) = 116.0
  * codeword domain dim = 18
  * effective proximity parameter = 0.937500
  * number of interactive repetitions = 1
  * number of query repetitions = 29
  * localization parameter array = { 1 2 2 2 2 2 2 }
  * number of reductions = 7

BCS parameters
  * digest_len (bytes) = 32
  * digest_len (bits) = 256
  * hash_type = blake2b
  (enter) Submit witness oracles             	[             ]	(1.3752s x1.00 from start)
    (enter) Compute randomized f_w             	[             ]	(1.3752s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1.3752s x1.00 from start)
        * Vector size: 16
        * Coset size: 16
      (leave) Call to multiplicative_IFFT_wrapper	[0.0000s x1.06]	(1.3752s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1.3752s x1.00 from start)
        * Vector size: 16
        * Subgroup size: 8192
      (leave) Call to multiplicative_FFT_wrapper 	[0.0010s x1.00]	(1.3762s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1.3764s x1.00 from start)
        * Vector size: 8192
        * Coset size: 8192
      (leave) Call to multiplicative_IFFT_wrapper	[0.0041s x1.00]	(1.3806s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1.3811s x1.00 from start)
        * Vector size: 8176
        * Subgroup size: 262144
      (leave) Call to multiplicative_FFT_wrapper 	[0.0880s x1.00]	(1.4691s x1.00 from start)
    (leave) Compute randomized f_w             	[0.0940s x1.00]	(1.4691s x1.00 from start)
    (enter) Compute A/B/Cz                     	[             ]	(1.4691s x1.00 from start)
    (leave) Compute A/B/Cz                     	[0.0009s x1.00]	(1.4700s x1.00 from start)
    (enter) Compute f_{A/B/Cz} over codeword domain	[             ]	(1.4701s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1.4701s x1.00 from start)
        * Vector size: 8192
        * Coset size: 8192
      (leave) Call to multiplicative_IFFT_wrapper	[0.0041s x1.00]	(1.4742s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1.4743s x1.00 from start)
        * Vector size: 8192
        * Coset size: 8192
      (leave) Call to multiplicative_IFFT_wrapper	[0.0042s x1.00]	(1.4784s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1.4785s x1.00 from start)
        * Vector size: 8192
        * Coset size: 8192
      (leave) Call to multiplicative_IFFT_wrapper	[0.0042s x1.00]	(1.4827s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1.4828s x1.00 from start)
        * Vector size: 8192
        * Subgroup size: 262144
      (leave) Call to multiplicative_FFT_wrapper 	[0.0795s x1.00]	(1.5623s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1.5624s x1.00 from start)
        * Vector size: 8192
        * Subgroup size: 262144
      (leave) Call to multiplicative_FFT_wrapper 	[0.0804s x1.00]	(1.6428s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1.6428s x1.00 from start)
        * Vector size: 8192
        * Subgroup size: 262144
      (leave) Call to multiplicative_FFT_wrapper 	[0.0803s x1.00]	(1.7232s x1.00 from start)
    (leave) Compute f_{A/B/Cz} over codeword domain	[0.2531s x1.00]	(1.7232s x1.00 from start)
    (enter) Call IOP oracle submission routines	[             ]	(1.7232s x1.00 from start)
    (leave) Call IOP oracle submission routines	[0.0000s x1.10]	(1.7232s x1.00 from start)
  (leave) Submit witness oracles             	[0.3480s x1.00]	(1.7232s x1.00 from start)
  (enter) LDT Reducer: Submit masking polynomial	[             ]	(1.7232s x1.00 from start)
  (leave) LDT Reducer: Submit masking polynomial	[0.0000s x1.20]	(1.7232s x1.00 from start)
  (enter) Finish prover round                	[             ]	(1.7232s x1.00 from start)
    (enter) Construct Merkle tree              	[             ]	(1.7232s x1.00 from start)
    (leave) Construct Merkle tree              	[0.0961s x1.00]	(1.8193s x1.00 from start)
  (leave) Finish prover round                	[0.0961s x1.00]	(1.8194s x1.00 from start)
  (enter) pow                                	[             ]	(1.8194s x1.00 from start)
  (leave) pow                                	[0.0000s x1.11]	(1.8194s x1.00 from start)
  (enter) multi_lincheck: Calculate and submit proof	[             ]	(1.8194s x1.00 from start)
    (enter) multi_lincheck compute alpha powers	[             ]	(1.8194s x1.00 from start)
    (leave) multi_lincheck compute alpha powers	[0.0002s x1.00]	(1.8196s x1.00 from start)
    (enter) multi_lincheck compute p_alpha_prime	[             ]	(1.8196s x1.00 from start)
    (leave) multi_lincheck compute p_alpha_prime	[0.0001s x1.00]	(1.8197s x1.00 from start)
    (enter) multi_lincheck compute p_alpha_ABC 	[             ]	(1.8197s x1.00 from start)
    (leave) multi_lincheck compute p_alpha_ABC 	[0.0025s x1.00]	(1.8222s x1.00 from start)
    (enter) multi_lincheck IFFT p_alphas       	[             ]	(1.8222s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1.8223s x1.00 from start)
        * Vector size: 8192
        * Coset size: 8192
      (leave) Call to multiplicative_IFFT_wrapper	[0.0043s x1.00]	(1.8266s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1.8267s x1.00 from start)
        * Vector size: 8192
        * Coset size: 8192
      (leave) Call to multiplicative_IFFT_wrapper	[0.0041s x1.00]	(1.8308s x1.00 from start)
    (leave) multi_lincheck IFFT p_alphas       	[0.0087s x1.00]	(1.8309s x1.00 from start)
    (enter) fz evaluated contents              	[             ]	(1.8309s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(1.8341s x1.00 from start)
        * Vector size: 16
        * Coset size: 16
      (leave) Call to multiplicative_IFFT_wrapper	[0.0000s x0.98]	(1.8341s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1.8341s x1.00 from start)
        * Vector size: 16
        * Subgroup size: 262144
      (leave) Call to multiplicative_FFT_wrapper 	[0.0264s x1.00]	(1.8605s x1.00 from start)
    (leave) fz evaluated contents              	[0.0405s x1.00]	(1.8714s x1.00 from start)
    (enter) multi_lincheck evaluated contents  	[             ]	(1.8719s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1.8719s x1.00 from start)
        * Vector size: 8192
        * Subgroup size: 262144
      (leave) Call to multiplicative_FFT_wrapper 	[0.0802s x1.00]	(1.9522s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(1.9522s x1.00 from start)
        * Vector size: 8192
        * Subgroup size: 262144
      (leave) Call to multiplicative_FFT_wrapper 	[0.0805s x1.00]	(2.0327s x1.00 from start)
    (leave) multi_lincheck evaluated contents  	[0.2068s x1.00]	(2.0787s x1.00 from start)
    (enter) Call to multiplicative_IFFT_wrapper	[             ]	(2.0889s x1.00 from start)
      * Vector size: 16384
      * Coset size: 16384
    (leave) Call to multiplicative_IFFT_wrapper	[0.0096s x1.00]	(2.0985s x1.00 from start)
    (enter) Call to multiplicative_FFT_wrapper 	[             ]	(2.0993s x1.00 from start)
      * Vector size: 8191
      * Subgroup size: 262144
    (leave) Call to multiplicative_FFT_wrapper 	[0.0784s x1.00]	(2.1777s x1.00 from start)
  (leave) multi_lincheck: Calculate and submit proof	[0.3583s x1.00]	(2.1777s x1.00 from start)
  (enter) Finish prover round                	[             ]	(2.1777s x1.00 from start)
    (enter) Construct Merkle tree              	[             ]	(2.1777s x1.00 from start)
    (leave) Construct Merkle tree              	[0.0770s x1.00]	(2.2547s x1.00 from start)
  (leave) Finish prover round                	[0.0771s x1.00]	(2.2548s x1.00 from start)
  (enter) pow                                	[             ]	(2.2548s x1.00 from start)
  (leave) pow                                	[0.0000s x1.24]	(2.2548s x1.00 from start)
  (enter) LDT Reducer: Calculate and submit proof	[             ]	(2.2548s x1.00 from start)
    (enter) Sumcheck: g evaluated contents     	[             ]	(2.2548s x1.00 from start)
    (leave) Sumcheck: g evaluated contents     	[0.0264s x1.00]	(2.2812s x1.00 from start)
    (enter) rowcheck evaluated contents        	[             ]	(2.2813s x1.00 from start)
    (leave) rowcheck evaluated contents        	[0.0177s x1.00]	(2.2990s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(2.3936s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0420s x1.00]	(2.4356s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(2.4360s x1.00 from start)
      (enter) Finish prover round                	[             ]	(2.4360s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(2.4360s x1.00 from start)
        (leave) Construct Merkle tree              	[0.0186s x1.00]	(2.4546s x1.00 from start)
      (leave) Finish prover round                	[0.0187s x1.00]	(2.4546s x1.00 from start)
      (enter) pow                                	[             ]	(2.4547s x1.00 from start)
      (leave) pow                                	[0.0000s x1.22]	(2.4547s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0187s x1.00]	(2.4547s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(2.4547s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0174s x1.00]	(2.4720s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(2.4722s x1.00 from start)
      (enter) Finish prover round                	[             ]	(2.4722s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(2.4722s x1.00 from start)
        (leave) Construct Merkle tree              	[0.0047s x1.00]	(2.4769s x1.00 from start)
      (leave) Finish prover round                	[0.0047s x1.00]	(2.4769s x1.00 from start)
      (enter) pow                                	[             ]	(2.4769s x1.00 from start)
      (leave) pow                                	[0.0000s x1.14]	(2.4769s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0047s x1.00]	(2.4769s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(2.4769s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0043s x1.00]	(2.4812s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(2.4812s x1.00 from start)
      (enter) Finish prover round                	[             ]	(2.4812s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(2.4812s x1.00 from start)
        (leave) Construct Merkle tree              	[0.0012s x1.00]	(2.4824s x1.00 from start)
      (leave) Finish prover round                	[0.0012s x1.00]	(2.4824s x1.00 from start)
      (enter) pow                                	[             ]	(2.4824s x1.00 from start)
      (leave) pow                                	[0.0000s x1.14]	(2.4824s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0012s x1.00]	(2.4824s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(2.4824s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0010s x1.00]	(2.4835s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(2.4835s x1.00 from start)
      (enter) Finish prover round                	[             ]	(2.4835s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(2.4835s x1.00 from start)
        (leave) Construct Merkle tree              	[0.0003s x1.00]	(2.4838s x1.00 from start)
      (leave) Finish prover round                	[0.0003s x1.00]	(2.4838s x1.00 from start)
      (enter) pow                                	[             ]	(2.4838s x1.00 from start)
      (leave) pow                                	[0.0000s x1.06]	(2.4838s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0003s x1.00]	(2.4838s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(2.4838s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0003s x1.00]	(2.4841s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(2.4841s x1.00 from start)
      (enter) Finish prover round                	[             ]	(2.4841s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(2.4841s x1.00 from start)
        (leave) Construct Merkle tree              	[0.0001s x1.00]	(2.4842s x1.00 from start)
      (leave) Finish prover round                	[0.0001s x1.00]	(2.4842s x1.00 from start)
      (enter) pow                                	[             ]	(2.4842s x1.00 from start)
      (leave) pow                                	[0.0000s x1.07]	(2.4842s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0001s x1.00]	(2.4842s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(2.4842s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0001s x1.00]	(2.4843s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(2.4843s x1.00 from start)
      (enter) Finish prover round                	[             ]	(2.4843s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(2.4843s x1.00 from start)
        (leave) Construct Merkle tree              	[0.0000s x1.00]	(2.4843s x1.00 from start)
      (leave) Finish prover round                	[0.0000s x1.00]	(2.4843s x1.00 from start)
      (enter) pow                                	[             ]	(2.4843s x1.00 from start)
      (leave) pow                                	[0.0000s x1.05]	(2.4843s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0000s x1.00]	(2.4843s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(2.4843s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0000s x1.00]	(2.4843s x1.00 from start)
    (enter) Call to multiplicative_IFFT_wrapper	[             ]	(2.4844s x1.00 from start)
      * Vector size: 32
      * Coset size: 32
    (leave) Call to multiplicative_IFFT_wrapper	[0.0000s x1.02]	(2.4844s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(2.4844s x1.00 from start)
      (enter) Finish prover round                	[             ]	(2.4844s x1.00 from start)
      (leave) Finish prover round                	[0.0000s x1.01]	(2.4844s x1.00 from start)
      (enter) pow                                	[             ]	(2.4844s x1.00 from start)
      (leave) pow                                	[0.0389s x1.00]	(2.5233s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0389s x1.00]	(2.5233s x1.00 from start)
  (leave) LDT Reducer: Calculate and submit proof	[0.2690s x1.00]	(2.5238s x1.00 from start)
  (enter) Obtain transcript                  	[             ]	(2.5238s x1.00 from start)
  (leave) Obtain transcript                  	[0.0313s x1.00]	(2.5551s x1.00 from start)
  * Total size of proof oracles (bytes): 35650560
  * Total size of Merkle tree (bytes): 19572480
  * Total size of prover state (bytes): 55223040
(leave) Aurora SNARK prover                	[1.1813s x1.00]	(2.5551s x1.00 from start)

BCS parameters
* digest_len (bytes) = 32
* digest_len (bits) = 256
* hash_type = blake2b
(enter) verifier_seal_interaction_registrations	[             ]	(2.5687s x1.00 from start)
(leave) verifier_seal_interaction_registrations	[0.0010s x1.00]	(2.5696s x1.00 from start)

* Argument size in bytes (IOP): 21505
* Argument size in bytes (BCS): 46496
* Argument size in bytes (total): 68001

If we were to remove pruning of authentication paths in BCS,
the argument would have the following sizes:
* Argument size in bytes (BCS, no pruning): 85312
* Argument size in bytes (total, no pruning): 106817

total prover messages size: 23
total two to one hashes: 1655
total leaves hashed: 934
total hashes: 2589

Transcript info by round
Per round IOP sizes don't include prover messages

round 0
MT_depth 17
IOP size: 5336 bytes
BCS size: 10592 bytes
number of two to one hashes: 358
number of leaves hashed: 232
oracles in round: fw, fAz, fBz, fCz, 

round 1
MT_depth 17
IOP size: 1334 bytes
BCS size: 10592 bytes
number of two to one hashes: 358
number of leaves hashed: 58
oracles in round: sumcheck h, 

round 2
MT_depth 15
IOP size: 2668 bytes
BCS size: 8448 bytes
number of two to one hashes: 291
number of leaves hashed: 116
oracles in round: TODO: Fill in this name (batching.tcc), 

round 3
MT_depth 13
IOP size: 2668 bytes
BCS size: 6784 bytes
number of two to one hashes: 239
number of leaves hashed: 116
oracles in round: TODO: Fill in this name (batching.tcc), 

round 4
MT_depth 11
IOP size: 2668 bytes
BCS size: 4896 bytes
number of two to one hashes: 180
number of leaves hashed: 116
oracles in round: TODO: Fill in this name (batching.tcc), 

round 5
MT_depth 9
IOP size: 2668 bytes
BCS size: 3200 bytes
number of two to one hashes: 127
number of leaves hashed: 116
oracles in round: TODO: Fill in this name (batching.tcc), 

round 6
MT_depth 7
IOP size: 2484 bytes
BCS size: 1568 bytes
number of two to one hashes: 74
number of leaves hashed: 108
oracles in round: TODO: Fill in this name (batching.tcc), 

round 7
MT_depth 5
IOP size: 1656 bytes
BCS size: 384 bytes
number of two to one hashes: 28
number of leaves hashed: 72
oracles in round: TODO: Fill in this name (batching.tcc), 


(enter) Aurora SNARK verifier              	[             ]	(2.5710s x1.00 from start)
  
Aurora SNARK parameters
  * security parameter (bits) = 128
  * RS extra dimensions = 5
  * LDT reducer soundness type = heuristic
  * FRI soundness type = heuristic
  * zero-knowledge = false
  * domain type = multiplicative coset

Aurora IOP parameters
  * target security parameter = 128
  * achieved security parameter = 116.0
  * RS extra dimensions = 5
  * codeword domain dim = 18
  * constraint domain dim = 13
  * variable domain dim = 13
  * query bound = 0
  * make zk = false
  * domain type = multiplicative coset

Multi lincheck parameters
  * target interactive soundness error (bits) = 131
  * achieved interactive soundness error (bits) = 167.0
  * interactive repetitions = 1
  * constraint domain dim = 13
  * make zk = false
  * domain type = multiplicative coset

LDT instance reducer parameters
  * soundness type = heuristic
  * target interactive soundness error (bits) = 131
  * achieved interactive soundness error (bits) = 162.0
  * codeword domain dim = 18
  * max tested degree bound = 8192
  * max constraint degree bound = 16383
  * absolute proximity parameter = 245760
  * fractional proximity parameter = 0.937500
  * num output LDT instances = 1

FRI parameters
  * soundness type = heuristic
  * target interactive soundness error (bits) = 131
  * achieved interactive soundness error (bits) = 180.0
  * target query soundness error (bits) = 113
  * achieved query soundness error (bits) = 116.0
  * codeword domain dim = 18
  * effective proximity parameter = 0.937500
  * number of interactive repetitions = 1
  * number of query repetitions = 29
  * localization parameter array = { 1 2 2 2 2 2 2 }
  * number of reductions = 7

BCS parameters
  * digest_len (bytes) = 32
  * digest_len (bits) = 256
  * hash_type = blake2b
  (enter) Aurora IOP protocol initialization and registration	[             ]	(2.5711s x1.00 from start)
    (enter) verifier_seal_interaction_registrations	[             ]	(2.5721s x1.00 from start)
    (leave) verifier_seal_interaction_registrations	[0.0009s x1.00]	(2.5730s x1.00 from start)
  (leave) Aurora IOP protocol initialization and registration	[0.0021s x1.00]	(2.5732s x1.00 from start)
  (enter) Check semantic validity of IOP transcript	[             ]	(2.5732s x1.00 from start)
  (leave) Check semantic validity of IOP transcript	[0.0000s x1.14]	(2.5732s x1.00 from start)
  (enter) Construct R1CS verifier state      	[             ]	(2.5732s x1.00 from start)
    (enter) multi_lincheck compute alpha powers	[             ]	(2.5732s x1.00 from start)
    (leave) multi_lincheck compute alpha powers	[0.0002s x1.00]	(2.5734s x1.00 from start)
    (enter) multi_lincheck compute p_alpha_prime	[             ]	(2.5734s x1.00 from start)
    (leave) multi_lincheck compute p_alpha_prime	[0.0001s x1.00]	(2.5735s x1.00 from start)
    (enter) multi_lincheck compute p_alpha_ABC 	[             ]	(2.5735s x1.00 from start)
    (leave) multi_lincheck compute p_alpha_ABC 	[0.0024s x1.00]	(2.5759s x1.00 from start)
    (enter) multi_lincheck IFFT p_alphas       	[             ]	(2.5760s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(2.5760s x1.00 from start)
        * Vector size: 8192
        * Coset size: 8192
      (leave) Call to multiplicative_IFFT_wrapper	[0.0042s x1.00]	(2.5801s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(2.5802s x1.00 from start)
        * Vector size: 8192
        * Coset size: 8192
      (leave) Call to multiplicative_IFFT_wrapper	[0.0042s x1.00]	(2.5843s x1.00 from start)
    (leave) multi_lincheck IFFT p_alphas       	[0.0084s x1.00]	(2.5843s x1.00 from start)
  (leave) Construct R1CS verifier state      	[0.0112s x1.00]	(2.5844s x1.00 from start)
  (enter) Check LDT verifier predicate       	[             ]	(2.5844s x1.00 from start)
    * Number of FRI interactions: 1
    * Number of FRI query sets per interaction: 29
    * Total number of FRI queries over all query sets (incl. repeated queries): 754
  (leave) Check LDT verifier predicate       	[0.0317s x1.00]	(2.6160s x1.00 from start)
  * IOP transcript valid: true
  * Full protocol decision predicate satisfied: true
(leave) Aurora SNARK verifier              	[0.0451s x1.00]	(2.6161s x1.00 from start)


* Verifier satisfied: true

================================================================================

(enter) Check satisfiability of R1CS example	[             ]	(2.8307s x1.00 from start)
(leave) Check satisfiability of R1CS example	[0.0017s x1.00]	(2.8324s x1.00 from start)

* R1CS number of constraints: 16384
* R1CS number of variables: 16383
* R1CS number of variables for primary input: 15
* R1CS number of variables for auxiliary input: 16368
* R1CS size of constraint system (bytes): 1271808
* R1CS size of primary input (bytes): 360
* R1CS size of auxiliary input (bytes): 392832

(enter) Aurora SNARK prover                	[             ]	(2.8325s x1.00 from start)
  
Aurora SNARK parameters
  * security parameter (bits) = 128
  * RS extra dimensions = 5
  * LDT reducer soundness type = heuristic
  * FRI soundness type = heuristic
  * zero-knowledge = false
  * domain type = multiplicative coset

Aurora IOP parameters
  * target security parameter = 128
  * achieved security parameter = 112.0
  * RS extra dimensions = 5
  * codeword domain dim = 19
  * constraint domain dim = 14
  * variable domain dim = 14
  * query bound = 0
  * make zk = false
  * domain type = multiplicative coset

Multi lincheck parameters
  * target interactive soundness error (bits) = 131
  * achieved interactive soundness error (bits) = 166.0
  * interactive repetitions = 1
  * constraint domain dim = 14
  * make zk = false
  * domain type = multiplicative coset

LDT instance reducer parameters
  * soundness type = heuristic
  * target interactive soundness error (bits) = 131
  * achieved interactive soundness error (bits) = 161.0
  * codeword domain dim = 19
  * max tested degree bound = 16384
  * max constraint degree bound = 32767
  * absolute proximity parameter = 491520
  * fractional proximity parameter = 0.937500
  * num output LDT instances = 1

FRI parameters
  * soundness type = heuristic
  * target interactive soundness error (bits) = 131
  * achieved interactive soundness error (bits) = 180.0
  * target query soundness error (bits) = 112
  * achieved query soundness error (bits) = 112.0
  * codeword domain dim = 19
  * effective proximity parameter = 0.937500
  * number of interactive repetitions = 1
  * number of query repetitions = 28
  * localization parameter array = { 1 2 2 2 2 2 2 }
  * number of reductions = 7

BCS parameters
  * digest_len (bytes) = 32
  * digest_len (bits) = 256
  * hash_type = blake2b
  (enter) Submit witness oracles             	[             ]	(2.8346s x1.00 from start)
    (enter) Compute randomized f_w             	[             ]	(2.8346s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(2.8346s x1.00 from start)
        * Vector size: 16
        * Coset size: 16
      (leave) Call to multiplicative_IFFT_wrapper	[0.0000s x1.05]	(2.8346s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(2.8346s x1.00 from start)
        * Vector size: 16
        * Subgroup size: 16384
      (leave) Call to multiplicative_FFT_wrapper 	[0.0019s x1.00]	(2.8365s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(2.8369s x1.00 from start)
        * Vector size: 16384
        * Coset size: 16384
      (leave) Call to multiplicative_IFFT_wrapper	[0.0090s x1.00]	(2.8459s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(2.8471s x1.00 from start)
        * Vector size: 16368
        * Subgroup size: 524288
      (leave) Call to multiplicative_FFT_wrapper 	[0.1859s x1.00]	(3.0330s x1.00 from start)
    (leave) Compute randomized f_w             	[0.1984s x1.00]	(3.0331s x1.00 from start)
    (enter) Compute A/B/Cz                     	[             ]	(3.0331s x1.00 from start)
    (leave) Compute A/B/Cz                     	[0.0017s x1.00]	(3.0348s x1.00 from start)
    (enter) Compute f_{A/B/Cz} over codeword domain	[             ]	(3.0348s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(3.0349s x1.00 from start)
        * Vector size: 16384
        * Coset size: 16384
      (leave) Call to multiplicative_IFFT_wrapper	[0.0088s x1.00]	(3.0437s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(3.0438s x1.00 from start)
        * Vector size: 16384
        * Coset size: 16384
      (leave) Call to multiplicative_IFFT_wrapper	[0.0088s x1.00]	(3.0526s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(3.0527s x1.00 from start)
        * Vector size: 16384
        * Coset size: 16384
      (leave) Call to multiplicative_IFFT_wrapper	[0.0088s x1.00]	(3.0615s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(3.0616s x1.00 from start)
        * Vector size: 16384
        * Subgroup size: 524288
      (leave) Call to multiplicative_FFT_wrapper 	[0.1721s x1.00]	(3.2337s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(3.2338s x1.00 from start)
        * Vector size: 16384
        * Subgroup size: 524288
      (leave) Call to multiplicative_FFT_wrapper 	[0.1733s x1.00]	(3.4071s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(3.4072s x1.00 from start)
        * Vector size: 16384
        * Subgroup size: 524288
      (leave) Call to multiplicative_FFT_wrapper 	[0.1733s x1.00]	(3.5805s x1.00 from start)
    (leave) Compute f_{A/B/Cz} over codeword domain	[0.5457s x1.00]	(3.5806s x1.00 from start)
    (enter) Call IOP oracle submission routines	[             ]	(3.5806s x1.00 from start)
    (leave) Call IOP oracle submission routines	[0.0000s x1.14]	(3.5806s x1.00 from start)
  (leave) Submit witness oracles             	[0.7460s x1.00]	(3.5806s x1.00 from start)
  (enter) LDT Reducer: Submit masking polynomial	[             ]	(3.5806s x1.00 from start)
  (leave) LDT Reducer: Submit masking polynomial	[0.0000s x1.27]	(3.5806s x1.00 from start)
  (enter) Finish prover round                	[             ]	(3.5806s x1.00 from start)
    (enter) Construct Merkle tree              	[             ]	(3.5806s x1.00 from start)
    (leave) Construct Merkle tree              	[0.1930s x1.00]	(3.7735s x1.00 from start)
  (leave) Finish prover round                	[0.1930s x1.00]	(3.7736s x1.00 from start)
  (enter) pow                                	[             ]	(3.7736s x1.00 from start)
  (leave) pow                                	[0.0000s x1.22]	(3.7736s x1.00 from start)
  (enter) multi_lincheck: Calculate and submit proof	[             ]	(3.7736s x1.00 from start)
    (enter) multi_lincheck compute alpha powers	[             ]	(3.7736s x1.00 from start)
    (leave) multi_lincheck compute alpha powers	[0.0005s x1.00]	(3.7741s x1.00 from start)
    (enter) multi_lincheck compute p_alpha_prime	[             ]	(3.7741s x1.00 from start)
    (leave) multi_lincheck compute p_alpha_prime	[0.0003s x1.00]	(3.7743s x1.00 from start)
    (enter) multi_lincheck compute p_alpha_ABC 	[             ]	(3.7743s x1.00 from start)
    (leave) multi_lincheck compute p_alpha_ABC 	[0.0051s x1.00]	(3.7794s x1.00 from start)
    (enter) multi_lincheck IFFT p_alphas       	[             ]	(3.7794s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(3.7796s x1.00 from start)
        * Vector size: 16384
        * Coset size: 16384
      (leave) Call to multiplicative_IFFT_wrapper	[0.0090s x1.00]	(3.7886s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(3.7888s x1.00 from start)
        * Vector size: 16384
        * Coset size: 16384
      (leave) Call to multiplicative_IFFT_wrapper	[0.0089s x1.00]	(3.7977s x1.00 from start)
    (leave) multi_lincheck IFFT p_alphas       	[0.0184s x1.00]	(3.7978s x1.00 from start)
    (enter) fz evaluated contents              	[             ]	(3.7979s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(3.8043s x1.00 from start)
        * Vector size: 16
        * Coset size: 16
      (leave) Call to multiplicative_IFFT_wrapper	[0.0000s x1.00]	(3.8043s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(3.8043s x1.00 from start)
        * Vector size: 16
        * Subgroup size: 524288
      (leave) Call to multiplicative_FFT_wrapper 	[0.0517s x1.00]	(3.8560s x1.00 from start)
    (leave) fz evaluated contents              	[0.0800s x1.00]	(3.8778s x1.00 from start)
    (enter) multi_lincheck evaluated contents  	[             ]	(3.8787s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(3.8788s x1.00 from start)
        * Vector size: 16384
        * Subgroup size: 524288
      (leave) Call to multiplicative_FFT_wrapper 	[0.1737s x1.00]	(4.0525s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(4.0526s x1.00 from start)
        * Vector size: 16384
        * Subgroup size: 524288
      (leave) Call to multiplicative_FFT_wrapper 	[0.1730s x1.00]	(4.2256s x1.00 from start)
    (leave) multi_lincheck evaluated contents  	[0.4378s x1.00]	(4.3165s x1.00 from start)
    (enter) Call to multiplicative_IFFT_wrapper	[             ]	(4.3355s x1.00 from start)
      * Vector size: 32768
      * Coset size: 32768
    (leave) Call to multiplicative_IFFT_wrapper	[0.0202s x1.00]	(4.3557s x1.00 from start)
    (enter) Call to multiplicative_FFT_wrapper 	[             ]	(4.3572s x1.00 from start)
      * Vector size: 16383
      * Subgroup size: 524288
    (leave) Call to multiplicative_FFT_wrapper 	[0.1694s x1.00]	(4.5266s x1.00 from start)
  (leave) multi_lincheck: Calculate and submit proof	[0.7531s x1.00]	(4.5266s x1.00 from start)
  (enter) Finish prover round                	[             ]	(4.5267s x1.00 from start)
    (enter) Construct Merkle tree              	[             ]	(4.5267s x1.00 from start)
    (leave) Construct Merkle tree              	[0.1538s x1.00]	(4.6804s x1.00 from start)
  (leave) Finish prover round                	[0.1538s x1.00]	(4.6805s x1.00 from start)
  (enter) pow                                	[             ]	(4.6805s x1.00 from start)
  (leave) pow                                	[0.0000s x1.23]	(4.6805s x1.00 from start)
  (enter) LDT Reducer: Calculate and submit proof	[             ]	(4.6805s x1.00 from start)
    (enter) Sumcheck: g evaluated contents     	[             ]	(4.6805s x1.00 from start)
    (leave) Sumcheck: g evaluated contents     	[0.0528s x1.00]	(4.7333s x1.00 from start)
    (enter) rowcheck evaluated contents        	[             ]	(4.7333s x1.00 from start)
    (leave) rowcheck evaluated contents        	[0.0354s x1.00]	(4.7687s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(4.9585s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0846s x1.00]	(5.0431s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(5.0440s x1.00 from start)
      (enter) Finish prover round                	[             ]	(5.0440s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(5.0440s x1.00 from start)
        (leave) Construct Merkle tree              	[0.0373s x1.00]	(5.0813s x1.00 from start)
      (leave) Finish prover round                	[0.0373s x1.00]	(5.0813s x1.00 from start)
      (enter) pow                                	[             ]	(5.0813s x1.00 from start)
      (leave) pow                                	[0.0000s x1.18]	(5.0813s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0374s x1.00]	(5.0813s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(5.0813s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0349s x1.00]	(5.1162s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(5.1164s x1.00 from start)
      (enter) Finish prover round                	[             ]	(5.1164s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(5.1164s x1.00 from start)
        (leave) Construct Merkle tree              	[0.0093s x1.00]	(5.1257s x1.00 from start)
      (leave) Finish prover round                	[0.0093s x1.00]	(5.1257s x1.00 from start)
      (enter) pow                                	[             ]	(5.1257s x1.00 from start)
      (leave) pow                                	[0.0000s x1.19]	(5.1257s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0093s x1.00]	(5.1257s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(5.1257s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0086s x1.00]	(5.1344s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(5.1344s x1.00 from start)
      (enter) Finish prover round                	[             ]	(5.1344s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(5.1344s x1.00 from start)
        (leave) Construct Merkle tree              	[0.0023s x1.00]	(5.1367s x1.00 from start)
      (leave) Finish prover round                	[0.0023s x1.00]	(5.1367s x1.00 from start)
      (enter) pow                                	[             ]	(5.1368s x1.00 from start)
      (leave) pow                                	[0.0000s x1.24]	(5.1368s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0023s x1.00]	(5.1368s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(5.1368s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0021s x1.00]	(5.1389s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(5.1389s x1.00 from start)
      (enter) Finish prover round                	[             ]	(5.1389s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(5.1389s x1.00 from start)
        (leave) Construct Merkle tree              	[0.0006s x1.00]	(5.1395s x1.00 from start)
      (leave) Finish prover round                	[0.0006s x1.00]	(5.1395s x1.00 from start)
      (enter) pow                                	[             ]	(5.1395s x1.00 from start)
      (leave) pow                                	[0.0000s x1.08]	(5.1395s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0006s x1.00]	(5.1395s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(5.1395s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0005s x1.00]	(5.1400s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(5.1401s x1.00 from start)
      (enter) Finish prover round                	[             ]	(5.1401s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(5.1401s x1.00 from start)
        (leave) Construct Merkle tree              	[0.0002s x1.00]	(5.1402s x1.00 from start)
      (leave) Finish prover round                	[0.0002s x1.00]	(5.1402s x1.00 from start)
      (enter) pow                                	[             ]	(5.1402s x1.00 from start)
      (leave) pow                                	[0.0000s x1.10]	(5.1402s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0002s x1.00]	(5.1402s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(5.1402s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0001s x1.00]	(5.1404s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(5.1404s x1.00 from start)
      (enter) Finish prover round                	[             ]	(5.1404s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(5.1404s x1.00 from start)
        (leave) Construct Merkle tree              	[0.0000s x1.00]	(5.1404s x1.00 from start)
      (leave) Finish prover round                	[0.0001s x1.00]	(5.1404s x1.00 from start)
      (enter) pow                                	[             ]	(5.1404s x1.00 from start)
      (leave) pow                                	[0.0000s x1.05]	(5.1404s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0001s x1.00]	(5.1404s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(5.1404s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0000s x1.00]	(5.1405s x1.00 from start)
    (enter) Call to multiplicative_IFFT_wrapper	[             ]	(5.1405s x1.00 from start)
      * Vector size: 64
      * Coset size: 64
    (leave) Call to multiplicative_IFFT_wrapper	[0.0000s x1.02]	(5.1405s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(5.1405s x1.00 from start)
      (enter) Finish prover round                	[             ]	(5.1405s x1.00 from start)
      (leave) Finish prover round                	[0.0000s x1.01]	(5.1406s x1.00 from start)
      (enter) pow                                	[             ]	(5.1406s x1.00 from start)
      (leave) pow                                	[0.0388s x1.00]	(5.1794s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0388s x1.00]	(5.1794s x1.00 from start)
  (leave) LDT Reducer: Calculate and submit proof	[0.4998s x1.00]	(5.1802s x1.00 from start)
  (enter) Obtain transcript                  	[             ]	(5.1803s x1.00 from start)
  (leave) Obtain transcript                  	[0.0588s x1.00]	(5.2391s x1.00 from start)
  * Total size of proof oracles (bytes): 71301120
  * Total size of Merkle tree (bytes): 39145216
  * Total size of prover state (bytes): 110446336
(leave) Aurora SNARK prover                	[2.4066s x1.00]	(5.2391s x1.00 from start)

BCS parameters
* digest_len (bytes) = 32
* digest_len (bits) = 256
* hash_type = blake2b
(enter) verifier_seal_interaction_registrations	[             ]	(5.2656s x1.00 from start)
(leave) verifier_seal_interaction_registrations	[0.0010s x1.00]	(5.2666s x1.00 from start)

* Argument size in bytes (IOP): 21206
* Argument size in bytes (BCS): 51104
* Argument size in bytes (total): 72310

If we were to remove pruning of authentication paths in BCS,
the argument would have the following sizes:
* Argument size in bytes (BCS, no pruning): 90016
* Argument size in bytes (total, no pruning): 111222

total prover messages size: 46
total two to one hashes: 1796
total leaves hashed: 920
total hashes: 2716

Transcript info by round
Per round IOP sizes don't include prover messages

round 0
MT_depth 18
IOP size: 5152 bytes
BCS size: 10944 bytes
number of two to one hashes: 368
number of leaves hashed: 224
oracles in round: fw, fAz, fBz, fCz, 

round 1
MT_depth 18
IOP size: 1288 bytes
BCS size: 10944 bytes
number of two to one hashes: 368
number of leaves hashed: 56
oracles in round: sumcheck h, 

round 2
MT_depth 16
IOP size: 2576 bytes
BCS size: 9056 bytes
number of two to one hashes: 309
number of leaves hashed: 112
oracles in round: TODO: Fill in this name (batching.tcc), 

round 3
MT_depth 14
IOP size: 2576 bytes
BCS size: 7264 bytes
number of two to one hashes: 253
number of leaves hashed: 112
oracles in round: TODO: Fill in this name (batching.tcc), 

round 4
MT_depth 12
IOP size: 2576 bytes
BCS size: 5728 bytes
number of two to one hashes: 205
number of leaves hashed: 112
oracles in round: TODO: Fill in this name (batching.tcc), 

round 5
MT_depth 10
IOP size: 2576 bytes
BCS size: 3968 bytes
number of two to one hashes: 150
number of leaves hashed: 112
oracles in round: TODO: Fill in this name (batching.tcc), 

round 6
MT_depth 8
IOP size: 2392 bytes
BCS size: 2272 bytes
number of two to one hashes: 95
number of leaves hashed: 104
oracles in round: TODO: Fill in this name (batching.tcc), 

round 7
MT_depth 6
IOP size: 2024 bytes
BCS size: 896 bytes
number of two to one hashes: 48
number of leaves hashed: 88
oracles in round: TODO: Fill in this name (batching.tcc), 


(enter) Aurora SNARK verifier              	[             ]	(5.2689s x1.00 from start)
  
Aurora SNARK parameters
  * security parameter (bits) = 128
  * RS extra dimensions = 5
  * LDT reducer soundness type = heuristic
  * FRI soundness type = heuristic
  * zero-knowledge = false
  * domain type = multiplicative coset

Aurora IOP parameters
  * target security parameter = 128
  * achieved security parameter = 112.0
  * RS extra dimensions = 5
  * codeword domain dim = 19
  * constraint domain dim = 14
  * variable domain dim = 14
  * query bound = 0
  * make zk = false
  * domain type = multiplicative coset

Multi lincheck parameters
  * target interactive soundness error (bits) = 131
  * achieved interactive soundness error (bits) = 166.0
  * interactive repetitions = 1
  * constraint domain dim = 14
  * make zk = false
  * domain type = multiplicative coset

LDT instance reducer parameters
  * soundness type = heuristic
  * target interactive soundness error (bits) = 131
  * achieved interactive soundness error (bits) = 161.0
  * codeword domain dim = 19
  * max tested degree bound = 16384
  * max constraint degree bound = 32767
  * absolute proximity parameter = 491520
  * fractional proximity parameter = 0.937500
  * num output LDT instances = 1

FRI parameters
  * soundness type = heuristic
  * target interactive soundness error (bits) = 131
  * achieved interactive soundness error (bits) = 180.0
  * target query soundness error (bits) = 112
  * achieved query soundness error (bits) = 112.0
  * codeword domain dim = 19
  * effective proximity parameter = 0.937500
  * number of interactive repetitions = 1
  * number of query repetitions = 28
  * localization parameter array = { 1 2 2 2 2 2 2 }
  * number of reductions = 7

BCS parameters
  * digest_len (bytes) = 32
  * digest_len (bits) = 256
  * hash_type = blake2b
  (enter) Aurora IOP protocol initialization and registration	[             ]	(5.2690s x1.00 from start)
    (enter) verifier_seal_interaction_registrations	[             ]	(5.2708s x1.00 from start)
    (leave) verifier_seal_interaction_registrations	[0.0010s x1.00]	(5.2718s x1.00 from start)
  (leave) Aurora IOP protocol initialization and registration	[0.0029s x1.00]	(5.2719s x1.00 from start)
  (enter) Check semantic validity of IOP transcript	[             ]	(5.2719s x1.00 from start)
  (leave) Check semantic validity of IOP transcript	[0.0000s x1.16]	(5.2719s x1.00 from start)
  (enter) Construct R1CS verifier state      	[             ]	(5.2719s x1.00 from start)
    (enter) multi_lincheck compute alpha powers	[             ]	(5.2719s x1.00 from start)
    (leave) multi_lincheck compute alpha powers	[0.0004s x1.00]	(5.2723s x1.00 from start)
    (enter) multi_lincheck compute p_alpha_prime	[             ]	(5.2723s x1.00 from start)
    (leave) multi_lincheck compute p_alpha_prime	[0.0003s x1.00]	(5.2726s x1.00 from start)
    (enter) multi_lincheck compute p_alpha_ABC 	[             ]	(5.2726s x1.00 from start)
    (leave) multi_lincheck compute p_alpha_ABC 	[0.0048s x1.00]	(5.2774s x1.00 from start)
    (enter) multi_lincheck IFFT p_alphas       	[             ]	(5.2774s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(5.2774s x1.00 from start)
        * Vector size: 16384
        * Coset size: 16384
      (leave) Call to multiplicative_IFFT_wrapper	[0.0089s x1.00]	(5.2863s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(5.2864s x1.00 from start)
        * Vector size: 16384
        * Coset size: 16384
      (leave) Call to multiplicative_IFFT_wrapper	[0.0088s x1.00]	(5.2952s x1.00 from start)
    (leave) multi_lincheck IFFT p_alphas       	[0.0179s x1.00]	(5.2953s x1.00 from start)
  (leave) Construct R1CS verifier state      	[0.0234s x1.00]	(5.2953s x1.00 from start)
  (enter) Check LDT verifier predicate       	[             ]	(5.2953s x1.00 from start)
    * Number of FRI interactions: 1
    * Number of FRI query sets per interaction: 28
    * Total number of FRI queries over all query sets (incl. repeated queries): 728
  (leave) Check LDT verifier predicate       	[0.0591s x1.00]	(5.3544s x1.00 from start)
  * IOP transcript valid: true
  * Full protocol decision predicate satisfied: true
(leave) Aurora SNARK verifier              	[0.0855s x1.00]	(5.3544s x1.00 from start)


* Verifier satisfied: true

================================================================================

(enter) Check satisfiability of R1CS example	[             ]	(5.7783s x1.00 from start)
(leave) Check satisfiability of R1CS example	[0.0035s x1.00]	(5.7819s x1.00 from start)

* R1CS number of constraints: 32768
* R1CS number of variables: 32767
* R1CS number of variables for primary input: 15
* R1CS number of variables for auxiliary input: 32752
* R1CS size of constraint system (bytes): 2555904
* R1CS size of primary input (bytes): 360
* R1CS size of auxiliary input (bytes): 786048

(enter) Aurora SNARK prover                	[             ]	(5.7820s x1.00 from start)
  
Aurora SNARK parameters
  * security parameter (bits) = 128
  * RS extra dimensions = 5
  * LDT reducer soundness type = heuristic
  * FRI soundness type = heuristic
  * zero-knowledge = false
  * domain type = multiplicative coset

Aurora IOP parameters
  * target security parameter = 128
  * achieved security parameter = 112.0
  * RS extra dimensions = 5
  * codeword domain dim = 20
  * constraint domain dim = 15
  * variable domain dim = 15
  * query bound = 0
  * make zk = false
  * domain type = multiplicative coset

Multi lincheck parameters
  * target interactive soundness error (bits) = 131
  * achieved interactive soundness error (bits) = 165.0
  * interactive repetitions = 1
  * constraint domain dim = 15
  * make zk = false
  * domain type = multiplicative coset

LDT instance reducer parameters
  * soundness type = heuristic
  * target interactive soundness error (bits) = 131
  * achieved interactive soundness error (bits) = 160.0
  * codeword domain dim = 20
  * max tested degree bound = 32768
  * max constraint degree bound = 65535
  * absolute proximity parameter = 983040
  * fractional proximity parameter = 0.937500
  * num output LDT instances = 1

FRI parameters
  * soundness type = heuristic
  * target interactive soundness error (bits) = 131
  * achieved interactive soundness error (bits) = 180.0
  * target query soundness error (bits) = 111
  * achieved query soundness error (bits) = 112.0
  * codeword domain dim = 20
  * effective proximity parameter = 0.937500
  * number of interactive repetitions = 1
  * number of query repetitions = 28
  * localization parameter array = { 1 2 2 2 2 2 2 2 }
  * number of reductions = 8

BCS parameters
  * digest_len (bytes) = 32
  * digest_len (bits) = 256
  * hash_type = blake2b
  (enter) Submit witness oracles             	[             ]	(5.7857s x1.00 from start)
    (enter) Compute randomized f_w             	[             ]	(5.7857s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(5.7857s x1.00 from start)
        * Vector size: 16
        * Coset size: 16
      (leave) Call to multiplicative_IFFT_wrapper	[0.0000s x1.07]	(5.7858s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(5.7858s x1.00 from start)
        * Vector size: 16
        * Subgroup size: 32768
      (leave) Call to multiplicative_FFT_wrapper 	[0.0040s x1.00]	(5.7897s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(5.7907s x1.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0190s x1.00]	(5.8097s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(5.8119s x1.00 from start)
        * Vector size: 32752
        * Subgroup size: 1048576
      (leave) Call to multiplicative_FFT_wrapper 	[0.3934s x1.00]	(6.2053s x1.00 from start)
    (leave) Compute randomized f_w             	[0.4196s x1.00]	(6.2053s x1.00 from start)
    (enter) Compute A/B/Cz                     	[             ]	(6.2054s x1.00 from start)
    (leave) Compute A/B/Cz                     	[0.0033s x1.00]	(6.2087s x1.00 from start)
    (enter) Compute f_{A/B/Cz} over codeword domain	[             ]	(6.2087s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(6.2088s x1.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0190s x1.00]	(6.2278s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(6.2280s x1.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0189s x1.00]	(6.2470s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(6.2472s x1.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0189s x1.00]	(6.2661s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(6.2663s x1.00 from start)
        * Vector size: 32768
        * Subgroup size: 1048576
      (leave) Call to multiplicative_FFT_wrapper 	[0.3696s x1.00]	(6.6359s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(6.6361s x1.00 from start)
        * Vector size: 32768
        * Subgroup size: 1048576
      (leave) Call to multiplicative_FFT_wrapper 	[0.3718s x1.00]	(7.0079s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(7.0081s x1.00 from start)
        * Vector size: 32768
        * Subgroup size: 1048576
      (leave) Call to multiplicative_FFT_wrapper 	[0.3731s x1.00]	(7.3812s x1.00 from start)
    (leave) Compute f_{A/B/Cz} over codeword domain	[1.1725s x1.00]	(7.3812s x1.00 from start)
    (enter) Call IOP oracle submission routines	[             ]	(7.3812s x1.00 from start)
    (leave) Call IOP oracle submission routines	[0.0000s x1.13]	(7.3812s x1.00 from start)
  (leave) Submit witness oracles             	[1.5955s x1.00]	(7.3812s x1.00 from start)
  (enter) LDT Reducer: Submit masking polynomial	[             ]	(7.3813s x1.00 from start)
  (leave) LDT Reducer: Submit masking polynomial	[0.0000s x1.25]	(7.3813s x1.00 from start)
  (enter) Finish prover round                	[             ]	(7.3813s x1.00 from start)
    (enter) Construct Merkle tree              	[             ]	(7.3813s x1.00 from start)
    (leave) Construct Merkle tree              	[0.3838s x1.00]	(7.7651s x1.00 from start)
  (leave) Finish prover round                	[0.3839s x1.00]	(7.7651s x1.00 from start)
  (enter) pow                                	[             ]	(7.7651s x1.00 from start)
  (leave) pow                                	[0.0000s x1.14]	(7.7651s x1.00 from start)
  (enter) multi_lincheck: Calculate and submit proof	[             ]	(7.7652s x1.00 from start)
    (enter) multi_lincheck compute alpha powers	[             ]	(7.7652s x1.00 from start)
    (leave) multi_lincheck compute alpha powers	[0.0009s x1.00]	(7.7660s x1.00 from start)
    (enter) multi_lincheck compute p_alpha_prime	[             ]	(7.7660s x1.00 from start)
    (leave) multi_lincheck compute p_alpha_prime	[0.0006s x1.00]	(7.7666s x1.00 from start)
    (enter) multi_lincheck compute p_alpha_ABC 	[             ]	(7.7666s x1.00 from start)
    (leave) multi_lincheck compute p_alpha_ABC 	[0.0100s x1.00]	(7.7766s x1.00 from start)
    (enter) multi_lincheck IFFT p_alphas       	[             ]	(7.7766s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(7.7769s x1.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0191s x1.00]	(7.7960s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(7.7964s x1.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0191s x1.00]	(7.8155s x1.00 from start)
    (leave) multi_lincheck IFFT p_alphas       	[0.0393s x1.00]	(7.8159s x1.00 from start)
    (enter) fz evaluated contents              	[             ]	(7.8160s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(7.8289s x1.00 from start)
        * Vector size: 16
        * Coset size: 16
      (leave) Call to multiplicative_IFFT_wrapper	[0.0000s x0.99]	(7.8290s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(7.8290s x1.00 from start)
        * Vector size: 16
        * Subgroup size: 1048576
      (leave) Call to multiplicative_FFT_wrapper 	[0.1086s x1.00]	(7.9376s x1.00 from start)
    (leave) fz evaluated contents              	[0.1659s x1.00]	(7.9819s x1.00 from start)
    (enter) multi_lincheck evaluated contents  	[             ]	(7.9833s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(7.9834s x1.00 from start)
        * Vector size: 32768
        * Subgroup size: 1048576
      (leave) Call to multiplicative_FFT_wrapper 	[0.3752s x1.00]	(8.3586s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(8.3588s x1.00 from start)
        * Vector size: 32768
        * Subgroup size: 1048576
      (leave) Call to multiplicative_FFT_wrapper 	[0.3717s x1.00]	(8.7304s x1.00 from start)
    (leave) multi_lincheck evaluated contents  	[0.9285s x1.00]	(8.9118s x1.00 from start)
    (enter) Call to multiplicative_IFFT_wrapper	[             ]	(8.9514s x1.00 from start)
      * Vector size: 65536
      * Coset size: 65536
    (leave) Call to multiplicative_IFFT_wrapper	[0.0428s x1.00]	(8.9942s x1.00 from start)
    (enter) Call to multiplicative_FFT_wrapper 	[             ]	(8.9972s x1.00 from start)
      * Vector size: 32767
      * Subgroup size: 1048576
    (leave) Call to multiplicative_FFT_wrapper 	[0.3669s x1.00]	(9.3641s x1.00 from start)
  (leave) multi_lincheck: Calculate and submit proof	[1.5990s x1.00]	(9.3641s x1.00 from start)
  (enter) Finish prover round                	[             ]	(9.3641s x1.00 from start)
    (enter) Construct Merkle tree              	[             ]	(9.3641s x1.00 from start)
    (leave) Construct Merkle tree              	[0.3099s x1.00]	(9.6740s x1.00 from start)
  (leave) Finish prover round                	[0.3100s x1.00]	(9.6741s x1.00 from start)
  (enter) pow                                	[             ]	(9.6741s x1.00 from start)
  (leave) pow                                	[0.0000s x1.13]	(9.6741s x1.00 from start)
  (enter) LDT Reducer: Calculate and submit proof	[             ]	(9.6741s x1.00 from start)
    (enter) Sumcheck: g evaluated contents     	[             ]	(9.6741s x1.00 from start)
    (leave) Sumcheck: g evaluated contents     	[0.1051s x1.00]	(9.7792s x1.00 from start)
    (enter) rowcheck evaluated contents        	[             ]	(9.7793s x1.00 from start)
    (leave) rowcheck evaluated contents        	[0.0707s x1.00]	(9.8500s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(10.2302s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.1705s x1.00]	(10.4007s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(10.4066s x1.00 from start)
      (enter) Finish prover round                	[             ]	(10.4066s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(10.4066s x1.00 from start)
        (leave) Construct Merkle tree              	[0.0747s x1.00]	(10.4813s x1.00 from start)
      (leave) Finish prover round                	[0.0747s x1.00]	(10.4814s x1.00 from start)
      (enter) pow                                	[             ]	(10.4814s x1.00 from start)
      (leave) pow                                	[0.0000s x1.32]	(10.4814s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0748s x1.00]	(10.4814s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(10.4814s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0742s x1.00]	(10.5556s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(10.5560s x1.00 from start)
      (enter) Finish prover round                	[             ]	(10.5560s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(10.5560s x1.00 from start)
        (leave) Construct Merkle tree              	[0.0193s x1.00]	(10.5753s x1.00 from start)
      (leave) Finish prover round                	[0.0193s x1.00]	(10.5754s x1.00 from start)
      (enter) pow                                	[             ]	(10.5754s x1.00 from start)
      (leave) pow                                	[0.0000s x1.17]	(10.5754s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0194s x1.00]	(10.5754s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(10.5754s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0177s x1.00]	(10.5931s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(10.5932s x1.00 from start)
      (enter) Finish prover round                	[             ]	(10.5932s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(10.5932s x1.00 from start)
        (leave) Construct Merkle tree              	[0.0050s x1.00]	(10.5982s x1.00 from start)
      (leave) Finish prover round                	[0.0050s x1.00]	(10.5982s x1.00 from start)
      (enter) pow                                	[             ]	(10.5982s x1.00 from start)
      (leave) pow                                	[0.0000s x1.22]	(10.5982s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0050s x1.00]	(10.5982s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(10.5982s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0044s x1.00]	(10.6026s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(10.6026s x1.00 from start)
      (enter) Finish prover round                	[             ]	(10.6026s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(10.6026s x1.00 from start)
        (leave) Construct Merkle tree              	[0.0012s x1.00]	(10.6038s x1.00 from start)
      (leave) Finish prover round                	[0.0012s x1.00]	(10.6038s x1.00 from start)
      (enter) pow                                	[             ]	(10.6038s x1.00 from start)
      (leave) pow                                	[0.0000s x1.09]	(10.6038s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0012s x1.00]	(10.6038s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(10.6038s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0011s x1.00]	(10.6049s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(10.6049s x1.00 from start)
      (enter) Finish prover round                	[             ]	(10.6049s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(10.6049s x1.00 from start)
        (leave) Construct Merkle tree              	[0.0003s x1.00]	(10.6052s x1.00 from start)
      (leave) Finish prover round                	[0.0003s x1.00]	(10.6052s x1.00 from start)
      (enter) pow                                	[             ]	(10.6052s x1.00 from start)
      (leave) pow                                	[0.0000s x1.09]	(10.6052s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0003s x1.00]	(10.6052s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(10.6052s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0003s x1.00]	(10.6055s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(10.6055s x1.00 from start)
      (enter) Finish prover round                	[             ]	(10.6055s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(10.6055s x1.00 from start)
        (leave) Construct Merkle tree              	[0.0001s x1.00]	(10.6056s x1.00 from start)
      (leave) Finish prover round                	[0.0001s x1.00]	(10.6056s x1.00 from start)
      (enter) pow                                	[             ]	(10.6056s x1.00 from start)
      (leave) pow                                	[0.0000s x1.03]	(10.6056s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0001s x1.00]	(10.6056s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(10.6056s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0001s x1.00]	(10.6057s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(10.6057s x1.00 from start)
      (enter) Finish prover round                	[             ]	(10.6057s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(10.6057s x1.00 from start)
        (leave) Construct Merkle tree              	[0.0000s x1.00]	(10.6057s x1.00 from start)
      (leave) Finish prover round                	[0.0000s x1.00]	(10.6057s x1.00 from start)
      (enter) pow                                	[             ]	(10.6057s x1.00 from start)
      (leave) pow                                	[0.0000s x1.07]	(10.6057s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0000s x1.00]	(10.6057s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(10.6057s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0000s x1.00]	(10.6058s x1.00 from start)
    (enter) Call to multiplicative_IFFT_wrapper	[             ]	(10.6058s x1.00 from start)
      * Vector size: 32
      * Coset size: 32
    (leave) Call to multiplicative_IFFT_wrapper	[0.0000s x1.03]	(10.6058s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(10.6058s x1.00 from start)
      (enter) Finish prover round                	[             ]	(10.6058s x1.00 from start)
      (leave) Finish prover round                	[0.0000s x1.01]	(10.6058s x1.00 from start)
      (enter) pow                                	[             ]	(10.6058s x1.00 from start)
      (leave) pow                                	[0.0344s x1.00]	(10.6402s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0344s x1.00]	(10.6402s x1.00 from start)
  (leave) LDT Reducer: Calculate and submit proof	[0.9678s x1.00]	(10.6419s x1.00 from start)
  (enter) Obtain transcript                  	[             ]	(10.6419s x1.00 from start)
  (leave) Obtain transcript                  	[0.1164s x1.00]	(10.7583s x1.00 from start)
  * Total size of proof oracles (bytes): 142605312
  * Total size of Merkle tree (bytes): 78292704
  * Total size of prover state (bytes): 220898016
(leave) Aurora SNARK prover                	[4.9763s x1.00]	(10.7583s x1.00 from start)

BCS parameters
* digest_len (bytes) = 32
* digest_len (bits) = 256
* hash_type = blake2b
(enter) verifier_seal_interaction_registrations	[             ]	(10.8131s x1.00 from start)
(leave) verifier_seal_interaction_registrations	[0.0012s x1.00]	(10.8143s x1.00 from start)

* Argument size in bytes (IOP): 23207
* Argument size in bytes (BCS): 58944
* Argument size in bytes (total): 82151

If we were to remove pruning of authentication paths in BCS,
the argument would have the following sizes:
* Argument size in bytes (BCS, no pruning): 100736
* Argument size in bytes (total, no pruning): 123943

total prover messages size: 23
total two to one hashes: 2061
total leaves hashed: 1008
total hashes: 3069

Transcript info by round
Per round IOP sizes don't include prover messages

round 0
MT_depth 19
IOP size: 5152 bytes
BCS size: 11936 bytes
number of two to one hashes: 399
number of leaves hashed: 224
oracles in round: fw, fAz, fBz, fCz, 

round 1
MT_depth 19
IOP size: 1288 bytes
BCS size: 11936 bytes
number of two to one hashes: 399
number of leaves hashed: 56
oracles in round: sumcheck h, 

round 2
MT_depth 17
IOP size: 2576 bytes
BCS size: 10272 bytes
number of two to one hashes: 347
number of leaves hashed: 112
oracles in round: TODO: Fill in this name (batching.tcc), 

round 3
MT_depth 15
IOP size: 2576 bytes
BCS size: 8512 bytes
number of two to one hashes: 292
number of leaves hashed: 112
oracles in round: TODO: Fill in this name (batching.tcc), 

round 4
MT_depth 13
IOP size: 2576 bytes
BCS size: 6336 bytes
number of two to one hashes: 224
number of leaves hashed: 112
oracles in round: TODO: Fill in this name (batching.tcc), 

round 5
MT_depth 11
IOP size: 2576 bytes
BCS size: 4768 bytes
number of two to one hashes: 175
number of leaves hashed: 112
oracles in round: TODO: Fill in this name (batching.tcc), 

round 6
MT_depth 9
IOP size: 2484 bytes
BCS size: 3296 bytes
number of two to one hashes: 128
number of leaves hashed: 108
oracles in round: TODO: Fill in this name (batching.tcc), 

round 7
MT_depth 7
IOP size: 2208 bytes
BCS size: 1440 bytes
number of two to one hashes: 67
number of leaves hashed: 96
oracles in round: TODO: Fill in this name (batching.tcc), 

round 8
MT_depth 5
IOP size: 1748 bytes
BCS size: 416 bytes
number of two to one hashes: 30
number of leaves hashed: 76
oracles in round: TODO: Fill in this name (batching.tcc), 


(enter) Aurora SNARK verifier              	[             ]	(10.8184s x1.00 from start)
  
Aurora SNARK parameters
  * security parameter (bits) = 128
  * RS extra dimensions = 5
  * LDT reducer soundness type = heuristic
  * FRI soundness type = heuristic
  * zero-knowledge = false
  * domain type = multiplicative coset

Aurora IOP parameters
  * target security parameter = 128
  * achieved security parameter = 112.0
  * RS extra dimensions = 5
  * codeword domain dim = 20
  * constraint domain dim = 15
  * variable domain dim = 15
  * query bound = 0
  * make zk = false
  * domain type = multiplicative coset

Multi lincheck parameters
  * target interactive soundness error (bits) = 131
  * achieved interactive soundness error (bits) = 165.0
  * interactive repetitions = 1
  * constraint domain dim = 15
  * make zk = false
  * domain type = multiplicative coset

LDT instance reducer parameters
  * soundness type = heuristic
  * target interactive soundness error (bits) = 131
  * achieved interactive soundness error (bits) = 160.0
  * codeword domain dim = 20
  * max tested degree bound = 32768
  * max constraint degree bound = 65535
  * absolute proximity parameter = 983040
  * fractional proximity parameter = 0.937500
  * num output LDT instances = 1

FRI parameters
  * soundness type = heuristic
  * target interactive soundness error (bits) = 131
  * achieved interactive soundness error (bits) = 180.0
  * target query soundness error (bits) = 111
  * achieved query soundness error (bits) = 112.0
  * codeword domain dim = 20
  * effective proximity parameter = 0.937500
  * number of interactive repetitions = 1
  * number of query repetitions = 28
  * localization parameter array = { 1 2 2 2 2 2 2 2 }
  * number of reductions = 8

BCS parameters
  * digest_len (bytes) = 32
  * digest_len (bits) = 256
  * hash_type = blake2b
  (enter) Aurora IOP protocol initialization and registration	[             ]	(10.8186s x1.00 from start)
    (enter) verifier_seal_interaction_registrations	[             ]	(10.8219s x1.00 from start)
    (leave) verifier_seal_interaction_registrations	[0.0011s x1.00]	(10.8230s x1.00 from start)
  (leave) Aurora IOP protocol initialization and registration	[0.0046s x1.00]	(10.8231s x1.00 from start)
  (enter) Check semantic validity of IOP transcript	[             ]	(10.8232s x1.00 from start)
  (leave) Check semantic validity of IOP transcript	[0.0000s x1.10]	(10.8232s x1.00 from start)
  (enter) Construct R1CS verifier state      	[             ]	(10.8232s x1.00 from start)
    (enter) multi_lincheck compute alpha powers	[             ]	(10.8232s x1.00 from start)
    (leave) multi_lincheck compute alpha powers	[0.0008s x1.00]	(10.8239s x1.00 from start)
    (enter) multi_lincheck compute p_alpha_prime	[             ]	(10.8239s x1.00 from start)
    (leave) multi_lincheck compute p_alpha_prime	[0.0006s x1.02]	(10.8245s x1.00 from start)
    (enter) multi_lincheck compute p_alpha_ABC 	[             ]	(10.8245s x1.00 from start)
    (leave) multi_lincheck compute p_alpha_ABC 	[0.0100s x1.00]	(10.8345s x1.00 from start)
    (enter) multi_lincheck IFFT p_alphas       	[             ]	(10.8345s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(10.8347s x1.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0189s x1.00]	(10.8536s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(10.8539s x1.00 from start)
        * Vector size: 32768
        * Coset size: 32768
      (leave) Call to multiplicative_IFFT_wrapper	[0.0189s x1.00]	(10.8728s x1.00 from start)
    (leave) multi_lincheck IFFT p_alphas       	[0.0384s x1.00]	(10.8729s x1.00 from start)
  (leave) Construct R1CS verifier state      	[0.0498s x1.00]	(10.8729s x1.00 from start)
  (enter) Check LDT verifier predicate       	[             ]	(10.8729s x1.00 from start)
    * Number of FRI interactions: 1
    * Number of FRI query sets per interaction: 28
    * Total number of FRI queries over all query sets (incl. repeated queries): 840
  (leave) Check LDT verifier predicate       	[0.1166s x1.00]	(10.9896s x1.00 from start)
  * IOP transcript valid: true
  * Full protocol decision predicate satisfied: true
(leave) Aurora SNARK verifier              	[0.1712s x1.00]	(10.9896s x1.00 from start)


* Verifier satisfied: true

================================================================================

(enter) Check satisfiability of R1CS example	[             ]	(11.8373s x1.00 from start)
(leave) Check satisfiability of R1CS example	[0.0089s x1.00]	(11.8462s x1.00 from start)

* R1CS number of constraints: 65536
* R1CS number of variables: 65535
* R1CS number of variables for primary input: 15
* R1CS number of variables for auxiliary input: 65520
* R1CS size of constraint system (bytes): 5136384
* R1CS size of primary input (bytes): 360
* R1CS size of auxiliary input (bytes): 1572480

(enter) Aurora SNARK prover                	[             ]	(11.8466s x1.00 from start)
  
Aurora SNARK parameters
  * security parameter (bits) = 128
  * RS extra dimensions = 5
  * LDT reducer soundness type = heuristic
  * FRI soundness type = heuristic
  * zero-knowledge = false
  * domain type = multiplicative coset

Aurora IOP parameters
  * target security parameter = 128
  * achieved security parameter = 112.0
  * RS extra dimensions = 5
  * codeword domain dim = 21
  * constraint domain dim = 16
  * variable domain dim = 16
  * query bound = 0
  * make zk = false
  * domain type = multiplicative coset

Multi lincheck parameters
  * target interactive soundness error (bits) = 131
  * achieved interactive soundness error (bits) = 164.0
  * interactive repetitions = 1
  * constraint domain dim = 16
  * make zk = false
  * domain type = multiplicative coset

LDT instance reducer parameters
  * soundness type = heuristic
  * target interactive soundness error (bits) = 131
  * achieved interactive soundness error (bits) = 159.0
  * codeword domain dim = 21
  * max tested degree bound = 65536
  * max constraint degree bound = 131071
  * absolute proximity parameter = 1966080
  * fractional proximity parameter = 0.937500
  * num output LDT instances = 1

FRI parameters
  * soundness type = heuristic
  * target interactive soundness error (bits) = 131
  * achieved interactive soundness error (bits) = 180.0
  * target query soundness error (bits) = 110
  * achieved query soundness error (bits) = 112.0
  * codeword domain dim = 21
  * effective proximity parameter = 0.937500
  * number of interactive repetitions = 1
  * number of query repetitions = 28
  * localization parameter array = { 1 2 2 2 2 2 2 2 }
  * number of reductions = 8

BCS parameters
  * digest_len (bytes) = 32
  * digest_len (bits) = 256
  * hash_type = blake2b
  (enter) Submit witness oracles             	[             ]	(11.8534s x1.00 from start)
    (enter) Compute randomized f_w             	[             ]	(11.8534s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(11.8534s x1.00 from start)
        * Vector size: 16
        * Coset size: 16
      (leave) Call to multiplicative_IFFT_wrapper	[0.0000s x1.04]	(11.8535s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(11.8535s x1.00 from start)
        * Vector size: 16
        * Subgroup size: 65536
      (leave) Call to multiplicative_FFT_wrapper 	[0.0081s x1.00]	(11.8615s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(11.8633s x1.00 from start)
        * Vector size: 65536
        * Coset size: 65536
      (leave) Call to multiplicative_IFFT_wrapper	[0.0404s x1.00]	(11.9037s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(11.9083s x1.00 from start)
        * Vector size: 65520
        * Subgroup size: 2097152
      (leave) Call to multiplicative_FFT_wrapper 	[0.8383s x1.00]	(12.7466s x1.00 from start)
    (leave) Compute randomized f_w             	[0.8932s x1.00]	(12.7466s x1.00 from start)
    (enter) Compute A/B/Cz                     	[             ]	(12.7466s x1.00 from start)
    (leave) Compute A/B/Cz                     	[0.0067s x1.00]	(12.7533s x1.00 from start)
    (enter) Compute f_{A/B/Cz} over codeword domain	[             ]	(12.7533s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(12.7535s x1.00 from start)
        * Vector size: 65536
        * Coset size: 65536
      (leave) Call to multiplicative_IFFT_wrapper	[0.0404s x1.00]	(12.7939s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(12.7944s x1.00 from start)
        * Vector size: 65536
        * Coset size: 65536
      (leave) Call to multiplicative_IFFT_wrapper	[0.0403s x1.00]	(12.8346s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(12.8352s x1.00 from start)
        * Vector size: 65536
        * Coset size: 65536
      (leave) Call to multiplicative_IFFT_wrapper	[0.0402s x1.00]	(12.8754s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(12.8758s x1.00 from start)
        * Vector size: 65536
        * Subgroup size: 2097152
      (leave) Call to multiplicative_FFT_wrapper 	[0.7914s x1.00]	(13.6672s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(13.6675s x1.00 from start)
        * Vector size: 65536
        * Subgroup size: 2097152
      (leave) Call to multiplicative_FFT_wrapper 	[0.7965s x1.00]	(14.4641s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(14.4643s x1.00 from start)
        * Vector size: 65536
        * Subgroup size: 2097152
      (leave) Call to multiplicative_FFT_wrapper 	[0.7982s x1.00]	(15.2625s x1.00 from start)
    (leave) Compute f_{A/B/Cz} over codeword domain	[2.5093s x1.00]	(15.2626s x1.00 from start)
    (enter) Call IOP oracle submission routines	[             ]	(15.2626s x1.00 from start)
    (leave) Call IOP oracle submission routines	[0.0000s x1.09]	(15.2626s x1.00 from start)
  (leave) Submit witness oracles             	[3.4092s x1.00]	(15.2626s x1.00 from start)
  (enter) LDT Reducer: Submit masking polynomial	[             ]	(15.2626s x1.00 from start)
  (leave) LDT Reducer: Submit masking polynomial	[0.0000s x1.24]	(15.2626s x1.00 from start)
  (enter) Finish prover round                	[             ]	(15.2626s x1.00 from start)
    (enter) Construct Merkle tree              	[             ]	(15.2626s x1.00 from start)
    (leave) Construct Merkle tree              	[0.7649s x1.00]	(16.0275s x1.00 from start)
  (leave) Finish prover round                	[0.7649s x1.00]	(16.0275s x1.00 from start)
  (enter) pow                                	[             ]	(16.0275s x1.00 from start)
  (leave) pow                                	[0.0000s x1.05]	(16.0275s x1.00 from start)
  (enter) multi_lincheck: Calculate and submit proof	[             ]	(16.0275s x1.00 from start)
    (enter) multi_lincheck compute alpha powers	[             ]	(16.0275s x1.00 from start)
    (leave) multi_lincheck compute alpha powers	[0.0016s x1.00]	(16.0292s x1.00 from start)
    (enter) multi_lincheck compute p_alpha_prime	[             ]	(16.0292s x1.00 from start)
    (leave) multi_lincheck compute p_alpha_prime	[0.0011s x1.00]	(16.0303s x1.00 from start)
    (enter) multi_lincheck compute p_alpha_ABC 	[             ]	(16.0304s x1.00 from start)
    (leave) multi_lincheck compute p_alpha_ABC 	[0.0205s x1.00]	(16.0509s x1.00 from start)
    (enter) multi_lincheck IFFT p_alphas       	[             ]	(16.0509s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(16.0515s x1.00 from start)
        * Vector size: 65536
        * Coset size: 65536
      (leave) Call to multiplicative_IFFT_wrapper	[0.0406s x1.00]	(16.0921s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(16.0928s x1.00 from start)
        * Vector size: 65536
        * Coset size: 65536
      (leave) Call to multiplicative_IFFT_wrapper	[0.0402s x1.00]	(16.1330s x1.00 from start)
    (leave) multi_lincheck IFFT p_alphas       	[0.0827s x1.00]	(16.1336s x1.00 from start)
    (enter) fz evaluated contents              	[             ]	(16.1336s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(16.1587s x1.00 from start)
        * Vector size: 16
        * Coset size: 16
      (leave) Call to multiplicative_IFFT_wrapper	[0.0000s x0.98]	(16.1587s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(16.1587s x1.00 from start)
        * Vector size: 16
        * Subgroup size: 2097152
      (leave) Call to multiplicative_FFT_wrapper 	[0.2264s x1.00]	(16.3851s x1.00 from start)
    (leave) fz evaluated contents              	[0.3421s x1.00]	(16.4758s x1.00 from start)
    (enter) multi_lincheck evaluated contents  	[             ]	(16.4784s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(16.4787s x1.00 from start)
        * Vector size: 65536
        * Subgroup size: 2097152
      (leave) Call to multiplicative_FFT_wrapper 	[0.7950s x1.00]	(17.2737s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(17.2740s x1.00 from start)
        * Vector size: 65536
        * Subgroup size: 2097152
      (leave) Call to multiplicative_FFT_wrapper 	[0.7956s x1.00]	(18.0696s x1.00 from start)
    (leave) multi_lincheck evaluated contents  	[1.9630s x1.00]	(18.4414s x1.00 from start)
    (enter) Call to multiplicative_IFFT_wrapper	[             ]	(18.5318s x1.00 from start)
      * Vector size: 131072
      * Coset size: 131072
    (leave) Call to multiplicative_IFFT_wrapper	[0.0905s x1.00]	(18.6222s x1.00 from start)
    (enter) Call to multiplicative_FFT_wrapper 	[             ]	(18.6295s x1.00 from start)
      * Vector size: 65535
      * Subgroup size: 2097152
    (leave) Call to multiplicative_FFT_wrapper 	[0.8055s x1.00]	(19.4349s x1.00 from start)
  (leave) multi_lincheck: Calculate and submit proof	[3.4074s x1.00]	(19.4350s x1.00 from start)
  (enter) Finish prover round                	[             ]	(19.4350s x1.00 from start)
    (enter) Construct Merkle tree              	[             ]	(19.4350s x1.00 from start)
    (leave) Construct Merkle tree              	[0.6153s x1.00]	(20.0503s x1.00 from start)
  (leave) Finish prover round                	[0.6154s x1.00]	(20.0504s x1.00 from start)
  (enter) pow                                	[             ]	(20.0504s x1.00 from start)
  (leave) pow                                	[0.0000s x1.14]	(20.0504s x1.00 from start)
  (enter) LDT Reducer: Calculate and submit proof	[             ]	(20.0504s x1.00 from start)
    (enter) Sumcheck: g evaluated contents     	[             ]	(20.0504s x1.00 from start)
    (leave) Sumcheck: g evaluated contents     	[0.2103s x1.00]	(20.2606s x1.00 from start)
    (enter) rowcheck evaluated contents        	[             ]	(20.2620s x1.00 from start)
    (leave) rowcheck evaluated contents        	[0.1521s x1.00]	(20.4141s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(21.1767s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.3602s x1.00]	(21.5369s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(21.5408s x1.00 from start)
      (enter) Finish prover round                	[             ]	(21.5408s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(21.5408s x1.00 from start)
        (leave) Construct Merkle tree              	[0.1608s x1.00]	(21.7016s x1.00 from start)
      (leave) Finish prover round                	[0.1609s x1.00]	(21.7017s x1.00 from start)
      (enter) pow                                	[             ]	(21.7017s x1.00 from start)
      (leave) pow                                	[0.0000s x1.14]	(21.7017s x1.00 from start)
    (leave) LDT signal prover round done       	[0.1609s x1.00]	(21.7017s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(21.7017s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.1567s x1.00]	(21.8584s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(21.8593s x1.00 from start)
      (enter) Finish prover round                	[             ]	(21.8593s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(21.8593s x1.00 from start)
        (leave) Construct Merkle tree              	[0.0374s x1.00]	(21.8967s x1.00 from start)
      (leave) Finish prover round                	[0.0374s x1.00]	(21.8967s x1.00 from start)
      (enter) pow                                	[             ]	(21.8967s x1.00 from start)
      (leave) pow                                	[0.0000s x1.16]	(21.8967s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0374s x1.00]	(21.8967s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(21.8967s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0367s x1.00]	(21.9334s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(21.9337s x1.00 from start)
      (enter) Finish prover round                	[             ]	(21.9337s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(21.9337s x1.00 from start)
        (leave) Construct Merkle tree              	[0.0093s x1.00]	(21.9430s x1.00 from start)
      (leave) Finish prover round                	[0.0094s x1.00]	(21.9430s x1.00 from start)
      (enter) pow                                	[             ]	(21.9430s x1.00 from start)
      (leave) pow                                	[0.0000s x1.21]	(21.9430s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0094s x1.00]	(21.9431s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(21.9431s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0087s x1.00]	(21.9517s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(21.9518s x1.00 from start)
      (enter) Finish prover round                	[             ]	(21.9518s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(21.9518s x1.00 from start)
        (leave) Construct Merkle tree              	[0.0023s x1.00]	(21.9541s x1.00 from start)
      (leave) Finish prover round                	[0.0024s x1.00]	(21.9541s x1.00 from start)
      (enter) pow                                	[             ]	(21.9541s x1.00 from start)
      (leave) pow                                	[0.0000s x1.20]	(21.9541s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0024s x1.00]	(21.9541s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(21.9541s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0022s x1.00]	(21.9563s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(21.9563s x1.00 from start)
      (enter) Finish prover round                	[             ]	(21.9563s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(21.9563s x1.00 from start)
        (leave) Construct Merkle tree              	[0.0006s x1.00]	(21.9569s x1.00 from start)
      (leave) Finish prover round                	[0.0006s x1.00]	(21.9569s x1.00 from start)
      (enter) pow                                	[             ]	(21.9569s x1.00 from start)
      (leave) pow                                	[0.0000s x1.02]	(21.9569s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0006s x1.00]	(21.9569s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(21.9569s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0005s x1.00]	(21.9575s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(21.9575s x1.00 from start)
      (enter) Finish prover round                	[             ]	(21.9575s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(21.9575s x1.00 from start)
        (leave) Construct Merkle tree              	[0.0002s x1.00]	(21.9576s x1.00 from start)
      (leave) Finish prover round                	[0.0002s x1.00]	(21.9576s x1.00 from start)
      (enter) pow                                	[             ]	(21.9576s x1.00 from start)
      (leave) pow                                	[0.0000s x1.04]	(21.9576s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0002s x1.00]	(21.9576s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(21.9576s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0001s x1.00]	(21.9578s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(21.9578s x1.00 from start)
      (enter) Finish prover round                	[             ]	(21.9578s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(21.9578s x1.00 from start)
        (leave) Construct Merkle tree              	[0.0000s x1.00]	(21.9578s x1.00 from start)
      (leave) Finish prover round                	[0.0001s x1.00]	(21.9579s x1.00 from start)
      (enter) pow                                	[             ]	(21.9579s x1.00 from start)
      (leave) pow                                	[0.0000s x1.06]	(21.9579s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0001s x1.00]	(21.9579s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(21.9579s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0001s x1.00]	(21.9579s x1.00 from start)
    (enter) Call to multiplicative_IFFT_wrapper	[             ]	(21.9579s x1.00 from start)
      * Vector size: 64
      * Coset size: 64
    (leave) Call to multiplicative_IFFT_wrapper	[0.0000s x1.02]	(21.9580s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(21.9580s x1.00 from start)
      (enter) Finish prover round                	[             ]	(21.9580s x1.00 from start)
      (leave) Finish prover round                	[0.0000s x1.01]	(21.9580s x1.00 from start)
      (enter) pow                                	[             ]	(21.9580s x1.00 from start)
      (leave) pow                                	[0.2155s x1.00]	(22.1735s x1.00 from start)
    (leave) LDT signal prover round done       	[0.2155s x1.00]	(22.1735s x1.00 from start)
  (leave) LDT Reducer: Calculate and submit proof	[2.1244s x1.00]	(22.1748s x1.00 from start)
  (enter) Obtain transcript                  	[             ]	(22.1748s x1.00 from start)
  (leave) Obtain transcript                  	[0.2303s x1.00]	(22.4052s x1.00 from start)
  * Total size of proof oracles (bytes): 285210624
  * Total size of Merkle tree (bytes): 156585696
  * Total size of prover state (bytes): 441796320
(leave) Aurora SNARK prover                	[10.5587s x1.00]	(22.4052s x1.00 from start)

BCS parameters
* digest_len (bytes) = 32
* digest_len (bits) = 256
* hash_type = blake2b
(enter) verifier_seal_interaction_registrations	[             ]	(22.5168s x1.00 from start)
(leave) verifier_seal_interaction_registrations	[0.0013s x1.00]	(22.5181s x1.00 from start)

* Argument size in bytes (IOP): 23874
* Argument size in bytes (BCS): 66848
* Argument size in bytes (total): 90722

If we were to remove pruning of authentication paths in BCS,
the argument would have the following sizes:
* Argument size in bytes (BCS, no pruning): 109952
* Argument size in bytes (total, no pruning): 133826

total prover messages size: 46
total two to one hashes: 2315
total leaves hashed: 1036
total hashes: 3351

Transcript info by round
Per round IOP sizes don't include prover messages

round 0
MT_depth 20
IOP size: 5152 bytes
BCS size: 12960 bytes
number of two to one hashes: 431
number of leaves hashed: 224
oracles in round: fw, fAz, fBz, fCz, 

round 1
MT_depth 20
IOP size: 1288 bytes
BCS size: 12960 bytes
number of two to one hashes: 431
number of leaves hashed: 56
oracles in round: sumcheck h, 

round 2
MT_depth 18
IOP size: 2576 bytes
BCS size: 10944 bytes
number of two to one hashes: 368
number of leaves hashed: 112
oracles in round: TODO: Fill in this name (batching.tcc), 

round 3
MT_depth 16
IOP size: 2576 bytes
BCS size: 9600 bytes
number of two to one hashes: 326
number of leaves hashed: 112
oracles in round: TODO: Fill in this name (batching.tcc), 

round 4
MT_depth 14
IOP size: 2576 bytes
BCS size: 7680 bytes
number of two to one hashes: 266
number of leaves hashed: 112
oracles in round: TODO: Fill in this name (batching.tcc), 

round 5
MT_depth 12
IOP size: 2576 bytes
BCS size: 5408 bytes
number of two to one hashes: 195
number of leaves hashed: 112
oracles in round: TODO: Fill in this name (batching.tcc), 

round 6
MT_depth 10
IOP size: 2576 bytes
BCS size: 4000 bytes
number of two to one hashes: 151
number of leaves hashed: 112
oracles in round: TODO: Fill in this name (batching.tcc), 

round 7
MT_depth 8
IOP size: 2392 bytes
BCS size: 2400 bytes
number of two to one hashes: 99
number of leaves hashed: 104
oracles in round: TODO: Fill in this name (batching.tcc), 

round 8
MT_depth 6
IOP size: 2116 bytes
BCS size: 864 bytes
number of two to one hashes: 48
number of leaves hashed: 92
oracles in round: TODO: Fill in this name (batching.tcc), 


(enter) Aurora SNARK verifier              	[             ]	(22.5265s x1.00 from start)
  
Aurora SNARK parameters
  * security parameter (bits) = 128
  * RS extra dimensions = 5
  * LDT reducer soundness type = heuristic
  * FRI soundness type = heuristic
  * zero-knowledge = false
  * domain type = multiplicative coset

Aurora IOP parameters
  * target security parameter = 128
  * achieved security parameter = 112.0
  * RS extra dimensions = 5
  * codeword domain dim = 21
  * constraint domain dim = 16
  * variable domain dim = 16
  * query bound = 0
  * make zk = false
  * domain type = multiplicative coset

Multi lincheck parameters
  * target interactive soundness error (bits) = 131
  * achieved interactive soundness error (bits) = 164.0
  * interactive repetitions = 1
  * constraint domain dim = 16
  * make zk = false
  * domain type = multiplicative coset

LDT instance reducer parameters
  * soundness type = heuristic
  * target interactive soundness error (bits) = 131
  * achieved interactive soundness error (bits) = 159.0
  * codeword domain dim = 21
  * max tested degree bound = 65536
  * max constraint degree bound = 131071
  * absolute proximity parameter = 1966080
  * fractional proximity parameter = 0.937500
  * num output LDT instances = 1

FRI parameters
  * soundness type = heuristic
  * target interactive soundness error (bits) = 131
  * achieved interactive soundness error (bits) = 180.0
  * target query soundness error (bits) = 110
  * achieved query soundness error (bits) = 112.0
  * codeword domain dim = 21
  * effective proximity parameter = 0.937500
  * number of interactive repetitions = 1
  * number of query repetitions = 28
  * localization parameter array = { 1 2 2 2 2 2 2 2 }
  * number of reductions = 8

BCS parameters
  * digest_len (bytes) = 32
  * digest_len (bits) = 256
  * hash_type = blake2b
  (enter) Aurora IOP protocol initialization and registration	[             ]	(22.5266s x1.00 from start)
    (enter) verifier_seal_interaction_registrations	[             ]	(22.5333s x1.00 from start)
    (leave) verifier_seal_interaction_registrations	[0.0012s x1.00]	(22.5346s x1.00 from start)
  (leave) Aurora IOP protocol initialization and registration	[0.0081s x1.00]	(22.5347s x1.00 from start)
  (enter) Check semantic validity of IOP transcript	[             ]	(22.5348s x1.00 from start)
  (leave) Check semantic validity of IOP transcript	[0.0000s x1.16]	(22.5348s x1.00 from start)
  (enter) Construct R1CS verifier state      	[             ]	(22.5348s x1.00 from start)
    (enter) multi_lincheck compute alpha powers	[             ]	(22.5348s x1.00 from start)
    (leave) multi_lincheck compute alpha powers	[0.0016s x1.00]	(22.5364s x1.00 from start)
    (enter) multi_lincheck compute p_alpha_prime	[             ]	(22.5364s x1.00 from start)
    (leave) multi_lincheck compute p_alpha_prime	[0.0011s x1.00]	(22.5375s x1.00 from start)
    (enter) multi_lincheck compute p_alpha_ABC 	[             ]	(22.5375s x1.00 from start)
    (leave) multi_lincheck compute p_alpha_ABC 	[0.0198s x1.00]	(22.5574s x1.00 from start)
    (enter) multi_lincheck IFFT p_alphas       	[             ]	(22.5574s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(22.5576s x1.00 from start)
        * Vector size: 65536
        * Coset size: 65536
      (leave) Call to multiplicative_IFFT_wrapper	[0.0403s x1.00]	(22.5979s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(22.5984s x1.00 from start)
        * Vector size: 65536
        * Coset size: 65536
      (leave) Call to multiplicative_IFFT_wrapper	[0.0402s x1.00]	(22.6385s x1.00 from start)
    (leave) multi_lincheck IFFT p_alphas       	[0.0814s x1.00]	(22.6387s x1.00 from start)
  (leave) Construct R1CS verifier state      	[0.1040s x1.00]	(22.6388s x1.00 from start)
  (enter) Check LDT verifier predicate       	[             ]	(22.6388s x1.00 from start)
    * Number of FRI interactions: 1
    * Number of FRI query sets per interaction: 28
    * Total number of FRI queries over all query sets (incl. repeated queries): 840
  (leave) Check LDT verifier predicate       	[0.2309s x1.00]	(22.8697s x1.00 from start)
  * IOP transcript valid: true
  * Full protocol decision predicate satisfied: true
(leave) Aurora SNARK verifier              	[0.3432s x1.00]	(22.8697s x1.00 from start)


* Verifier satisfied: true

================================================================================

(enter) Check satisfiability of R1CS example	[             ]	(24.5662s x1.00 from start)
(leave) Check satisfiability of R1CS example	[0.0141s x1.00]	(24.5804s x1.00 from start)

* R1CS number of constraints: 131072
* R1CS number of variables: 131071
* R1CS number of variables for primary input: 15
* R1CS number of variables for auxiliary input: 131056
* R1CS size of constraint system (bytes): 10321920
* R1CS size of primary input (bytes): 360
* R1CS size of auxiliary input (bytes): 3145344

(enter) Aurora SNARK prover                	[             ]	(24.5811s x1.00 from start)
  
Aurora SNARK parameters
  * security parameter (bits) = 128
  * RS extra dimensions = 5
  * LDT reducer soundness type = heuristic
  * FRI soundness type = heuristic
  * zero-knowledge = false
  * domain type = multiplicative coset

Aurora IOP parameters
  * target security parameter = 128
  * achieved security parameter = 112.0
  * RS extra dimensions = 5
  * codeword domain dim = 22
  * constraint domain dim = 17
  * variable domain dim = 17
  * query bound = 0
  * make zk = false
  * domain type = multiplicative coset

Multi lincheck parameters
  * target interactive soundness error (bits) = 131
  * achieved interactive soundness error (bits) = 163.0
  * interactive repetitions = 1
  * constraint domain dim = 17
  * make zk = false
  * domain type = multiplicative coset

LDT instance reducer parameters
  * soundness type = heuristic
  * target interactive soundness error (bits) = 131
  * achieved interactive soundness error (bits) = 158.0
  * codeword domain dim = 22
  * max tested degree bound = 131072
  * max constraint degree bound = 262143
  * absolute proximity parameter = 3932160
  * fractional proximity parameter = 0.937500
  * num output LDT instances = 1

FRI parameters
  * soundness type = heuristic
  * target interactive soundness error (bits) = 131
  * achieved interactive soundness error (bits) = 180.0
  * target query soundness error (bits) = 109
  * achieved query soundness error (bits) = 112.0
  * codeword domain dim = 22
  * effective proximity parameter = 0.937500
  * number of interactive repetitions = 1
  * number of query repetitions = 28
  * localization parameter array = { 1 2 2 2 2 2 2 2 2 }
  * number of reductions = 9

BCS parameters
  * digest_len (bytes) = 32
  * digest_len (bits) = 256
  * hash_type = blake2b
  (enter) Submit witness oracles             	[             ]	(24.5949s x1.00 from start)
    (enter) Compute randomized f_w             	[             ]	(24.5949s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(24.5949s x1.00 from start)
        * Vector size: 16
        * Coset size: 16
      (leave) Call to multiplicative_IFFT_wrapper	[0.0000s x1.13]	(24.5949s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(24.5949s x1.00 from start)
        * Vector size: 16
        * Subgroup size: 131072
      (leave) Call to multiplicative_FFT_wrapper 	[0.0161s x1.00]	(24.6111s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(24.6159s x1.00 from start)
        * Vector size: 131072
        * Coset size: 131072
      (leave) Call to multiplicative_IFFT_wrapper	[0.0854s x1.00]	(24.7014s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(24.7106s x1.00 from start)
        * Vector size: 131056
        * Subgroup size: 4194304
      (leave) Call to multiplicative_FFT_wrapper 	[1.8271s x1.00]	(26.5377s x1.00 from start)
    (leave) Compute randomized f_w             	[1.9429s x1.00]	(26.5378s x1.00 from start)
    (enter) Compute A/B/Cz                     	[             ]	(26.5378s x1.00 from start)
    (leave) Compute A/B/Cz                     	[0.0141s x1.00]	(26.5519s x1.00 from start)
    (enter) Compute f_{A/B/Cz} over codeword domain	[             ]	(26.5519s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(26.5523s x1.00 from start)
        * Vector size: 131072
        * Coset size: 131072
      (leave) Call to multiplicative_IFFT_wrapper	[0.0853s x1.00]	(26.6376s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(26.6385s x1.00 from start)
        * Vector size: 131072
        * Coset size: 131072
      (leave) Call to multiplicative_IFFT_wrapper	[0.0852s x1.00]	(26.7237s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(26.7246s x1.00 from start)
        * Vector size: 131072
        * Coset size: 131072
      (leave) Call to multiplicative_IFFT_wrapper	[0.0854s x1.00]	(26.8100s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(26.8108s x1.00 from start)
        * Vector size: 131072
        * Subgroup size: 4194304
      (leave) Call to multiplicative_FFT_wrapper 	[1.7293s x1.00]	(28.5401s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(28.5406s x1.00 from start)
        * Vector size: 131072
        * Subgroup size: 4194304
      (leave) Call to multiplicative_FFT_wrapper 	[1.7421s x1.00]	(30.2827s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(30.2832s x1.00 from start)
        * Vector size: 131072
        * Subgroup size: 4194304
      (leave) Call to multiplicative_FFT_wrapper 	[1.7500s x1.00]	(32.0332s x1.00 from start)
    (leave) Compute f_{A/B/Cz} over codeword domain	[5.4813s x1.00]	(32.0332s x1.00 from start)
    (enter) Call IOP oracle submission routines	[             ]	(32.0332s x1.00 from start)
    (leave) Call IOP oracle submission routines	[0.0000s x1.07]	(32.0333s x1.00 from start)
  (leave) Submit witness oracles             	[7.4384s x1.00]	(32.0333s x1.00 from start)
  (enter) LDT Reducer: Submit masking polynomial	[             ]	(32.0333s x1.00 from start)
  (leave) LDT Reducer: Submit masking polynomial	[0.0000s x1.33]	(32.0333s x1.00 from start)
  (enter) Finish prover round                	[             ]	(32.0333s x1.00 from start)
    (enter) Construct Merkle tree              	[             ]	(32.0333s x1.00 from start)
    (leave) Construct Merkle tree              	[1.5518s x1.00]	(33.5851s x1.00 from start)
  (leave) Finish prover round                	[1.5519s x1.00]	(33.5851s x1.00 from start)
  (enter) pow                                	[             ]	(33.5851s x1.00 from start)
  (leave) pow                                	[0.0000s x1.21]	(33.5851s x1.00 from start)
  (enter) multi_lincheck: Calculate and submit proof	[             ]	(33.5851s x1.00 from start)
    (enter) multi_lincheck compute alpha powers	[             ]	(33.5852s x1.00 from start)
    (leave) multi_lincheck compute alpha powers	[0.0040s x1.00]	(33.5891s x1.00 from start)
    (enter) multi_lincheck compute p_alpha_prime	[             ]	(33.5892s x1.00 from start)
    (leave) multi_lincheck compute p_alpha_prime	[0.0031s x1.00]	(33.5923s x1.00 from start)
    (enter) multi_lincheck compute p_alpha_ABC 	[             ]	(33.5923s x1.00 from start)
    (leave) multi_lincheck compute p_alpha_ABC 	[0.0414s x1.00]	(33.6337s x1.00 from start)
    (enter) multi_lincheck IFFT p_alphas       	[             ]	(33.6337s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(33.6362s x1.00 from start)
        * Vector size: 131072
        * Coset size: 131072
      (leave) Call to multiplicative_IFFT_wrapper	[0.0875s x1.00]	(33.7237s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(33.7268s x1.00 from start)
        * Vector size: 131072
        * Coset size: 131072
      (leave) Call to multiplicative_IFFT_wrapper	[0.0863s x1.00]	(33.8131s x1.00 from start)
    (leave) multi_lincheck IFFT p_alphas       	[0.1805s x1.00]	(33.8142s x1.00 from start)
    (enter) fz evaluated contents              	[             ]	(33.8142s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(33.8644s x1.00 from start)
        * Vector size: 16
        * Coset size: 16
      (leave) Call to multiplicative_IFFT_wrapper	[0.0000s x0.98]	(33.8645s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(33.8645s x1.00 from start)
        * Vector size: 16
        * Subgroup size: 4194304
      (leave) Call to multiplicative_FFT_wrapper 	[0.4531s x1.00]	(34.3176s x1.00 from start)
    (leave) fz evaluated contents              	[0.6785s x1.00]	(34.4927s x1.00 from start)
    (enter) multi_lincheck evaluated contents  	[             ]	(34.4980s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(34.4985s x1.00 from start)
        * Vector size: 131072
        * Subgroup size: 4194304
      (leave) Call to multiplicative_FFT_wrapper 	[1.6920s x1.00]	(36.1905s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(36.1909s x1.00 from start)
        * Vector size: 131072
        * Subgroup size: 4194304
      (leave) Call to multiplicative_FFT_wrapper 	[1.6916s x1.00]	(37.8826s x1.00 from start)
    (leave) multi_lincheck evaluated contents  	[4.1414s x1.00]	(38.6394s x1.00 from start)
    (enter) Call to multiplicative_IFFT_wrapper	[             ]	(38.8213s x1.00 from start)
      * Vector size: 262144
      * Coset size: 262144
    (leave) Call to multiplicative_IFFT_wrapper	[0.1943s x1.00]	(39.0157s x1.00 from start)
    (enter) Call to multiplicative_FFT_wrapper 	[             ]	(39.0312s x1.00 from start)
      * Vector size: 131071
      * Subgroup size: 4194304
    (leave) Call to multiplicative_FFT_wrapper 	[1.7156s x1.00]	(40.7468s x1.00 from start)
  (leave) multi_lincheck: Calculate and submit proof	[7.1617s x1.00]	(40.7468s x1.00 from start)
  (enter) Finish prover round                	[             ]	(40.7468s x1.00 from start)
    (enter) Construct Merkle tree              	[             ]	(40.7468s x1.00 from start)
    (leave) Construct Merkle tree              	[1.2316s x1.00]	(41.9785s x1.00 from start)
  (leave) Finish prover round                	[1.2317s x1.00]	(41.9786s x1.00 from start)
  (enter) pow                                	[             ]	(41.9786s x1.00 from start)
  (leave) pow                                	[0.0000s x1.11]	(41.9786s x1.00 from start)
  (enter) LDT Reducer: Calculate and submit proof	[             ]	(41.9786s x1.00 from start)
    (enter) Sumcheck: g evaluated contents     	[             ]	(41.9786s x1.00 from start)
    (leave) Sumcheck: g evaluated contents     	[0.4194s x1.00]	(42.3980s x1.00 from start)
    (enter) rowcheck evaluated contents        	[             ]	(42.4006s x1.00 from start)
    (leave) rowcheck evaluated contents        	[0.3104s x1.00]	(42.7110s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(44.2315s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.7232s x1.00]	(44.9547s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(44.9734s x1.00 from start)
      (enter) Finish prover round                	[             ]	(44.9734s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(44.9734s x1.00 from start)
        (leave) Construct Merkle tree              	[0.3225s x1.00]	(45.2960s x1.00 from start)
      (leave) Finish prover round                	[0.3226s x1.00]	(45.2960s x1.00 from start)
      (enter) pow                                	[             ]	(45.2960s x1.00 from start)
      (leave) pow                                	[0.0000s x1.18]	(45.2960s x1.00 from start)
    (leave) LDT signal prover round done       	[0.3226s x1.00]	(45.2960s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(45.2960s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.3161s x1.00]	(45.6121s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(45.6140s x1.00 from start)
      (enter) Finish prover round                	[             ]	(45.6140s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(45.6140s x1.00 from start)
        (leave) Construct Merkle tree              	[0.0805s x1.00]	(45.6945s x1.00 from start)
      (leave) Finish prover round                	[0.0805s x1.00]	(45.6945s x1.00 from start)
      (enter) pow                                	[             ]	(45.6945s x1.00 from start)
      (leave) pow                                	[0.0000s x1.33]	(45.6945s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0806s x1.00]	(45.6945s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(45.6945s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0779s x1.00]	(45.7724s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(45.7728s x1.00 from start)
      (enter) Finish prover round                	[             ]	(45.7729s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(45.7729s x1.00 from start)
        (leave) Construct Merkle tree              	[0.0186s x1.00]	(45.7915s x1.00 from start)
      (leave) Finish prover round                	[0.0186s x1.00]	(45.7915s x1.00 from start)
      (enter) pow                                	[             ]	(45.7915s x1.00 from start)
      (leave) pow                                	[0.0000s x1.19]	(45.7915s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0186s x1.00]	(45.7915s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(45.7915s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0171s x1.00]	(45.8086s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(45.8087s x1.00 from start)
      (enter) Finish prover round                	[             ]	(45.8087s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(45.8087s x1.00 from start)
        (leave) Construct Merkle tree              	[0.0046s x1.00]	(45.8134s x1.00 from start)
      (leave) Finish prover round                	[0.0047s x1.00]	(45.8134s x1.00 from start)
      (enter) pow                                	[             ]	(45.8134s x1.00 from start)
      (leave) pow                                	[0.0000s x1.11]	(45.8134s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0047s x1.00]	(45.8134s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(45.8134s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0043s x1.00]	(45.8176s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(45.8177s x1.00 from start)
      (enter) Finish prover round                	[             ]	(45.8177s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(45.8177s x1.00 from start)
        (leave) Construct Merkle tree              	[0.0012s x1.00]	(45.8188s x1.00 from start)
      (leave) Finish prover round                	[0.0012s x1.00]	(45.8188s x1.00 from start)
      (enter) pow                                	[             ]	(45.8189s x1.00 from start)
      (leave) pow                                	[0.0000s x1.10]	(45.8189s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0012s x1.00]	(45.8189s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(45.8189s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0010s x1.00]	(45.8199s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(45.8199s x1.00 from start)
      (enter) Finish prover round                	[             ]	(45.8199s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(45.8199s x1.00 from start)
        (leave) Construct Merkle tree              	[0.0003s x1.00]	(45.8202s x1.00 from start)
      (leave) Finish prover round                	[0.0003s x1.00]	(45.8202s x1.00 from start)
      (enter) pow                                	[             ]	(45.8202s x1.00 from start)
      (leave) pow                                	[0.0000s x1.05]	(45.8202s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0003s x1.00]	(45.8202s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(45.8202s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0003s x1.00]	(45.8205s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(45.8205s x1.00 from start)
      (enter) Finish prover round                	[             ]	(45.8205s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(45.8205s x1.00 from start)
        (leave) Construct Merkle tree              	[0.0001s x1.00]	(45.8206s x1.00 from start)
      (leave) Finish prover round                	[0.0001s x1.00]	(45.8206s x1.00 from start)
      (enter) pow                                	[             ]	(45.8206s x1.00 from start)
      (leave) pow                                	[0.0000s x1.03]	(45.8206s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0001s x1.00]	(45.8206s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(45.8206s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0001s x1.00]	(45.8207s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(45.8207s x1.00 from start)
      (enter) Finish prover round                	[             ]	(45.8207s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(45.8207s x1.00 from start)
        (leave) Construct Merkle tree              	[0.0000s x1.00]	(45.8207s x1.00 from start)
      (leave) Finish prover round                	[0.0000s x1.00]	(45.8208s x1.00 from start)
      (enter) pow                                	[             ]	(45.8208s x1.00 from start)
      (leave) pow                                	[0.0000s x1.05]	(45.8208s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0001s x1.00]	(45.8208s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(45.8208s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0000s x1.00]	(45.8208s x1.00 from start)
    (enter) Call to multiplicative_IFFT_wrapper	[             ]	(45.8208s x1.00 from start)
      * Vector size: 32
      * Coset size: 32
    (leave) Call to multiplicative_IFFT_wrapper	[0.0000s x1.03]	(45.8208s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(45.8208s x1.00 from start)
      (enter) Finish prover round                	[             ]	(45.8208s x1.00 from start)
      (leave) Finish prover round                	[0.0000s x1.01]	(45.8208s x1.00 from start)
      (enter) pow                                	[             ]	(45.8208s x1.00 from start)
      (leave) pow                                	[0.3494s x1.00]	(46.1702s x1.00 from start)
    (leave) LDT signal prover round done       	[0.3494s x1.00]	(46.1702s x1.00 from start)
  (leave) LDT Reducer: Calculate and submit proof	[4.1942s x1.00]	(46.1728s x1.00 from start)
  (enter) Obtain transcript                  	[             ]	(46.1728s x1.00 from start)
  (leave) Obtain transcript                  	[0.4583s x1.00]	(46.6311s x1.00 from start)
  * Total size of proof oracles (bytes): 570424320
  * Total size of Merkle tree (bytes): 313173696
  * Total size of prover state (bytes): 883598016
(leave) Aurora SNARK prover                	[22.0501s x1.00]	(46.6311s x1.00 from start)

BCS parameters
* digest_len (bytes) = 32
* digest_len (bits) = 256
* hash_type = blake2b
(enter) verifier_seal_interaction_registrations	[             ]	(46.8565s x1.00 from start)
(leave) verifier_seal_interaction_registrations	[0.0014s x1.00]	(46.8579s x1.00 from start)

* Argument size in bytes (IOP): 25691
* Argument size in bytes (BCS): 75904
* Argument size in bytes (total): 101595

If we were to remove pruning of authentication paths in BCS,
the argument would have the following sizes:
* Argument size in bytes (BCS, no pruning): 121280
* Argument size in bytes (total, no pruning): 146971

total prover messages size: 23
total two to one hashes: 2616
total leaves hashed: 1116
total hashes: 3732

Transcript info by round
Per round IOP sizes don't include prover messages

round 0
MT_depth 21
IOP size: 5152 bytes
BCS size: 14208 bytes
number of two to one hashes: 470
number of leaves hashed: 224
oracles in round: fw, fAz, fBz, fCz, 

round 1
MT_depth 21
IOP size: 1288 bytes
BCS size: 14208 bytes
number of two to one hashes: 470
number of leaves hashed: 56
oracles in round: sumcheck h, 

round 2
MT_depth 19
IOP size: 2576 bytes
BCS size: 11872 bytes
number of two to one hashes: 397
number of leaves hashed: 112
oracles in round: TODO: Fill in this name (batching.tcc), 

round 3
MT_depth 17
IOP size: 2576 bytes
BCS size: 10368 bytes
number of two to one hashes: 350
number of leaves hashed: 112
oracles in round: TODO: Fill in this name (batching.tcc), 

round 4
MT_depth 15
IOP size: 2576 bytes
BCS size: 8480 bytes
number of two to one hashes: 291
number of leaves hashed: 112
oracles in round: TODO: Fill in this name (batching.tcc), 

round 5
MT_depth 13
IOP size: 2576 bytes
BCS size: 6752 bytes
number of two to one hashes: 237
number of leaves hashed: 112
oracles in round: TODO: Fill in this name (batching.tcc), 

round 6
MT_depth 11
IOP size: 2576 bytes
BCS size: 4928 bytes
number of two to one hashes: 180
number of leaves hashed: 112
oracles in round: TODO: Fill in this name (batching.tcc), 

round 7
MT_depth 9
IOP size: 2484 bytes
BCS size: 3136 bytes
number of two to one hashes: 123
number of leaves hashed: 108
oracles in round: TODO: Fill in this name (batching.tcc), 

round 8
MT_depth 7
IOP size: 2300 bytes
BCS size: 1568 bytes
number of two to one hashes: 72
number of leaves hashed: 100
oracles in round: TODO: Fill in this name (batching.tcc), 

round 9
MT_depth 5
IOP size: 1564 bytes
BCS size: 352 bytes
number of two to one hashes: 26
number of leaves hashed: 68
oracles in round: TODO: Fill in this name (batching.tcc), 


(enter) Aurora SNARK verifier              	[             ]	(46.8741s x1.00 from start)
  
Aurora SNARK parameters
  * security parameter (bits) = 128
  * RS extra dimensions = 5
  * LDT reducer soundness type = heuristic
  * FRI soundness type = heuristic
  * zero-knowledge = false
  * domain type = multiplicative coset

Aurora IOP parameters
  * target security parameter = 128
  * achieved security parameter = 112.0
  * RS extra dimensions = 5
  * codeword domain dim = 22
  * constraint domain dim = 17
  * variable domain dim = 17
  * query bound = 0
  * make zk = false
  * domain type = multiplicative coset

Multi lincheck parameters
  * target interactive soundness error (bits) = 131
  * achieved interactive soundness error (bits) = 163.0
  * interactive repetitions = 1
  * constraint domain dim = 17
  * make zk = false
  * domain type = multiplicative coset

LDT instance reducer parameters
  * soundness type = heuristic
  * target interactive soundness error (bits) = 131
  * achieved interactive soundness error (bits) = 158.0
  * codeword domain dim = 22
  * max tested degree bound = 131072
  * max constraint degree bound = 262143
  * absolute proximity parameter = 3932160
  * fractional proximity parameter = 0.937500
  * num output LDT instances = 1

FRI parameters
  * soundness type = heuristic
  * target interactive soundness error (bits) = 131
  * achieved interactive soundness error (bits) = 180.0
  * target query soundness error (bits) = 109
  * achieved query soundness error (bits) = 112.0
  * codeword domain dim = 22
  * effective proximity parameter = 0.937500
  * number of interactive repetitions = 1
  * number of query repetitions = 28
  * localization parameter array = { 1 2 2 2 2 2 2 2 2 }
  * number of reductions = 9

BCS parameters
  * digest_len (bytes) = 32
  * digest_len (bits) = 256
  * hash_type = blake2b
  (enter) Aurora IOP protocol initialization and registration	[             ]	(46.8742s x1.00 from start)
    (enter) verifier_seal_interaction_registrations	[             ]	(46.8874s x1.00 from start)
    (leave) verifier_seal_interaction_registrations	[0.0014s x1.00]	(46.8888s x1.00 from start)
  (leave) Aurora IOP protocol initialization and registration	[0.0147s x1.00]	(46.8890s x1.00 from start)
  (enter) Check semantic validity of IOP transcript	[             ]	(46.8890s x1.00 from start)
  (leave) Check semantic validity of IOP transcript	[0.0000s x1.12]	(46.8890s x1.00 from start)
  (enter) Construct R1CS verifier state      	[             ]	(46.8890s x1.00 from start)
    (enter) multi_lincheck compute alpha powers	[             ]	(46.8890s x1.00 from start)
    (leave) multi_lincheck compute alpha powers	[0.0033s x1.00]	(46.8923s x1.00 from start)
    (enter) multi_lincheck compute p_alpha_prime	[             ]	(46.8923s x1.00 from start)
    (leave) multi_lincheck compute p_alpha_prime	[0.0023s x1.00]	(46.8946s x1.00 from start)
    (enter) multi_lincheck compute p_alpha_ABC 	[             ]	(46.8946s x1.00 from start)
    (leave) multi_lincheck compute p_alpha_ABC 	[0.0403s x1.00]	(46.9350s x1.00 from start)
    (enter) multi_lincheck IFFT p_alphas       	[             ]	(46.9350s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(46.9354s x1.00 from start)
        * Vector size: 131072
        * Coset size: 131072
      (leave) Call to multiplicative_IFFT_wrapper	[0.0856s x1.00]	(47.0210s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(47.0218s x1.00 from start)
        * Vector size: 131072
        * Coset size: 131072
      (leave) Call to multiplicative_IFFT_wrapper	[0.0854s x1.00]	(47.1072s x1.00 from start)
    (leave) multi_lincheck IFFT p_alphas       	[0.1726s x1.00]	(47.1076s x1.00 from start)
  (leave) Construct R1CS verifier state      	[0.2186s x1.00]	(47.1076s x1.00 from start)
  (enter) Check LDT verifier predicate       	[             ]	(47.1076s x1.00 from start)
    * Number of FRI interactions: 1
    * Number of FRI query sets per interaction: 28
    * Total number of FRI queries over all query sets (incl. repeated queries): 952
  (leave) Check LDT verifier predicate       	[0.4585s x1.00]	(47.5661s x1.00 from start)
  * IOP transcript valid: true
  * Full protocol decision predicate satisfied: true
(leave) Aurora SNARK verifier              	[0.6921s x1.00]	(47.5662s x1.00 from start)


* Verifier satisfied: true

================================================================================

(enter) Check satisfiability of R1CS example	[             ]	(50.9515s x1.00 from start)
(leave) Check satisfiability of R1CS example	[0.0282s x1.00]	(50.9798s x1.00 from start)

* R1CS number of constraints: 262144
* R1CS number of variables: 262143
* R1CS number of variables for primary input: 15
* R1CS number of variables for auxiliary input: 262128
* R1CS size of constraint system (bytes): 20742144
* R1CS size of primary input (bytes): 360
* R1CS size of auxiliary input (bytes): 6291072

(enter) Aurora SNARK prover                	[             ]	(50.9812s x1.00 from start)
  
Aurora SNARK parameters
  * security parameter (bits) = 128
  * RS extra dimensions = 5
  * LDT reducer soundness type = heuristic
  * FRI soundness type = heuristic
  * zero-knowledge = false
  * domain type = multiplicative coset

Aurora IOP parameters
  * target security parameter = 128
  * achieved security parameter = 108.0
  * RS extra dimensions = 5
  * codeword domain dim = 23
  * constraint domain dim = 18
  * variable domain dim = 18
  * query bound = 0
  * make zk = false
  * domain type = multiplicative coset

Multi lincheck parameters
  * target interactive soundness error (bits) = 131
  * achieved interactive soundness error (bits) = 162.0
  * interactive repetitions = 1
  * constraint domain dim = 18
  * make zk = false
  * domain type = multiplicative coset

LDT instance reducer parameters
  * soundness type = heuristic
  * target interactive soundness error (bits) = 131
  * achieved interactive soundness error (bits) = 157.0
  * codeword domain dim = 23
  * max tested degree bound = 262144
  * max constraint degree bound = 524287
  * absolute proximity parameter = 7864320
  * fractional proximity parameter = 0.937500
  * num output LDT instances = 1

FRI parameters
  * soundness type = heuristic
  * target interactive soundness error (bits) = 131
  * achieved interactive soundness error (bits) = 180.0
  * target query soundness error (bits) = 108
  * achieved query soundness error (bits) = 108.0
  * codeword domain dim = 23
  * effective proximity parameter = 0.937500
  * number of interactive repetitions = 1
  * number of query repetitions = 27
  * localization parameter array = { 1 2 2 2 2 2 2 2 2 }
  * number of reductions = 9

BCS parameters
  * digest_len (bytes) = 32
  * digest_len (bits) = 256
  * hash_type = blake2b
  (enter) Submit witness oracles             	[             ]	(51.0077s x1.00 from start)
    (enter) Compute randomized f_w             	[             ]	(51.0077s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(51.0077s x1.00 from start)
        * Vector size: 16
        * Coset size: 16
      (leave) Call to multiplicative_IFFT_wrapper	[0.0000s x1.13]	(51.0078s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(51.0078s x1.00 from start)
        * Vector size: 16
        * Subgroup size: 262144
      (leave) Call to multiplicative_FFT_wrapper 	[0.0317s x1.00]	(51.0395s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(51.0467s x1.00 from start)
        * Vector size: 262144
        * Coset size: 262144
      (leave) Call to multiplicative_IFFT_wrapper	[0.1806s x1.00]	(51.2273s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(51.2462s x1.00 from start)
        * Vector size: 262128
        * Subgroup size: 8388608
      (leave) Call to multiplicative_FFT_wrapper 	[3.7678s x1.00]	(55.0140s x1.00 from start)
    (leave) Compute randomized f_w             	[4.0063s x1.00]	(55.0140s x1.00 from start)
    (enter) Compute A/B/Cz                     	[             ]	(55.0140s x1.00 from start)
    (leave) Compute A/B/Cz                     	[0.0266s x1.00]	(55.0406s x1.00 from start)
    (enter) Compute f_{A/B/Cz} over codeword domain	[             ]	(55.0406s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(55.0415s x1.00 from start)
        * Vector size: 262144
        * Coset size: 262144
      (leave) Call to multiplicative_IFFT_wrapper	[0.1809s x1.00]	(55.2224s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(55.2241s x1.00 from start)
        * Vector size: 262144
        * Coset size: 262144
      (leave) Call to multiplicative_IFFT_wrapper	[0.1807s x1.00]	(55.4048s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(55.4065s x1.00 from start)
        * Vector size: 262144
        * Coset size: 262144
      (leave) Call to multiplicative_IFFT_wrapper	[0.1806s x1.00]	(55.5871s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(55.5888s x1.00 from start)
        * Vector size: 262144
        * Subgroup size: 8388608
      (leave) Call to multiplicative_FFT_wrapper 	[3.5963s x1.00]	(59.1851s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(59.1860s x1.00 from start)
        * Vector size: 262144
        * Subgroup size: 8388608
      (leave) Call to multiplicative_FFT_wrapper 	[3.5835s x1.00]	(62.7696s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(62.7705s x1.00 from start)
        * Vector size: 262144
        * Subgroup size: 8388608
      (leave) Call to multiplicative_FFT_wrapper 	[3.6714s x1.00]	(66.4420s x1.00 from start)
    (leave) Compute f_{A/B/Cz} over codeword domain	[11.4014s x1.00]	(66.4420s x1.00 from start)
    (enter) Call IOP oracle submission routines	[             ]	(66.4420s x1.00 from start)
    (leave) Call IOP oracle submission routines	[0.0000s x1.13]	(66.4420s x1.00 from start)
  (leave) Submit witness oracles             	[15.4343s x1.00]	(66.4420s x1.00 from start)
  (enter) LDT Reducer: Submit masking polynomial	[             ]	(66.4420s x1.00 from start)
  (leave) LDT Reducer: Submit masking polynomial	[0.0000s x1.20]	(66.4420s x1.00 from start)
  (enter) Finish prover round                	[             ]	(66.4420s x1.00 from start)
    (enter) Construct Merkle tree              	[             ]	(66.4420s x1.00 from start)
    (leave) Construct Merkle tree              	[3.1326s x1.00]	(69.5747s x1.00 from start)
  (leave) Finish prover round                	[3.1327s x1.00]	(69.5747s x1.00 from start)
  (enter) pow                                	[             ]	(69.5747s x1.00 from start)
  (leave) pow                                	[0.0000s x1.15]	(69.5747s x1.00 from start)
  (enter) multi_lincheck: Calculate and submit proof	[             ]	(69.5747s x1.00 from start)
    (enter) multi_lincheck compute alpha powers	[             ]	(69.5747s x1.00 from start)
    (leave) multi_lincheck compute alpha powers	[0.0080s x1.00]	(69.5827s x1.00 from start)
    (enter) multi_lincheck compute p_alpha_prime	[             ]	(69.5827s x1.00 from start)
    (leave) multi_lincheck compute p_alpha_prime	[0.0065s x1.00]	(69.5892s x1.00 from start)
    (enter) multi_lincheck compute p_alpha_ABC 	[             ]	(69.5892s x1.00 from start)
    (leave) multi_lincheck compute p_alpha_ABC 	[0.0866s x1.00]	(69.6758s x1.00 from start)
    (enter) multi_lincheck IFFT p_alphas       	[             ]	(69.6758s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(69.6807s x1.00 from start)
        * Vector size: 262144
        * Coset size: 262144
      (leave) Call to multiplicative_IFFT_wrapper	[0.1858s x1.00]	(69.8665s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(69.8704s x1.00 from start)
        * Vector size: 262144
        * Coset size: 262144
      (leave) Call to multiplicative_IFFT_wrapper	[0.1831s x1.00]	(70.0535s x1.00 from start)
    (leave) multi_lincheck IFFT p_alphas       	[0.3801s x1.00]	(70.0559s x1.00 from start)
    (enter) fz evaluated contents              	[             ]	(70.0559s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(70.1572s x1.00 from start)
        * Vector size: 16
        * Coset size: 16
      (leave) Call to multiplicative_IFFT_wrapper	[0.0000s x0.99]	(70.1573s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(70.1573s x1.00 from start)
        * Vector size: 16
        * Subgroup size: 8388608
      (leave) Call to multiplicative_FFT_wrapper 	[0.9027s x1.00]	(71.0600s x1.00 from start)
    (leave) fz evaluated contents              	[1.3550s x1.00]	(71.4109s x1.00 from start)
    (enter) multi_lincheck evaluated contents  	[             ]	(71.4212s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(71.4221s x1.00 from start)
        * Vector size: 262144
        * Subgroup size: 8388608
      (leave) Call to multiplicative_FFT_wrapper 	[3.5753s x1.00]	(74.9974s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(74.9984s x1.00 from start)
        * Vector size: 262144
        * Subgroup size: 8388608
      (leave) Call to multiplicative_FFT_wrapper 	[3.6361s x1.00]	(78.6344s x1.00 from start)
    (leave) multi_lincheck evaluated contents  	[8.7163s x1.00]	(80.1375s x1.00 from start)
    (enter) Call to multiplicative_IFFT_wrapper	[             ]	(80.5000s x1.00 from start)
      * Vector size: 524288
      * Coset size: 524288
    (leave) Call to multiplicative_IFFT_wrapper	[0.4100s x1.00]	(80.9100s x1.00 from start)
    (enter) Call to multiplicative_FFT_wrapper 	[             ]	(80.9419s x1.00 from start)
      * Vector size: 262143
      * Subgroup size: 8388608
    (leave) Call to multiplicative_FFT_wrapper 	[3.6340s x1.00]	(84.5759s x1.00 from start)
  (leave) multi_lincheck: Calculate and submit proof	[15.0012s x1.00]	(84.5759s x1.00 from start)
  (enter) Finish prover round                	[             ]	(84.5759s x1.00 from start)
    (enter) Construct Merkle tree              	[             ]	(84.5759s x1.00 from start)
    (leave) Construct Merkle tree              	[2.4636s x1.00]	(87.0396s x1.00 from start)
  (leave) Finish prover round                	[2.4637s x1.00]	(87.0396s x1.00 from start)
  (enter) pow                                	[             ]	(87.0396s x1.00 from start)
  (leave) pow                                	[0.0000s x1.16]	(87.0396s x1.00 from start)
  (enter) LDT Reducer: Calculate and submit proof	[             ]	(87.0396s x1.00 from start)
    (enter) Sumcheck: g evaluated contents     	[             ]	(87.0396s x1.00 from start)
    (leave) Sumcheck: g evaluated contents     	[0.8386s x1.00]	(87.8783s x1.00 from start)
    (enter) rowcheck evaluated contents        	[             ]	(87.8835s x1.00 from start)
    (leave) rowcheck evaluated contents        	[0.6134s x1.00]	(88.4969s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(91.5391s x1.00 from start)
    (leave) evaluating next FRI codeword       	[1.4490s x1.00]	(92.9881s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(93.0258s x1.00 from start)
      (enter) Finish prover round                	[             ]	(93.0258s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(93.0258s x1.00 from start)
        (leave) Construct Merkle tree              	[0.6469s x1.00]	(93.6727s x1.00 from start)
      (leave) Finish prover round                	[0.6469s x1.00]	(93.6727s x1.00 from start)
      (enter) pow                                	[             ]	(93.6727s x1.00 from start)
      (leave) pow                                	[0.0000s x1.05]	(93.6727s x1.00 from start)
    (leave) LDT signal prover round done       	[0.6470s x1.00]	(93.6728s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(93.6728s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.6267s x1.00]	(94.2995s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(94.3033s x1.00 from start)
      (enter) Finish prover round                	[             ]	(94.3033s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(94.3033s x1.00 from start)
        (leave) Construct Merkle tree              	[0.1624s x1.00]	(94.4657s x1.00 from start)
      (leave) Finish prover round                	[0.1624s x1.00]	(94.4657s x1.00 from start)
      (enter) pow                                	[             ]	(94.4657s x1.00 from start)
      (leave) pow                                	[0.0000s x1.19]	(94.4657s x1.00 from start)
    (leave) LDT signal prover round done       	[0.1625s x1.00]	(94.4657s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(94.4658s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.1548s x1.00]	(94.6206s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(94.6215s x1.00 from start)
      (enter) Finish prover round                	[             ]	(94.6215s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(94.6215s x1.00 from start)
        (leave) Construct Merkle tree              	[0.0375s x1.00]	(94.6589s x1.00 from start)
      (leave) Finish prover round                	[0.0375s x1.00]	(94.6590s x1.00 from start)
      (enter) pow                                	[             ]	(94.6590s x1.00 from start)
      (leave) pow                                	[0.0000s x1.10]	(94.6590s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0375s x1.00]	(94.6590s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(94.6590s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0366s x1.00]	(94.6955s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(94.6957s x1.00 from start)
      (enter) Finish prover round                	[             ]	(94.6957s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(94.6957s x1.00 from start)
        (leave) Construct Merkle tree              	[0.0093s x1.00]	(94.7051s x1.00 from start)
      (leave) Finish prover round                	[0.0094s x1.00]	(94.7051s x1.00 from start)
      (enter) pow                                	[             ]	(94.7051s x1.00 from start)
      (leave) pow                                	[0.0000s x1.11]	(94.7051s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0094s x1.00]	(94.7051s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(94.7051s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0086s x1.00]	(94.7137s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(94.7138s x1.00 from start)
      (enter) Finish prover round                	[             ]	(94.7138s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(94.7138s x1.00 from start)
        (leave) Construct Merkle tree              	[0.0023s x1.00]	(94.7161s x1.00 from start)
      (leave) Finish prover round                	[0.0023s x1.00]	(94.7161s x1.00 from start)
      (enter) pow                                	[             ]	(94.7161s x1.00 from start)
      (leave) pow                                	[0.0000s x1.20]	(94.7161s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0024s x1.00]	(94.7161s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(94.7161s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0021s x1.00]	(94.7182s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(94.7182s x1.00 from start)
      (enter) Finish prover round                	[             ]	(94.7182s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(94.7182s x1.00 from start)
        (leave) Construct Merkle tree              	[0.0006s x1.00]	(94.7188s x1.00 from start)
      (leave) Finish prover round                	[0.0006s x1.00]	(94.7188s x1.00 from start)
      (enter) pow                                	[             ]	(94.7188s x1.00 from start)
      (leave) pow                                	[0.0000s x1.08]	(94.7188s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0006s x1.00]	(94.7188s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(94.7188s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0005s x1.00]	(94.7194s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(94.7194s x1.00 from start)
      (enter) Finish prover round                	[             ]	(94.7194s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(94.7194s x1.00 from start)
        (leave) Construct Merkle tree              	[0.0002s x1.00]	(94.7195s x1.00 from start)
      (leave) Finish prover round                	[0.0002s x1.00]	(94.7195s x1.00 from start)
      (enter) pow                                	[             ]	(94.7195s x1.00 from start)
      (leave) pow                                	[0.0000s x1.03]	(94.7195s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0002s x1.00]	(94.7195s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(94.7196s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0001s x1.00]	(94.7197s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(94.7197s x1.00 from start)
      (enter) Finish prover round                	[             ]	(94.7197s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(94.7197s x1.00 from start)
        (leave) Construct Merkle tree              	[0.0000s x1.00]	(94.7198s x1.00 from start)
      (leave) Finish prover round                	[0.0001s x1.00]	(94.7198s x1.00 from start)
      (enter) pow                                	[             ]	(94.7198s x1.00 from start)
      (leave) pow                                	[0.0000s x1.03]	(94.7198s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0001s x1.00]	(94.7198s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(94.7198s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0000s x1.00]	(94.7198s x1.00 from start)
    (enter) Call to multiplicative_IFFT_wrapper	[             ]	(94.7198s x1.00 from start)
      * Vector size: 64
      * Coset size: 64
    (leave) Call to multiplicative_IFFT_wrapper	[0.0000s x1.01]	(94.7198s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(94.7199s x1.00 from start)
      (enter) Finish prover round                	[             ]	(94.7199s x1.00 from start)
      (leave) Finish prover round                	[0.0000s x1.01]	(94.7199s x1.00 from start)
      (enter) pow                                	[             ]	(94.7199s x1.00 from start)
      (leave) pow                                	[0.9276s x1.00]	(95.6475s x1.00 from start)
    (leave) LDT signal prover round done       	[0.9277s x1.00]	(95.6475s x1.00 from start)
  (leave) LDT Reducer: Calculate and submit proof	[8.6134s x1.00]	(95.6530s x1.00 from start)
  (enter) Obtain transcript                  	[             ]	(95.6530s x1.00 from start)
  (leave) Obtain transcript                  	[0.8827s x1.00]	(96.5357s x1.00 from start)
  * Total size of proof oracles (bytes): 1140848640
  * Total size of Merkle tree (bytes): 626347712
  * Total size of prover state (bytes): 1767196352
(leave) Aurora SNARK prover                	[45.5546s x1.00]	(96.5358s x1.00 from start)

BCS parameters
* digest_len (bytes) = 32
* digest_len (bits) = 256
* hash_type = blake2b
(enter) verifier_seal_interaction_registrations	[             ]	(96.9845s x1.00 from start)
(leave) verifier_seal_interaction_registrations	[0.0015s x1.00]	(96.9860s x1.00 from start)

* Argument size in bytes (IOP): 25116
* Argument size in bytes (BCS): 81824
* Argument size in bytes (total): 106940

If we were to remove pruning of authentication paths in BCS,
the argument would have the following sizes:
* Argument size in bytes (BCS, no pruning): 125792
* Argument size in bytes (total, no pruning): 150908

total prover messages size: 46
total two to one hashes: 2795
total leaves hashed: 1090
total hashes: 3885

Transcript info by round
Per round IOP sizes don't include prover messages

round 0
MT_depth 22
IOP size: 4968 bytes
BCS size: 14528 bytes
number of two to one hashes: 479
number of leaves hashed: 216
oracles in round: fw, fAz, fBz, fCz, 

round 1
MT_depth 22
IOP size: 1242 bytes
BCS size: 14528 bytes
number of two to one hashes: 479
number of leaves hashed: 54
oracles in round: sumcheck h, 

round 2
MT_depth 20
IOP size: 2484 bytes
BCS size: 12768 bytes
number of two to one hashes: 424
number of leaves hashed: 108
oracles in round: TODO: Fill in this name (batching.tcc), 

round 3
MT_depth 18
IOP size: 2484 bytes
BCS size: 10688 bytes
number of two to one hashes: 359
number of leaves hashed: 108
oracles in round: TODO: Fill in this name (batching.tcc), 

round 4
MT_depth 16
IOP size: 2484 bytes
BCS size: 9088 bytes
number of two to one hashes: 309
number of leaves hashed: 108
oracles in round: TODO: Fill in this name (batching.tcc), 

round 5
MT_depth 14
IOP size: 2484 bytes
BCS size: 7392 bytes
number of two to one hashes: 256
number of leaves hashed: 108
oracles in round: TODO: Fill in this name (batching.tcc), 

round 6
MT_depth 12
IOP size: 2484 bytes
BCS size: 5760 bytes
number of two to one hashes: 205
number of leaves hashed: 108
oracles in round: TODO: Fill in this name (batching.tcc), 

round 7
MT_depth 10
IOP size: 2392 bytes
BCS size: 3776 bytes
number of two to one hashes: 142
number of leaves hashed: 104
oracles in round: TODO: Fill in this name (batching.tcc), 

round 8
MT_depth 8
IOP size: 2208 bytes
BCS size: 2368 bytes
number of two to one hashes: 96
number of leaves hashed: 96
oracles in round: TODO: Fill in this name (batching.tcc), 

round 9
MT_depth 6
IOP size: 1840 bytes
BCS size: 896 bytes
number of two to one hashes: 46
number of leaves hashed: 80
oracles in round: TODO: Fill in this name (batching.tcc), 


(enter) Aurora SNARK verifier              	[             ]	(97.0184s x1.00 from start)
  
Aurora SNARK parameters
  * security parameter (bits) = 128
  * RS extra dimensions = 5
  * LDT reducer soundness type = heuristic
  * FRI soundness type = heuristic
  * zero-knowledge = false
  * domain type = multiplicative coset

Aurora IOP parameters
  * target security parameter = 128
  * achieved security parameter = 108.0
  * RS extra dimensions = 5
  * codeword domain dim = 23
  * constraint domain dim = 18
  * variable domain dim = 18
  * query bound = 0
  * make zk = false
  * domain type = multiplicative coset

Multi lincheck parameters
  * target interactive soundness error (bits) = 131
  * achieved interactive soundness error (bits) = 162.0
  * interactive repetitions = 1
  * constraint domain dim = 18
  * make zk = false
  * domain type = multiplicative coset

LDT instance reducer parameters
  * soundness type = heuristic
  * target interactive soundness error (bits) = 131
  * achieved interactive soundness error (bits) = 157.0
  * codeword domain dim = 23
  * max tested degree bound = 262144
  * max constraint degree bound = 524287
  * absolute proximity parameter = 7864320
  * fractional proximity parameter = 0.937500
  * num output LDT instances = 1

FRI parameters
  * soundness type = heuristic
  * target interactive soundness error (bits) = 131
  * achieved interactive soundness error (bits) = 180.0
  * target query soundness error (bits) = 108
  * achieved query soundness error (bits) = 108.0
  * codeword domain dim = 23
  * effective proximity parameter = 0.937500
  * number of interactive repetitions = 1
  * number of query repetitions = 27
  * localization parameter array = { 1 2 2 2 2 2 2 2 2 }
  * number of reductions = 9

BCS parameters
  * digest_len (bytes) = 32
  * digest_len (bits) = 256
  * hash_type = blake2b
  (enter) Aurora IOP protocol initialization and registration	[             ]	(97.0186s x1.00 from start)
    (enter) verifier_seal_interaction_registrations	[             ]	(97.0447s x1.00 from start)
    (leave) verifier_seal_interaction_registrations	[0.0014s x1.00]	(97.0462s x1.00 from start)
  (leave) Aurora IOP protocol initialization and registration	[0.0278s x1.00]	(97.0464s x1.00 from start)
  (enter) Check semantic validity of IOP transcript	[             ]	(97.0464s x1.00 from start)
  (leave) Check semantic validity of IOP transcript	[0.0000s x1.07]	(97.0464s x1.00 from start)
  (enter) Construct R1CS verifier state      	[             ]	(97.0464s x1.00 from start)
    (enter) multi_lincheck compute alpha powers	[             ]	(97.0464s x1.00 from start)
    (leave) multi_lincheck compute alpha powers	[0.0065s x1.00]	(97.0529s x1.00 from start)
    (enter) multi_lincheck compute p_alpha_prime	[             ]	(97.0529s x1.00 from start)
    (leave) multi_lincheck compute p_alpha_prime	[0.0048s x1.00]	(97.0577s x1.00 from start)
    (enter) multi_lincheck compute p_alpha_ABC 	[             ]	(97.0577s x1.00 from start)
    (leave) multi_lincheck compute p_alpha_ABC 	[0.0828s x1.00]	(97.1405s x1.00 from start)
    (enter) multi_lincheck IFFT p_alphas       	[             ]	(97.1405s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(97.1413s x1.00 from start)
        * Vector size: 262144
        * Coset size: 262144
      (leave) Call to multiplicative_IFFT_wrapper	[0.1805s x1.00]	(97.3218s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(97.3235s x1.00 from start)
        * Vector size: 262144
        * Coset size: 262144
      (leave) Call to multiplicative_IFFT_wrapper	[0.1802s x1.00]	(97.5036s x1.00 from start)
    (leave) multi_lincheck IFFT p_alphas       	[0.3640s x1.00]	(97.5044s x1.00 from start)
  (leave) Construct R1CS verifier state      	[0.4581s x1.00]	(97.5045s x1.00 from start)
  (enter) Check LDT verifier predicate       	[             ]	(97.5045s x1.00 from start)
    * Number of FRI interactions: 1
    * Number of FRI query sets per interaction: 27
    * Total number of FRI queries over all query sets (incl. repeated queries): 918
  (leave) Check LDT verifier predicate       	[0.8811s x1.00]	(98.3856s x1.00 from start)
  * IOP transcript valid: true
  * Full protocol decision predicate satisfied: true
(leave) Aurora SNARK verifier              	[1.3672s x1.00]	(98.3856s x1.00 from start)


* Verifier satisfied: true

================================================================================

(enter) Check satisfiability of R1CS example	[             ]	(105.1714s x1.00 from start)
(leave) Check satisfiability of R1CS example	[0.0569s x1.00]	(105.2283s x1.00 from start)

* R1CS number of constraints: 524288
* R1CS number of variables: 524287
* R1CS number of variables for primary input: 15
* R1CS number of variables for auxiliary input: 524272
* R1CS size of constraint system (bytes): 41680896
* R1CS size of primary input (bytes): 360
* R1CS size of auxiliary input (bytes): 12582528

(enter) Aurora SNARK prover                	[             ]	(105.2310s x1.00 from start)
  
Aurora SNARK parameters
  * security parameter (bits) = 128
  * RS extra dimensions = 5
  * LDT reducer soundness type = heuristic
  * FRI soundness type = heuristic
  * zero-knowledge = false
  * domain type = multiplicative coset

Aurora IOP parameters
  * target security parameter = 128
  * achieved security parameter = 108.0
  * RS extra dimensions = 5
  * codeword domain dim = 24
  * constraint domain dim = 19
  * variable domain dim = 19
  * query bound = 0
  * make zk = false
  * domain type = multiplicative coset

Multi lincheck parameters
  * target interactive soundness error (bits) = 131
  * achieved interactive soundness error (bits) = 161.0
  * interactive repetitions = 1
  * constraint domain dim = 19
  * make zk = false
  * domain type = multiplicative coset

LDT instance reducer parameters
  * soundness type = heuristic
  * target interactive soundness error (bits) = 131
  * achieved interactive soundness error (bits) = 156.0
  * codeword domain dim = 24
  * max tested degree bound = 524288
  * max constraint degree bound = 1048575
  * absolute proximity parameter = 15728640
  * fractional proximity parameter = 0.937500
  * num output LDT instances = 1

FRI parameters
  * soundness type = heuristic
  * target interactive soundness error (bits) = 131
  * achieved interactive soundness error (bits) = 180.0
  * target query soundness error (bits) = 107
  * achieved query soundness error (bits) = 108.0
  * codeword domain dim = 24
  * effective proximity parameter = 0.937500
  * number of interactive repetitions = 1
  * number of query repetitions = 27
  * localization parameter array = { 1 2 2 2 2 2 2 2 2 2 }
  * number of reductions = 10

BCS parameters
  * digest_len (bytes) = 32
  * digest_len (bits) = 256
  * hash_type = blake2b
  (enter) Submit witness oracles             	[             ]	(105.2830s x1.00 from start)
    (enter) Compute randomized f_w             	[             ]	(105.2830s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(105.2830s x1.00 from start)
        * Vector size: 16
        * Coset size: 16
      (leave) Call to multiplicative_IFFT_wrapper	[0.0000s x1.07]	(105.2830s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(105.2830s x1.00 from start)
        * Vector size: 16
        * Subgroup size: 524288
      (leave) Call to multiplicative_FFT_wrapper 	[0.0637s x1.00]	(105.3467s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(105.3658s x1.00 from start)
        * Vector size: 524288
        * Coset size: 524288
      (leave) Call to multiplicative_IFFT_wrapper	[0.3910s x1.00]	(105.7568s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(105.7973s x1.00 from start)
        * Vector size: 524272
        * Subgroup size: 16777216
      (leave) Call to multiplicative_FFT_wrapper 	[8.1373s x1.00]	(113.9346s x1.00 from start)
    (leave) Compute randomized f_w             	[8.6517s x1.00]	(113.9347s x1.00 from start)
    (enter) Compute A/B/Cz                     	[             ]	(113.9347s x1.00 from start)
    (leave) Compute A/B/Cz                     	[0.0541s x1.00]	(113.9888s x1.00 from start)
    (enter) Compute f_{A/B/Cz} over codeword domain	[             ]	(113.9888s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(113.9907s x1.00 from start)
        * Vector size: 524288
        * Coset size: 524288
      (leave) Call to multiplicative_IFFT_wrapper	[0.3840s x1.00]	(114.3747s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(114.3781s x1.00 from start)
        * Vector size: 524288
        * Coset size: 524288
      (leave) Call to multiplicative_IFFT_wrapper	[0.3801s x1.00]	(114.7582s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(114.7619s x1.00 from start)
        * Vector size: 524288
        * Coset size: 524288
      (leave) Call to multiplicative_IFFT_wrapper	[0.3797s x1.00]	(115.1416s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(115.1451s x1.00 from start)
        * Vector size: 524288
        * Subgroup size: 16777216
      (leave) Call to multiplicative_FFT_wrapper 	[7.8666s x1.00]	(123.0117s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(123.0136s x1.00 from start)
        * Vector size: 524288
        * Subgroup size: 16777216
      (leave) Call to multiplicative_FFT_wrapper 	[8.1133s x1.00]	(131.1269s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(131.1288s x1.00 from start)
        * Vector size: 524288
        * Subgroup size: 16777216
      (leave) Call to multiplicative_FFT_wrapper 	[8.1024s x1.00]	(139.2312s x1.00 from start)
    (leave) Compute f_{A/B/Cz} over codeword domain	[25.2425s x1.00]	(139.2313s x1.00 from start)
    (enter) Call IOP oracle submission routines	[             ]	(139.2313s x1.00 from start)
    (leave) Call IOP oracle submission routines	[0.0000s x1.09]	(139.2313s x1.00 from start)
  (leave) Submit witness oracles             	[33.9483s x1.00]	(139.2313s x1.00 from start)
  (enter) LDT Reducer: Submit masking polynomial	[             ]	(139.2313s x1.00 from start)
  (leave) LDT Reducer: Submit masking polynomial	[0.0000s x1.23]	(139.2313s x1.00 from start)
  (enter) Finish prover round                	[             ]	(139.2313s x1.00 from start)
    (enter) Construct Merkle tree              	[             ]	(139.2313s x1.00 from start)
    (leave) Construct Merkle tree              	[6.1397s x1.00]	(145.3710s x1.00 from start)
  (leave) Finish prover round                	[6.1398s x1.00]	(145.3711s x1.00 from start)
  (enter) pow                                	[             ]	(145.3711s x1.00 from start)
  (leave) pow                                	[0.0000s x1.12]	(145.3711s x1.00 from start)
  (enter) multi_lincheck: Calculate and submit proof	[             ]	(145.3711s x1.00 from start)
    (enter) multi_lincheck compute alpha powers	[             ]	(145.3711s x1.00 from start)
    (leave) multi_lincheck compute alpha powers	[0.0159s x1.00]	(145.3870s x1.00 from start)
    (enter) multi_lincheck compute p_alpha_prime	[             ]	(145.3870s x1.00 from start)
    (leave) multi_lincheck compute p_alpha_prime	[0.0133s x1.00]	(145.4003s x1.00 from start)
    (enter) multi_lincheck compute p_alpha_ABC 	[             ]	(145.4004s x1.00 from start)
    (leave) multi_lincheck compute p_alpha_ABC 	[0.1690s x1.00]	(145.5694s x1.00 from start)
    (enter) multi_lincheck IFFT p_alphas       	[             ]	(145.5694s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(145.5791s x1.00 from start)
        * Vector size: 524288
        * Coset size: 524288
      (leave) Call to multiplicative_IFFT_wrapper	[0.3940s x1.00]	(145.9731s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(145.9830s x1.00 from start)
        * Vector size: 524288
        * Coset size: 524288
      (leave) Call to multiplicative_IFFT_wrapper	[0.3888s x1.00]	(146.3718s x1.00 from start)
    (leave) multi_lincheck IFFT p_alphas       	[0.8070s x1.00]	(146.3764s x1.00 from start)
    (enter) fz evaluated contents              	[             ]	(146.3765s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(146.5824s x1.00 from start)
        * Vector size: 16
        * Coset size: 16
      (leave) Call to multiplicative_IFFT_wrapper	[0.0000s x0.98]	(146.5825s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(146.5825s x1.00 from start)
        * Vector size: 16
        * Subgroup size: 16777216
      (leave) Call to multiplicative_FFT_wrapper 	[1.9026s x1.00]	(148.4851s x1.00 from start)
    (leave) fz evaluated contents              	[2.8117s x1.00]	(149.1882s x1.00 from start)
    (enter) multi_lincheck evaluated contents  	[             ]	(149.2105s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(149.2124s x1.00 from start)
        * Vector size: 524288
        * Subgroup size: 16777216
      (leave) Call to multiplicative_FFT_wrapper 	[7.8378s x1.00]	(157.0501s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(157.0520s x1.00 from start)
        * Vector size: 524288
        * Subgroup size: 16777216
      (leave) Call to multiplicative_FFT_wrapper 	[7.9950s x1.00]	(165.0471s x1.00 from start)
    (leave) multi_lincheck evaluated contents  	[18.9213s x1.00]	(168.1318s x1.00 from start)
    (enter) Call to multiplicative_IFFT_wrapper	[             ]	(168.8742s x1.00 from start)
      * Vector size: 1048576
      * Coset size: 1048576
    (leave) Call to multiplicative_IFFT_wrapper	[0.8719s x1.00]	(169.7461s x1.00 from start)
    (enter) Call to multiplicative_FFT_wrapper 	[             ]	(169.8096s x1.00 from start)
      * Vector size: 524287
      * Subgroup size: 16777216
    (leave) Call to multiplicative_FFT_wrapper 	[7.9626s x1.00]	(177.7722s x1.00 from start)
  (leave) multi_lincheck: Calculate and submit proof	[32.4012s x1.00]	(177.7723s x1.00 from start)
  (enter) Finish prover round                	[             ]	(177.7723s x1.00 from start)
    (enter) Construct Merkle tree              	[             ]	(177.7723s x1.00 from start)
    (leave) Construct Merkle tree              	[4.9428s x1.00]	(182.7151s x1.00 from start)
  (leave) Finish prover round                	[4.9429s x1.00]	(182.7152s x1.00 from start)
  (enter) pow                                	[             ]	(182.7152s x1.00 from start)
  (leave) pow                                	[0.0000s x1.05]	(182.7152s x1.00 from start)
  (enter) LDT Reducer: Calculate and submit proof	[             ]	(182.7152s x1.00 from start)
    (enter) Sumcheck: g evaluated contents     	[             ]	(182.7152s x1.00 from start)
    (leave) Sumcheck: g evaluated contents     	[1.6802s x1.00]	(184.3954s x1.00 from start)
    (enter) rowcheck evaluated contents        	[             ]	(184.4058s x1.00 from start)
    (leave) rowcheck evaluated contents        	[1.2379s x1.00]	(185.6437s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(191.7697s x1.00 from start)
    (leave) evaluating next FRI codeword       	[2.9029s x1.00]	(194.6726s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(194.7483s x1.00 from start)
      (enter) Finish prover round                	[             ]	(194.7484s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(194.7484s x1.00 from start)
        (leave) Construct Merkle tree              	[1.2927s x1.00]	(196.0411s x1.00 from start)
      (leave) Finish prover round                	[1.2928s x1.00]	(196.0412s x1.00 from start)
      (enter) pow                                	[             ]	(196.0412s x1.00 from start)
      (leave) pow                                	[0.0000s x1.19]	(196.0412s x1.00 from start)
    (leave) LDT signal prover round done       	[1.2928s x1.00]	(196.0412s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(196.0412s x1.00 from start)
    (leave) evaluating next FRI codeword       	[1.2660s x1.00]	(197.3072s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(197.3262s x1.00 from start)
      (enter) Finish prover round                	[             ]	(197.3262s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(197.3262s x1.00 from start)
        (leave) Construct Merkle tree              	[0.3221s x1.00]	(197.6483s x1.00 from start)
      (leave) Finish prover round                	[0.3222s x1.00]	(197.6484s x1.00 from start)
      (enter) pow                                	[             ]	(197.6484s x1.00 from start)
      (leave) pow                                	[0.0000s x1.13]	(197.6484s x1.00 from start)
    (leave) LDT signal prover round done       	[0.3222s x1.00]	(197.6484s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(197.6484s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.3155s x1.00]	(197.9638s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(197.9657s x1.00 from start)
      (enter) Finish prover round                	[             ]	(197.9657s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(197.9657s x1.00 from start)
        (leave) Construct Merkle tree              	[0.0805s x1.00]	(198.0462s x1.00 from start)
      (leave) Finish prover round                	[0.0806s x1.00]	(198.0463s x1.00 from start)
      (enter) pow                                	[             ]	(198.0463s x1.00 from start)
      (leave) pow                                	[0.0000s x1.12]	(198.0463s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0806s x1.00]	(198.0463s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(198.0463s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0766s x1.00]	(198.1229s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(198.1234s x1.00 from start)
      (enter) Finish prover round                	[             ]	(198.1234s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(198.1234s x1.00 from start)
        (leave) Construct Merkle tree              	[0.0186s x1.00]	(198.1420s x1.00 from start)
      (leave) Finish prover round                	[0.0186s x1.00]	(198.1420s x1.00 from start)
      (enter) pow                                	[             ]	(198.1420s x1.00 from start)
      (leave) pow                                	[0.0000s x1.14]	(198.1420s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0187s x1.00]	(198.1420s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(198.1420s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0171s x1.00]	(198.1592s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(198.1593s x1.00 from start)
      (enter) Finish prover round                	[             ]	(198.1593s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(198.1593s x1.00 from start)
        (leave) Construct Merkle tree              	[0.0047s x1.00]	(198.1639s x1.00 from start)
      (leave) Finish prover round                	[0.0047s x1.00]	(198.1639s x1.00 from start)
      (enter) pow                                	[             ]	(198.1639s x1.00 from start)
      (leave) pow                                	[0.0000s x1.13]	(198.1639s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0047s x1.00]	(198.1639s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(198.1640s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0042s x1.00]	(198.1681s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(198.1682s x1.00 from start)
      (enter) Finish prover round                	[             ]	(198.1682s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(198.1682s x1.00 from start)
        (leave) Construct Merkle tree              	[0.0012s x1.00]	(198.1693s x1.00 from start)
      (leave) Finish prover round                	[0.0012s x1.00]	(198.1693s x1.00 from start)
      (enter) pow                                	[             ]	(198.1693s x1.00 from start)
      (leave) pow                                	[0.0000s x1.06]	(198.1694s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0012s x1.00]	(198.1694s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(198.1694s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0011s x1.00]	(198.1704s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(198.1704s x1.00 from start)
      (enter) Finish prover round                	[             ]	(198.1704s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(198.1704s x1.00 from start)
        (leave) Construct Merkle tree              	[0.0003s x1.00]	(198.1707s x1.00 from start)
      (leave) Finish prover round                	[0.0003s x1.00]	(198.1707s x1.00 from start)
      (enter) pow                                	[             ]	(198.1707s x1.00 from start)
      (leave) pow                                	[0.0000s x1.07]	(198.1707s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0003s x1.00]	(198.1707s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(198.1708s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0003s x1.00]	(198.1710s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(198.1710s x1.00 from start)
      (enter) Finish prover round                	[             ]	(198.1710s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(198.1710s x1.00 from start)
        (leave) Construct Merkle tree              	[0.0001s x1.00]	(198.1711s x1.00 from start)
      (leave) Finish prover round                	[0.0001s x1.00]	(198.1711s x1.00 from start)
      (enter) pow                                	[             ]	(198.1711s x1.00 from start)
      (leave) pow                                	[0.0000s x1.07]	(198.1711s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0001s x1.00]	(198.1711s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(198.1711s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0001s x1.00]	(198.1712s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(198.1712s x1.00 from start)
      (enter) Finish prover round                	[             ]	(198.1712s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(198.1712s x1.00 from start)
        (leave) Construct Merkle tree              	[0.0000s x1.00]	(198.1713s x1.00 from start)
      (leave) Finish prover round                	[0.0000s x1.00]	(198.1713s x1.00 from start)
      (enter) pow                                	[             ]	(198.1713s x1.00 from start)
      (leave) pow                                	[0.0000s x1.05]	(198.1713s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0000s x1.00]	(198.1713s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(198.1713s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0000s x1.00]	(198.1713s x1.00 from start)
    (enter) Call to multiplicative_IFFT_wrapper	[             ]	(198.1713s x1.00 from start)
      * Vector size: 32
      * Coset size: 32
    (leave) Call to multiplicative_IFFT_wrapper	[0.0000s x1.02]	(198.1713s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(198.1713s x1.00 from start)
      (enter) Finish prover round                	[             ]	(198.1713s x1.00 from start)
      (leave) Finish prover round                	[0.0000s x1.01]	(198.1713s x1.00 from start)
      (enter) pow                                	[             ]	(198.1713s x1.00 from start)
      (leave) pow                                	[1.4369s x1.00]	(199.6083s x1.00 from start)
    (leave) LDT signal prover round done       	[1.4370s x1.00]	(199.6083s x1.00 from start)
  (leave) LDT Reducer: Calculate and submit proof	[16.9053s x1.00]	(199.6205s x1.00 from start)
  (enter) Obtain transcript                  	[             ]	(199.6205s x1.00 from start)
  (leave) Obtain transcript                  	[1.7639s x1.00]	(201.3844s x1.00 from start)
  * Total size of proof oracles (bytes): 2281700352
  * Total size of Merkle tree (bytes): 1252697760
  * Total size of prover state (bytes): 3534398112
(leave) Aurora SNARK prover                	[96.1535s x1.00]	(201.3845s x1.00 from start)

BCS parameters
* digest_len (bytes) = 32
* digest_len (bits) = 256
* hash_type = blake2b
(enter) verifier_seal_interaction_registrations	[             ]	(202.3000s x1.00 from start)
(leave) verifier_seal_interaction_registrations	[0.0016s x1.00]	(202.3016s x1.00 from start)

* Argument size in bytes (IOP): 27761
* Argument size in bytes (BCS): 87808
* Argument size in bytes (total): 115569

If we were to remove pruning of authentication paths in BCS,
the argument would have the following sizes:
* Argument size in bytes (BCS, no pruning): 139712
* Argument size in bytes (total, no pruning): 167473

total prover messages size: 23
total two to one hashes: 3009
total leaves hashed: 1206
total hashes: 4215

Transcript info by round
Per round IOP sizes don't include prover messages

round 0
MT_depth 23
IOP size: 4968 bytes
BCS size: 15040 bytes
number of two to one hashes: 495
number of leaves hashed: 216
oracles in round: fw, fAz, fBz, fCz, 

round 1
MT_depth 23
IOP size: 1242 bytes
BCS size: 15040 bytes
number of two to one hashes: 495
number of leaves hashed: 54
oracles in round: sumcheck h, 

round 2
MT_depth 21
IOP size: 2484 bytes
BCS size: 13344 bytes
number of two to one hashes: 442
number of leaves hashed: 108
oracles in round: TODO: Fill in this name (batching.tcc), 

round 3
MT_depth 19
IOP size: 2484 bytes
BCS size: 11232 bytes
number of two to one hashes: 376
number of leaves hashed: 108
oracles in round: TODO: Fill in this name (batching.tcc), 

round 4
MT_depth 17
IOP size: 2484 bytes
BCS size: 9504 bytes
number of two to one hashes: 322
number of leaves hashed: 108
oracles in round: TODO: Fill in this name (batching.tcc), 

round 5
MT_depth 15
IOP size: 2484 bytes
BCS size: 8128 bytes
number of two to one hashes: 279
number of leaves hashed: 108
oracles in round: TODO: Fill in this name (batching.tcc), 

round 6
MT_depth 13
IOP size: 2484 bytes
BCS size: 6208 bytes
number of two to one hashes: 219
number of leaves hashed: 108
oracles in round: TODO: Fill in this name (batching.tcc), 

round 7
MT_depth 11
IOP size: 2484 bytes
BCS size: 4384 bytes
number of two to one hashes: 162
number of leaves hashed: 108
oracles in round: TODO: Fill in this name (batching.tcc), 

round 8
MT_depth 9
IOP size: 2484 bytes
BCS size: 3008 bytes
number of two to one hashes: 119
number of leaves hashed: 108
oracles in round: TODO: Fill in this name (batching.tcc), 

round 9
MT_depth 7
IOP size: 2392 bytes
BCS size: 1568 bytes
number of two to one hashes: 73
number of leaves hashed: 104
oracles in round: TODO: Fill in this name (batching.tcc), 

round 10
MT_depth 5
IOP size: 1748 bytes
BCS size: 320 bytes
number of two to one hashes: 27
number of leaves hashed: 76
oracles in round: TODO: Fill in this name (batching.tcc), 


(enter) Aurora SNARK verifier              	[             ]	(202.3684s x1.00 from start)
  
Aurora SNARK parameters
  * security parameter (bits) = 128
  * RS extra dimensions = 5
  * LDT reducer soundness type = heuristic
  * FRI soundness type = heuristic
  * zero-knowledge = false
  * domain type = multiplicative coset

Aurora IOP parameters
  * target security parameter = 128
  * achieved security parameter = 108.0
  * RS extra dimensions = 5
  * codeword domain dim = 24
  * constraint domain dim = 19
  * variable domain dim = 19
  * query bound = 0
  * make zk = false
  * domain type = multiplicative coset

Multi lincheck parameters
  * target interactive soundness error (bits) = 131
  * achieved interactive soundness error (bits) = 161.0
  * interactive repetitions = 1
  * constraint domain dim = 19
  * make zk = false
  * domain type = multiplicative coset

LDT instance reducer parameters
  * soundness type = heuristic
  * target interactive soundness error (bits) = 131
  * achieved interactive soundness error (bits) = 156.0
  * codeword domain dim = 24
  * max tested degree bound = 524288
  * max constraint degree bound = 1048575
  * absolute proximity parameter = 15728640
  * fractional proximity parameter = 0.937500
  * num output LDT instances = 1

FRI parameters
  * soundness type = heuristic
  * target interactive soundness error (bits) = 131
  * achieved interactive soundness error (bits) = 180.0
  * target query soundness error (bits) = 107
  * achieved query soundness error (bits) = 108.0
  * codeword domain dim = 24
  * effective proximity parameter = 0.937500
  * number of interactive repetitions = 1
  * number of query repetitions = 27
  * localization parameter array = { 1 2 2 2 2 2 2 2 2 2 }
  * number of reductions = 10

BCS parameters
  * digest_len (bytes) = 32
  * digest_len (bits) = 256
  * hash_type = blake2b
  (enter) Aurora IOP protocol initialization and registration	[             ]	(202.3686s x1.00 from start)
    (enter) verifier_seal_interaction_registrations	[             ]	(202.4208s x1.00 from start)
    (leave) verifier_seal_interaction_registrations	[0.0016s x1.00]	(202.4223s x1.00 from start)
  (leave) Aurora IOP protocol initialization and registration	[0.0539s x1.00]	(202.4226s x1.00 from start)
  (enter) Check semantic validity of IOP transcript	[             ]	(202.4226s x1.00 from start)
  (leave) Check semantic validity of IOP transcript	[0.0000s x1.15]	(202.4226s x1.00 from start)
  (enter) Construct R1CS verifier state      	[             ]	(202.4226s x1.00 from start)
    (enter) multi_lincheck compute alpha powers	[             ]	(202.4226s x1.00 from start)
    (leave) multi_lincheck compute alpha powers	[0.0131s x1.00]	(202.4357s x1.00 from start)
    (enter) multi_lincheck compute p_alpha_prime	[             ]	(202.4357s x1.00 from start)
    (leave) multi_lincheck compute p_alpha_prime	[0.0099s x1.00]	(202.4456s x1.00 from start)
    (enter) multi_lincheck compute p_alpha_ABC 	[             ]	(202.4456s x1.00 from start)
    (leave) multi_lincheck compute p_alpha_ABC 	[0.1695s x1.00]	(202.6151s x1.00 from start)
    (enter) multi_lincheck IFFT p_alphas       	[             ]	(202.6151s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(202.6169s x1.00 from start)
        * Vector size: 524288
        * Coset size: 524288
      (leave) Call to multiplicative_IFFT_wrapper	[0.3832s x1.00]	(203.0000s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(203.0049s x1.00 from start)
        * Vector size: 524288
        * Coset size: 524288
      (leave) Call to multiplicative_IFFT_wrapper	[0.3815s x1.00]	(203.3864s x1.00 from start)
    (leave) multi_lincheck IFFT p_alphas       	[0.7733s x1.00]	(203.3885s x1.00 from start)
  (leave) Construct R1CS verifier state      	[0.9660s x1.00]	(203.3885s x1.00 from start)
  (enter) Check LDT verifier predicate       	[             ]	(203.3885s x1.00 from start)
    * Number of FRI interactions: 1
    * Number of FRI query sets per interaction: 27
    * Total number of FRI queries over all query sets (incl. repeated queries): 1026
  (leave) Check LDT verifier predicate       	[1.7639s x1.00]	(205.1525s x1.00 from start)
  * IOP transcript valid: true
  * Full protocol decision predicate satisfied: true
(leave) Aurora SNARK verifier              	[2.7841s x1.00]	(205.1525s x1.00 from start)


* Verifier satisfied: true

================================================================================

(enter) Check satisfiability of R1CS example	[             ]	(218.7355s x1.00 from start)
(leave) Check satisfiability of R1CS example	[0.1141s x1.00]	(218.8497s x1.00 from start)

* R1CS number of constraints: 1048576
* R1CS number of variables: 1048575
* R1CS number of variables for primary input: 15
* R1CS number of variables for auxiliary input: 1048560
* R1CS size of constraint system (bytes): 83755008
* R1CS size of primary input (bytes): 360
* R1CS size of auxiliary input (bytes): 25165440

(enter) Aurora SNARK prover                	[             ]	(218.8553s x1.00 from start)
  
Aurora SNARK parameters
  * security parameter (bits) = 128
  * RS extra dimensions = 5
  * LDT reducer soundness type = heuristic
  * FRI soundness type = heuristic
  * zero-knowledge = false
  * domain type = multiplicative coset

Aurora IOP parameters
  * target security parameter = 128
  * achieved security parameter = 108.0
  * RS extra dimensions = 5
  * codeword domain dim = 25
  * constraint domain dim = 20
  * variable domain dim = 20
  * query bound = 0
  * make zk = false
  * domain type = multiplicative coset

Multi lincheck parameters
  * target interactive soundness error (bits) = 131
  * achieved interactive soundness error (bits) = 160.0
  * interactive repetitions = 1
  * constraint domain dim = 20
  * make zk = false
  * domain type = multiplicative coset

LDT instance reducer parameters
  * soundness type = heuristic
  * target interactive soundness error (bits) = 131
  * achieved interactive soundness error (bits) = 155.0
  * codeword domain dim = 25
  * max tested degree bound = 1048576
  * max constraint degree bound = 2097151
  * absolute proximity parameter = 31457280
  * fractional proximity parameter = 0.937500
  * num output LDT instances = 1

FRI parameters
  * soundness type = heuristic
  * target interactive soundness error (bits) = 131
  * achieved interactive soundness error (bits) = 180.0
  * target query soundness error (bits) = 106
  * achieved query soundness error (bits) = 108.0
  * codeword domain dim = 25
  * effective proximity parameter = 0.937500
  * number of interactive repetitions = 1
  * number of query repetitions = 27
  * localization parameter array = { 1 2 2 2 2 2 2 2 2 2 }
  * number of reductions = 10

BCS parameters
  * digest_len (bytes) = 32
  * digest_len (bits) = 256
  * hash_type = blake2b
  (enter) Submit witness oracles             	[             ]	(218.9600s x1.00 from start)
    (enter) Compute randomized f_w             	[             ]	(218.9600s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(218.9600s x1.00 from start)
        * Vector size: 16
        * Coset size: 16
      (leave) Call to multiplicative_IFFT_wrapper	[0.0000s x1.12]	(218.9601s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(218.9601s x1.00 from start)
        * Vector size: 16
        * Subgroup size: 1048576
      (leave) Call to multiplicative_FFT_wrapper 	[0.1265s x1.00]	(219.0865s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(219.1171s x1.00 from start)
        * Vector size: 1048576
        * Coset size: 1048576
      (leave) Call to multiplicative_IFFT_wrapper	[0.8138s x1.00]	(219.9308s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(220.0072s x1.00 from start)
        * Vector size: 1048560
        * Subgroup size: 33554432
      (leave) Call to multiplicative_FFT_wrapper 	[17.1745s x1.00]	(237.1817s x1.00 from start)
    (leave) Compute randomized f_w             	[18.2217s x1.00]	(237.1818s x1.00 from start)
    (enter) Compute A/B/Cz                     	[             ]	(237.1818s x1.00 from start)
    (leave) Compute A/B/Cz                     	[0.1052s x1.00]	(237.2870s x1.00 from start)
    (enter) Compute f_{A/B/Cz} over codeword domain	[             ]	(237.2871s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(237.2909s x1.00 from start)
        * Vector size: 1048576
        * Coset size: 1048576
      (leave) Call to multiplicative_IFFT_wrapper	[0.8225s x1.00]	(238.1133s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(238.1228s x1.00 from start)
        * Vector size: 1048576
        * Coset size: 1048576
      (leave) Call to multiplicative_IFFT_wrapper	[0.8179s x1.00]	(238.9407s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(238.9557s x1.00 from start)
        * Vector size: 1048576
        * Coset size: 1048576
      (leave) Call to multiplicative_IFFT_wrapper	[0.8199s x1.00]	(239.7756s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(239.7826s x1.00 from start)
        * Vector size: 1048576
        * Subgroup size: 33554432
      (leave) Call to multiplicative_FFT_wrapper 	[16.7607s x1.00]	(256.5432s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(256.5471s x1.00 from start)
        * Vector size: 1048576
        * Subgroup size: 33554432
      (leave) Call to multiplicative_FFT_wrapper 	[17.1195s x1.00]	(273.6665s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(273.6703s x1.00 from start)
        * Vector size: 1048576
        * Subgroup size: 33554432
      (leave) Call to multiplicative_FFT_wrapper 	[17.0051s x1.00]	(290.6754s x1.00 from start)
    (leave) Compute f_{A/B/Cz} over codeword domain	[53.3884s x1.00]	(290.6754s x1.00 from start)
    (enter) Call IOP oracle submission routines	[             ]	(290.6754s x1.00 from start)
    (leave) Call IOP oracle submission routines	[0.0000s x1.13]	(290.6755s x1.00 from start)
  (leave) Submit witness oracles             	[71.7155s x1.00]	(290.6755s x1.00 from start)
  (enter) LDT Reducer: Submit masking polynomial	[             ]	(290.6755s x1.00 from start)
  (leave) LDT Reducer: Submit masking polynomial	[0.0000s x1.19]	(290.6755s x1.00 from start)
  (enter) Finish prover round                	[             ]	(290.6755s x1.00 from start)
    (enter) Construct Merkle tree              	[             ]	(290.6755s x1.00 from start)
    (leave) Construct Merkle tree              	[12.4102s x1.00]	(303.0857s x1.00 from start)
  (leave) Finish prover round                	[12.4103s x1.00]	(303.0857s x1.00 from start)
  (enter) pow                                	[             ]	(303.0858s x1.00 from start)
  (leave) pow                                	[0.0000s x1.25]	(303.0858s x1.00 from start)
  (enter) multi_lincheck: Calculate and submit proof	[             ]	(303.0858s x1.00 from start)
    (enter) multi_lincheck compute alpha powers	[             ]	(303.0858s x1.00 from start)
    (leave) multi_lincheck compute alpha powers	[0.0318s x1.00]	(303.1176s x1.00 from start)
    (enter) multi_lincheck compute p_alpha_prime	[             ]	(303.1176s x1.00 from start)
    (leave) multi_lincheck compute p_alpha_prime	[0.0277s x1.00]	(303.1453s x1.00 from start)
    (enter) multi_lincheck compute p_alpha_ABC 	[             ]	(303.1453s x1.00 from start)
    (leave) multi_lincheck compute p_alpha_ABC 	[0.3407s x1.00]	(303.4861s x1.00 from start)
    (enter) multi_lincheck IFFT p_alphas       	[             ]	(303.4861s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(303.4979s x1.00 from start)
        * Vector size: 1048576
        * Coset size: 1048576
      (leave) Call to multiplicative_IFFT_wrapper	[0.8348s x1.00]	(304.3327s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(304.3483s x1.00 from start)
        * Vector size: 1048576
        * Coset size: 1048576
      (leave) Call to multiplicative_IFFT_wrapper	[0.8264s x1.00]	(305.1747s x1.00 from start)
    (leave) multi_lincheck IFFT p_alphas       	[1.6981s x1.00]	(305.1842s x1.00 from start)
    (enter) fz evaluated contents              	[             ]	(305.1842s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(305.5989s x1.00 from start)
        * Vector size: 16
        * Coset size: 16
      (leave) Call to multiplicative_IFFT_wrapper	[0.0000s x0.97]	(305.5989s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(305.5989s x1.00 from start)
        * Vector size: 16
        * Subgroup size: 33554432
      (leave) Call to multiplicative_FFT_wrapper 	[3.7321s x1.00]	(309.3310s x1.00 from start)
    (leave) fz evaluated contents              	[5.5528s x1.00]	(310.7370s x1.00 from start)
    (enter) multi_lincheck evaluated contents  	[             ]	(310.7844s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(310.7884s x1.00 from start)
        * Vector size: 1048576
        * Subgroup size: 33554432
      (leave) Call to multiplicative_FFT_wrapper 	[16.6777s x1.00]	(327.4661s x1.00 from start)
      (enter) Call to multiplicative_FFT_wrapper 	[             ]	(327.4700s x1.00 from start)
        * Vector size: 1048576
        * Subgroup size: 33554432
      (leave) Call to multiplicative_FFT_wrapper 	[16.9668s x1.00]	(344.4368s x1.00 from start)
    (leave) multi_lincheck evaluated contents  	[39.6560s x1.00]	(350.4404s x1.00 from start)
    (enter) Call to multiplicative_IFFT_wrapper	[             ]	(351.9044s x1.00 from start)
      * Vector size: 2097152
      * Coset size: 2097152
    (leave) Call to multiplicative_IFFT_wrapper	[1.8396s x1.00]	(353.7440s x1.00 from start)
    (enter) Call to multiplicative_FFT_wrapper 	[             ]	(353.8774s x1.00 from start)
      * Vector size: 1048575
      * Subgroup size: 33554432
    (leave) Call to multiplicative_FFT_wrapper 	[16.7536s x1.00]	(370.6310s x1.00 from start)
  (leave) multi_lincheck: Calculate and submit proof	[67.5453s x1.00]	(370.6311s x1.00 from start)
  (enter) Finish prover round                	[             ]	(370.6311s x1.00 from start)
    (enter) Construct Merkle tree              	[             ]	(370.6311s x1.00 from start)
    (leave) Construct Merkle tree              	[9.8535s x1.00]	(380.4846s x1.00 from start)
  (leave) Finish prover round                	[9.8536s x1.00]	(380.4846s x1.00 from start)
  (enter) pow                                	[             ]	(380.4846s x1.00 from start)
  (leave) pow                                	[0.0000s x1.15]	(380.4846s x1.00 from start)
  (enter) LDT Reducer: Calculate and submit proof	[             ]	(380.4846s x1.00 from start)
    (enter) Sumcheck: g evaluated contents     	[             ]	(380.4846s x1.00 from start)
    (leave) Sumcheck: g evaluated contents     	[3.3574s x1.00]	(383.8420s x1.00 from start)
    (enter) rowcheck evaluated contents        	[             ]	(383.8652s x1.00 from start)
    (leave) rowcheck evaluated contents        	[2.4708s x1.00]	(386.3360s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(398.5011s x1.00 from start)
    (leave) evaluating next FRI codeword       	[5.8176s x1.00]	(404.3186s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(404.4706s x1.00 from start)
      (enter) Finish prover round                	[             ]	(404.4706s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(404.4706s x1.00 from start)
        (leave) Construct Merkle tree              	[2.5874s x1.00]	(407.0580s x1.00 from start)
      (leave) Finish prover round                	[2.5875s x1.00]	(407.0581s x1.00 from start)
      (enter) pow                                	[             ]	(407.0581s x1.00 from start)
      (leave) pow                                	[0.0000s x1.32]	(407.0581s x1.00 from start)
    (leave) LDT signal prover round done       	[2.5875s x1.00]	(407.0581s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(407.0581s x1.00 from start)
    (leave) evaluating next FRI codeword       	[2.5376s x1.00]	(409.5957s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(409.6338s x1.00 from start)
      (enter) Finish prover round                	[             ]	(409.6339s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(409.6339s x1.00 from start)
        (leave) Construct Merkle tree              	[0.6447s x1.00]	(410.2786s x1.00 from start)
      (leave) Finish prover round                	[0.6447s x1.00]	(410.2786s x1.00 from start)
      (enter) pow                                	[             ]	(410.2786s x1.00 from start)
      (leave) pow                                	[0.0000s x1.17]	(410.2786s x1.00 from start)
    (leave) LDT signal prover round done       	[0.6448s x1.00]	(410.2786s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(410.2786s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.6296s x1.00]	(410.9083s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(410.9122s x1.00 from start)
      (enter) Finish prover round                	[             ]	(410.9122s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(410.9122s x1.00 from start)
        (leave) Construct Merkle tree              	[0.1609s x1.00]	(411.0731s x1.00 from start)
      (leave) Finish prover round                	[0.1609s x1.00]	(411.0731s x1.00 from start)
      (enter) pow                                	[             ]	(411.0731s x1.00 from start)
      (leave) pow                                	[0.0000s x1.07]	(411.0731s x1.00 from start)
    (leave) LDT signal prover round done       	[0.1610s x1.00]	(411.0731s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(411.0732s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.1562s x1.00]	(411.2294s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(411.2303s x1.00 from start)
      (enter) Finish prover round                	[             ]	(411.2303s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(411.2303s x1.00 from start)
        (leave) Construct Merkle tree              	[0.0376s x1.00]	(411.2679s x1.00 from start)
      (leave) Finish prover round                	[0.0377s x1.00]	(411.2680s x1.00 from start)
      (enter) pow                                	[             ]	(411.2680s x1.00 from start)
      (leave) pow                                	[0.0000s x1.08]	(411.2680s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0377s x1.00]	(411.2680s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(411.2680s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0367s x1.00]	(411.3047s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(411.3049s x1.00 from start)
      (enter) Finish prover round                	[             ]	(411.3049s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(411.3049s x1.00 from start)
        (leave) Construct Merkle tree              	[0.0093s x1.00]	(411.3142s x1.00 from start)
      (leave) Finish prover round                	[0.0094s x1.00]	(411.3143s x1.00 from start)
      (enter) pow                                	[             ]	(411.3143s x1.00 from start)
      (leave) pow                                	[0.0000s x1.21]	(411.3143s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0094s x1.00]	(411.3143s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(411.3143s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0086s x1.00]	(411.3229s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(411.3229s x1.00 from start)
      (enter) Finish prover round                	[             ]	(411.3229s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(411.3229s x1.00 from start)
        (leave) Construct Merkle tree              	[0.0023s x1.00]	(411.3252s x1.00 from start)
      (leave) Finish prover round                	[0.0023s x1.00]	(411.3252s x1.00 from start)
      (enter) pow                                	[             ]	(411.3253s x1.00 from start)
      (leave) pow                                	[0.0000s x1.32]	(411.3253s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0023s x1.00]	(411.3253s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(411.3253s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0022s x1.00]	(411.3274s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(411.3274s x1.00 from start)
      (enter) Finish prover round                	[             ]	(411.3274s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(411.3274s x1.00 from start)
        (leave) Construct Merkle tree              	[0.0006s x1.00]	(411.3280s x1.00 from start)
      (leave) Finish prover round                	[0.0006s x1.00]	(411.3280s x1.00 from start)
      (enter) pow                                	[             ]	(411.3281s x1.00 from start)
      (leave) pow                                	[0.0000s x1.16]	(411.3281s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0006s x1.00]	(411.3281s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(411.3281s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0005s x1.00]	(411.3286s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(411.3286s x1.00 from start)
      (enter) Finish prover round                	[             ]	(411.3286s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(411.3286s x1.00 from start)
        (leave) Construct Merkle tree              	[0.0002s x1.00]	(411.3288s x1.00 from start)
      (leave) Finish prover round                	[0.0002s x1.00]	(411.3288s x1.00 from start)
      (enter) pow                                	[             ]	(411.3288s x1.00 from start)
      (leave) pow                                	[0.0000s x1.07]	(411.3288s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0002s x1.00]	(411.3288s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(411.3288s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0001s x1.00]	(411.3289s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(411.3289s x1.00 from start)
      (enter) Finish prover round                	[             ]	(411.3289s x1.00 from start)
        (enter) Construct Merkle tree              	[             ]	(411.3289s x1.00 from start)
        (leave) Construct Merkle tree              	[0.0000s x1.00]	(411.3290s x1.00 from start)
      (leave) Finish prover round                	[0.0001s x1.00]	(411.3290s x1.00 from start)
      (enter) pow                                	[             ]	(411.3290s x1.00 from start)
      (leave) pow                                	[0.0000s x1.06]	(411.3290s x1.00 from start)
    (leave) LDT signal prover round done       	[0.0001s x1.00]	(411.3290s x1.00 from start)
    (enter) evaluating next FRI codeword       	[             ]	(411.3290s x1.00 from start)
    (leave) evaluating next FRI codeword       	[0.0000s x1.00]	(411.3291s x1.00 from start)
    (enter) Call to multiplicative_IFFT_wrapper	[             ]	(411.3291s x1.00 from start)
      * Vector size: 64
      * Coset size: 64
    (leave) Call to multiplicative_IFFT_wrapper	[0.0000s x1.00]	(411.3291s x1.00 from start)
    (enter) LDT signal prover round done       	[             ]	(411.3291s x1.00 from start)
      (enter) Finish prover round                	[             ]	(411.3291s x1.00 from start)
      (leave) Finish prover round                	[0.0000s x1.01]	(411.3291s x1.00 from start)
      (enter) pow                                	[             ]	(411.3291s x1.00 from start)
      (leave) pow                                	[1.4375s x1.00]	(412.7667s x1.00 from start)
    (leave) LDT signal prover round done       	[1.4376s x1.00]	(412.7667s x1.00 from start)
  (leave) LDT Reducer: Calculate and submit proof	[32.3066s x1.00]	(412.7912s x1.00 from start)
  (enter) Obtain transcript                  	[             ]	(412.7912s x1.00 from start)
  (leave) Obtain transcript                  	[3.5272s x1.00]	(416.3184s x1.00 from start)
  * Total size of proof oracles (bytes): 4563400704
  * Total size of Merkle tree (bytes): 2505395872
  * Total size of prover state (bytes): 7068796576
(leave) Aurora SNARK prover                	[197.4632s x1.00]	(416.3185s x1.00 from start)

BCS parameters
* digest_len (bytes) = 32
* digest_len (bits) = 256
* hash_type = blake2b
(enter) verifier_seal_interaction_registrations	[             ]	(418.1632s x1.00 from start)
(leave) verifier_seal_interaction_registrations	[0.0017s x1.00]	(418.1649s x1.00 from start)

* Argument size in bytes (IOP): 28428
* Argument size in bytes (BCS): 97824
* Argument size in bytes (total): 126252

If we were to remove pruning of authentication paths in BCS,
the argument would have the following sizes:
* Argument size in bytes (BCS, no pruning): 150336
* Argument size in bytes (total, no pruning): 178764

total prover messages size: 46
total two to one hashes: 3329
total leaves hashed: 1234
total hashes: 4563

Transcript info by round
Per round IOP sizes don't include prover messages

round 0
MT_depth 24
IOP size: 4968 bytes
BCS size: 16160 bytes
number of two to one hashes: 530
number of leaves hashed: 216
oracles in round: fw, fAz, fBz, fCz, 

round 1
MT_depth 24
IOP size: 1242 bytes
BCS size: 16160 bytes
number of two to one hashes: 530
number of leaves hashed: 54
oracles in round: sumcheck h, 

round 2
MT_depth 22
IOP size: 2484 bytes
BCS size: 14208 bytes
number of two to one hashes: 469
number of leaves hashed: 108
oracles in round: TODO: Fill in this name (batching.tcc), 

round 3
MT_depth 20
IOP size: 2484 bytes
BCS size: 12576 bytes
number of two to one hashes: 418
number of leaves hashed: 108
oracles in round: TODO: Fill in this name (batching.tcc), 

round 4
MT_depth 18
IOP size: 2484 bytes
BCS size: 10272 bytes
number of two to one hashes: 346
number of leaves hashed: 108
oracles in round: TODO: Fill in this name (batching.tcc), 

round 5
MT_depth 16
IOP size: 2484 bytes
BCS size: 8704 bytes
number of two to one hashes: 297
number of leaves hashed: 108
oracles in round: TODO: Fill in this name (batching.tcc), 

round 6
MT_depth 14
IOP size: 2484 bytes
BCS size: 7360 bytes
number of two to one hashes: 255
number of leaves hashed: 108
oracles in round: TODO: Fill in this name (batching.tcc), 

round 7
MT_depth 12
IOP size: 2484 bytes
BCS size: 5376 bytes
number of two to one hashes: 193
number of leaves hashed: 108
oracles in round: TODO: Fill in this name (batching.tcc), 

round 8
MT_depth 10
IOP size: 2484 bytes
BCS size: 3776 bytes
number of two to one hashes: 143
number of leaves hashed: 108
oracles in round: TODO: Fill in this name (batching.tcc), 

round 9
MT_depth 8
IOP size: 2484 bytes
BCS size: 2400 bytes
number of two to one hashes: 100
number of leaves hashed: 108
oracles in round: TODO: Fill in this name (batching.tcc), 

round 10
MT_depth 6
IOP size: 2300 bytes
BCS size: 800 bytes
number of two to one hashes: 48
number of leaves hashed: 100
oracles in round: TODO: Fill in this name (batching.tcc), 


(enter) Aurora SNARK verifier              	[             ]	(418.3011s x1.00 from start)
  
Aurora SNARK parameters
  * security parameter (bits) = 128
  * RS extra dimensions = 5
  * LDT reducer soundness type = heuristic
  * FRI soundness type = heuristic
  * zero-knowledge = false
  * domain type = multiplicative coset

Aurora IOP parameters
  * target security parameter = 128
  * achieved security parameter = 108.0
  * RS extra dimensions = 5
  * codeword domain dim = 25
  * constraint domain dim = 20
  * variable domain dim = 20
  * query bound = 0
  * make zk = false
  * domain type = multiplicative coset

Multi lincheck parameters
  * target interactive soundness error (bits) = 131
  * achieved interactive soundness error (bits) = 160.0
  * interactive repetitions = 1
  * constraint domain dim = 20
  * make zk = false
  * domain type = multiplicative coset

LDT instance reducer parameters
  * soundness type = heuristic
  * target interactive soundness error (bits) = 131
  * achieved interactive soundness error (bits) = 155.0
  * codeword domain dim = 25
  * max tested degree bound = 1048576
  * max constraint degree bound = 2097151
  * absolute proximity parameter = 31457280
  * fractional proximity parameter = 0.937500
  * num output LDT instances = 1

FRI parameters
  * soundness type = heuristic
  * target interactive soundness error (bits) = 131
  * achieved interactive soundness error (bits) = 180.0
  * target query soundness error (bits) = 106
  * achieved query soundness error (bits) = 108.0
  * codeword domain dim = 25
  * effective proximity parameter = 0.937500
  * number of interactive repetitions = 1
  * number of query repetitions = 27
  * localization parameter array = { 1 2 2 2 2 2 2 2 2 2 }
  * number of reductions = 10

BCS parameters
  * digest_len (bytes) = 32
  * digest_len (bits) = 256
  * hash_type = blake2b
  (enter) Aurora IOP protocol initialization and registration	[             ]	(418.3012s x1.00 from start)
    (enter) verifier_seal_interaction_registrations	[             ]	(418.4052s x1.00 from start)
    (leave) verifier_seal_interaction_registrations	[0.0017s x1.00]	(418.4069s x1.00 from start)
  (leave) Aurora IOP protocol initialization and registration	[0.1059s x1.00]	(418.4071s x1.00 from start)
  (enter) Check semantic validity of IOP transcript	[             ]	(418.4072s x1.00 from start)
  (leave) Check semantic validity of IOP transcript	[0.0000s x1.02]	(418.4072s x1.00 from start)
  (enter) Construct R1CS verifier state      	[             ]	(418.4072s x1.00 from start)
    (enter) multi_lincheck compute alpha powers	[             ]	(418.4072s x1.00 from start)
    (leave) multi_lincheck compute alpha powers	[0.0260s x1.00]	(418.4332s x1.00 from start)
    (enter) multi_lincheck compute p_alpha_prime	[             ]	(418.4332s x1.00 from start)
    (leave) multi_lincheck compute p_alpha_prime	[0.0214s x1.00]	(418.4546s x1.00 from start)
    (enter) multi_lincheck compute p_alpha_ABC 	[             ]	(418.4546s x1.00 from start)
    (leave) multi_lincheck compute p_alpha_ABC 	[0.3413s x1.00]	(418.7959s x1.00 from start)
    (enter) multi_lincheck IFFT p_alphas       	[             ]	(418.7959s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(418.8048s x1.00 from start)
        * Vector size: 1048576
        * Coset size: 1048576
      (leave) Call to multiplicative_IFFT_wrapper	[0.8326s x1.00]	(419.6374s x1.00 from start)
      (enter) Call to multiplicative_IFFT_wrapper	[             ]	(419.6449s x1.00 from start)
        * Vector size: 1048576
        * Coset size: 1048576
      (leave) Call to multiplicative_IFFT_wrapper	[0.8209s x1.00]	(420.4658s x1.00 from start)
    (leave) multi_lincheck IFFT p_alphas       	[1.6734s x1.00]	(420.4694s x1.00 from start)
  (leave) Construct R1CS verifier state      	[2.0622s x1.00]	(420.4694s x1.00 from start)
  (enter) Check LDT verifier predicate       	[             ]	(420.4694s x1.00 from start)
    * Number of FRI interactions: 1
    * Number of FRI query sets per interaction: 27
    * Total number of FRI queries over all query sets (incl. repeated queries): 1026
  (leave) Check LDT verifier predicate       	[3.5300s x1.00]	(423.9994s x1.00 from start)
  * IOP transcript valid: true
  * Full protocol decision predicate satisfied: true
(leave) Aurora SNARK verifier              	[5.6984s x1.00]	(423.9995s x1.00 from start)


* Verifier satisfied: true
